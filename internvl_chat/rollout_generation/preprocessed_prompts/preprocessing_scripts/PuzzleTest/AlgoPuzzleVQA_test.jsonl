{"image": "images/water_jugs/water_jugs_0000.jpg", "question": "You are given 3 jugs of capacities 6, 5, 1 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 4, 3, 0 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["2", "1", "6", "5"], "answer": "1", "solution": {"num_jugs": 3, "capacities": [6, 5, 1], "total_water": 7, "start": [4, 2, 1], "end": [4, 3, 0], "steps": [[4, 2, 1], [4, 3, 0]], "num_steps": 1}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0001.jpg", "question": "You are given 3 jugs of capacities 11, 5, 4 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 11, 1, 1 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["5", "2", "3", "4"], "answer": "4", "solution": {"num_jugs": 3, "capacities": [11, 5, 4], "total_water": 13, "start": [11, 0, 2], "end": [11, 1, 1], "steps": [[11, 0, 2], [6, 5, 2], [8, 5, 0], [8, 1, 4], [11, 1, 1]], "num_steps": 4}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0002.jpg", "question": "You are given 3 jugs of capacities 9, 8, 2 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 5, 8, 0 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["4", "2", "3", "1"], "answer": "2", "solution": {"num_jugs": 3, "capacities": [9, 8, 2], "total_water": 13, "start": [8, 4, 1], "end": [5, 8, 0], "steps": [[8, 4, 1], [4, 8, 1], [5, 8, 0]], "num_steps": 2}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0003.jpg", "question": "You are given 3 jugs of capacities 9, 8, 2 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 9, 4, 0 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["4", "6", "1", "2"], "answer": "2", "solution": {"num_jugs": 3, "capacities": [9, 8, 2], "total_water": 13, "start": [3, 8, 2], "end": [9, 4, 0], "steps": [[3, 8, 2], [9, 2, 2], [9, 4, 0]], "num_steps": 2}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0004.jpg", "question": "You are given 3 jugs of capacities 10, 9, 4 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 1, 5, 4 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["4", "6", "3", "5"], "answer": "3", "solution": {"num_jugs": 3, "capacities": [10, 9, 4], "total_water": 10, "start": [6, 1, 3], "end": [1, 5, 4], "steps": [[6, 1, 3], [5, 1, 4], [5, 5, 0], [1, 5, 4]], "num_steps": 3}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0005.jpg", "question": "You are given 3 jugs of capacities 6, 5, 1 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 3, 3, 1 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["6", "3", "4", "1"], "answer": "3", "solution": {"num_jugs": 3, "capacities": [6, 5, 1], "total_water": 7, "start": [5, 2, 0], "end": [3, 3, 1], "steps": [[5, 2, 0], [4, 2, 1], [4, 3, 0], [3, 3, 1]], "num_steps": 3}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0006.jpg", "question": "You are given 3 jugs of capacities 9, 8, 2 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 4, 8, 1 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["5", "3", "1", "6"], "answer": "1", "solution": {"num_jugs": 3, "capacities": [9, 8, 2], "total_water": 13, "start": [6, 6, 1], "end": [4, 8, 1], "steps": [[6, 6, 1], [4, 8, 1]], "num_steps": 1}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0007.jpg", "question": "You are given 3 jugs of capacities 6, 5, 1 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 6, 0, 1 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["6", "1", "2", "3"], "answer": "2", "solution": {"num_jugs": 3, "capacities": [6, 5, 1], "total_water": 7, "start": [2, 5, 0], "end": [6, 0, 1], "steps": [[2, 5, 0], [1, 5, 1], [6, 0, 1]], "num_steps": 2}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0008.jpg", "question": "You are given 3 jugs of capacities 4, 3, 2 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 3, 3, 0 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["1", "2", "4", "5"], "answer": "1", "solution": {"num_jugs": 3, "capacities": [4, 3, 2], "total_water": 6, "start": [4, 2, 0], "end": [3, 3, 0], "steps": [[4, 2, 0], [3, 3, 0]], "num_steps": 1}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0009.jpg", "question": "You are given 3 jugs of capacities 9, 8, 2 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 7, 6, 0 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["4", "5", "1", "2"], "answer": "1", "solution": {"num_jugs": 3, "capacities": [9, 8, 2], "total_water": 13, "start": [7, 4, 2], "end": [7, 6, 0], "steps": [[7, 4, 2], [7, 6, 0]], "num_steps": 1}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0010.jpg", "question": "You are given 3 jugs of capacities 10, 9, 4 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 5, 5, 0 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["5", "4", "1", "2"], "answer": "4", "solution": {"num_jugs": 3, "capacities": [10, 9, 4], "total_water": 10, "start": [2, 6, 2], "end": [5, 5, 0], "steps": [[2, 6, 2], [4, 6, 0], [1, 9, 0], [1, 5, 4], [5, 5, 0]], "num_steps": 4}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0011.jpg", "question": "You are given 3 jugs of capacities 11, 5, 4 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 6, 5, 2 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["4", "1", "3", "2"], "answer": "2", "solution": {"num_jugs": 3, "capacities": [11, 5, 4], "total_water": 13, "start": [11, 2, 0], "end": [6, 5, 2], "steps": [[11, 2, 0], [11, 0, 2], [6, 5, 2]], "num_steps": 2}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0012.jpg", "question": "You are given 3 jugs of capacities 11, 5, 4 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 10, 3, 0 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["3", "1", "6", "2"], "answer": "2", "solution": {"num_jugs": 3, "capacities": [11, 5, 4], "total_water": 13, "start": [6, 4, 3], "end": [10, 3, 0], "steps": [[6, 4, 3], [10, 0, 3], [10, 3, 0]], "num_steps": 2}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0013.jpg", "question": "You are given 3 jugs of capacities 10, 9, 4 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 0, 6, 4 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["2", "1", "3", "6"], "answer": "2", "solution": {"num_jugs": 3, "capacities": [10, 9, 4], "total_water": 10, "start": [7, 0, 3], "end": [0, 6, 4], "steps": [[7, 0, 3], [0, 7, 3], [0, 6, 4]], "num_steps": 2}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0014.jpg", "question": "You are given 3 jugs of capacities 10, 9, 4 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 1, 9, 0 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["1", "2", "5", "4"], "answer": "2", "solution": {"num_jugs": 3, "capacities": [10, 9, 4], "total_water": 10, "start": [4, 4, 2], "end": [1, 9, 0], "steps": [[4, 4, 2], [6, 4, 0], [1, 9, 0]], "num_steps": 2}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0015.jpg", "question": "You are given 3 jugs of capacities 10, 9, 4 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 3, 3, 4 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["4", "6", "1", "2"], "answer": "1", "solution": {"num_jugs": 3, "capacities": [10, 9, 4], "total_water": 10, "start": [6, 3, 1], "end": [3, 3, 4], "steps": [[6, 3, 1], [3, 3, 4]], "num_steps": 1}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0016.jpg", "question": "You are given 3 jugs of capacities 11, 5, 4 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 11, 1, 1 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["1", "4", "3", "2"], "answer": "2", "solution": {"num_jugs": 3, "capacities": [11, 5, 4], "total_water": 13, "start": [8, 5, 0], "end": [11, 1, 1], "steps": [[8, 5, 0], [8, 1, 4], [11, 1, 1]], "num_steps": 2}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0017.jpg", "question": "You are given 3 jugs of capacities 10, 9, 4 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 8, 0, 2 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["2", "4", "1", "6"], "answer": "4", "solution": {"num_jugs": 3, "capacities": [10, 9, 4], "total_water": 10, "start": [6, 4, 0], "end": [8, 0, 2], "steps": [[6, 4, 0], [2, 4, 4], [2, 8, 0], [0, 8, 2], [8, 0, 2]], "num_steps": 4}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0018.jpg", "question": "You are given 3 jugs of capacities 4, 3, 2 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 4, 1, 1 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["6", "2", "1", "3"], "answer": "1", "solution": {"num_jugs": 3, "capacities": [4, 3, 2], "total_water": 6, "start": [3, 1, 2], "end": [4, 1, 1], "steps": [[3, 1, 2], [4, 1, 1]], "num_steps": 1}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0019.jpg", "question": "You are given 3 jugs of capacities 4, 3, 2 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 1, 3, 2 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["1", "5", "6", "2"], "answer": "2", "solution": {"num_jugs": 3, "capacities": [4, 3, 2], "total_water": 6, "start": [4, 1, 1], "end": [1, 3, 2], "steps": [[4, 1, 1], [2, 3, 1], [1, 3, 2]], "num_steps": 2}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0020.jpg", "question": "You are given 3 jugs of capacities 4, 3, 2 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 3, 1, 2 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["3", "4", "2", "1"], "answer": "1", "solution": {"num_jugs": 3, "capacities": [4, 3, 2], "total_water": 6, "start": [4, 1, 1], "end": [3, 1, 2], "steps": [[4, 1, 1], [3, 1, 2]], "num_steps": 1}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0021.jpg", "question": "You are given 3 jugs of capacities 10, 9, 4 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 9, 0, 1 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["4", "5", "1", "3"], "answer": "3", "solution": {"num_jugs": 3, "capacities": [10, 9, 4], "total_water": 10, "start": [7, 3, 0], "end": [9, 0, 1], "steps": [[7, 3, 0], [1, 9, 0], [0, 9, 1], [9, 0, 1]], "num_steps": 3}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0022.jpg", "question": "You are given 3 jugs of capacities 6, 5, 1 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 4, 2, 1 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["4", "5", "1", "2"], "answer": "4", "solution": {"num_jugs": 3, "capacities": [6, 5, 1], "total_water": 7, "start": [2, 5, 0], "end": [4, 2, 1], "steps": [[2, 5, 0], [6, 1, 0], [5, 1, 1], [5, 2, 0], [4, 2, 1]], "num_steps": 4}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0023.jpg", "question": "You are given 3 jugs of capacities 9, 8, 2 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 7, 6, 0 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["3", "6", "2", "4"], "answer": "3", "solution": {"num_jugs": 3, "capacities": [9, 8, 2], "total_water": 13, "start": [9, 3, 1], "end": [7, 6, 0], "steps": [[9, 3, 1], [9, 4, 0], [7, 4, 2], [7, 6, 0]], "num_steps": 3}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0024.jpg", "question": "You are given 3 jugs of capacities 10, 9, 4 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 9, 0, 1 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["6", "2", "3", "1"], "answer": "2", "solution": {"num_jugs": 3, "capacities": [10, 9, 4], "total_water": 10, "start": [0, 6, 4], "end": [9, 0, 1], "steps": [[0, 6, 4], [0, 9, 1], [9, 0, 1]], "num_steps": 2}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0025.jpg", "question": "You are given 3 jugs of capacities 9, 8, 2 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 9, 2, 2 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["5", "6", "1", "4"], "answer": "1", "solution": {"num_jugs": 3, "capacities": [9, 8, 2], "total_water": 13, "start": [9, 3, 1], "end": [9, 2, 2], "steps": [[9, 3, 1], [9, 2, 2]], "num_steps": 1}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0026.jpg", "question": "You are given 3 jugs of capacities 9, 8, 2 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 9, 2, 2 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["5", "4", "1", "6"], "answer": "1", "solution": {"num_jugs": 3, "capacities": [9, 8, 2], "total_water": 13, "start": [8, 3, 2], "end": [9, 2, 2], "steps": [[8, 3, 2], [9, 2, 2]], "num_steps": 1}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0027.jpg", "question": "You are given 3 jugs of capacities 4, 3, 2 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 4, 0, 2 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["6", "2", "1", "3"], "answer": "1", "solution": {"num_jugs": 3, "capacities": [4, 3, 2], "total_water": 6, "start": [3, 1, 2], "end": [4, 0, 2], "steps": [[3, 1, 2], [4, 0, 2]], "num_steps": 1}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0028.jpg", "question": "You are given 3 jugs of capacities 6, 5, 1 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 2, 4, 1 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["5", "1", "6", "3"], "answer": "1", "solution": {"num_jugs": 3, "capacities": [6, 5, 1], "total_water": 7, "start": [2, 5, 0], "end": [2, 4, 1], "steps": [[2, 5, 0], [2, 4, 1]], "num_steps": 1}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0029.jpg", "question": "You are given 3 jugs of capacities 11, 5, 4 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 8, 1, 4 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["4", "2", "3", "6"], "answer": "3", "solution": {"num_jugs": 3, "capacities": [11, 5, 4], "total_water": 13, "start": [10, 0, 3], "end": [8, 1, 4], "steps": [[10, 0, 3], [5, 5, 3], [8, 5, 0], [8, 1, 4]], "num_steps": 3}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0030.jpg", "question": "You are given 3 jugs of capacities 9, 8, 2 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 9, 3, 1 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["4", "2", "1", "3"], "answer": "1", "solution": {"num_jugs": 3, "capacities": [9, 8, 2], "total_water": 13, "start": [8, 4, 1], "end": [9, 3, 1], "steps": [[8, 4, 1], [9, 3, 1]], "num_steps": 1}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0031.jpg", "question": "You are given 3 jugs of capacities 11, 5, 4 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 5, 5, 3 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["4", "5", "6", "3"], "answer": "4", "solution": {"num_jugs": 3, "capacities": [11, 5, 4], "total_water": 13, "start": [11, 0, 2], "end": [5, 5, 3], "steps": [[11, 0, 2], [9, 0, 4], [9, 4, 0], [5, 4, 4], [5, 5, 3]], "num_steps": 4}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0032.jpg", "question": "You are given 3 jugs of capacities 9, 8, 2 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 5, 8, 0 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["2", "3", "1", "5"], "answer": "1", "solution": {"num_jugs": 3, "capacities": [9, 8, 2], "total_water": 13, "start": [8, 5, 0], "end": [5, 8, 0], "steps": [[8, 5, 0], [5, 8, 0]], "num_steps": 1}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0033.jpg", "question": "You are given 3 jugs of capacities 9, 8, 2 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 5, 6, 2 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["6", "3", "5", "4"], "answer": "3", "solution": {"num_jugs": 3, "capacities": [9, 8, 2], "total_water": 13, "start": [8, 4, 1], "end": [5, 6, 2], "steps": [[8, 4, 1], [4, 8, 1], [5, 8, 0], [5, 6, 2]], "num_steps": 3}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0034.jpg", "question": "You are given 4 jugs of capacities 10, 6, 5, 2 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 8, 6, 5, 1 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["1", "4", "2", "5"], "answer": "1", "solution": {"num_jugs": 4, "capacities": [10, 6, 5, 2], "total_water": 20, "start": [9, 5, 5, 1], "end": [8, 6, 5, 1], "steps": [[9, 5, 5, 1], [8, 6, 5, 1]], "num_steps": 1}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0035.jpg", "question": "You are given 4 jugs of capacities 12, 7, 4, 2 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 7, 7, 2, 2 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["2", "5", "1", "4"], "answer": "2", "solution": {"num_jugs": 4, "capacities": [12, 7, 4, 2], "total_water": 18, "start": [10, 4, 3, 1], "end": [7, 7, 2, 2], "steps": [[10, 4, 3, 1], [7, 7, 3, 1], [7, 7, 2, 2]], "num_steps": 2}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0036.jpg", "question": "You are given 4 jugs of capacities 13, 11, 7, 1 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 9, 11, 7, 0 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["1", "2", "4", "6"], "answer": "2", "solution": {"num_jugs": 4, "capacities": [13, 11, 7, 1], "total_water": 27, "start": [13, 8, 6, 0], "end": [9, 11, 7, 0], "steps": [[13, 8, 6, 0], [10, 11, 6, 0], [9, 11, 7, 0]], "num_steps": 2}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0037.jpg", "question": "You are given 4 jugs of capacities 13, 11, 7, 1 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 13, 7, 7, 0 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["6", "4", "1", "5"], "answer": "1", "solution": {"num_jugs": 4, "capacities": [13, 11, 7, 1], "total_water": 27, "start": [13, 6, 7, 1], "end": [13, 7, 7, 0], "steps": [[13, 6, 7, 1], [13, 7, 7, 0]], "num_steps": 1}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0038.jpg", "question": "You are given 4 jugs of capacities 14, 13, 7, 6 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 13, 6, 4, 6 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["4", "1", "6", "2"], "answer": "4", "solution": {"num_jugs": 4, "capacities": [14, 13, 7, 6], "total_water": 29, "start": [10, 11, 3, 5], "end": [13, 6, 4, 6], "steps": [[10, 11, 3, 5], [13, 11, 0, 5], [13, 13, 0, 3], [13, 6, 7, 3], [13, 6, 4, 6]], "num_steps": 4}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0039.jpg", "question": "You are given 4 jugs of capacities 13, 11, 9, 2 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 7, 8, 6, 2 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["4", "3", "6", "1"], "answer": "3", "solution": {"num_jugs": 4, "capacities": [13, 11, 9, 2], "total_water": 23, "start": [5, 10, 7, 1], "end": [7, 8, 6, 2], "steps": [[5, 10, 7, 1], [5, 10, 6, 2], [7, 10, 6, 0], [7, 8, 6, 2]], "num_steps": 3}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0040.jpg", "question": "You are given 4 jugs of capacities 10, 6, 5, 2 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 10, 5, 5, 0 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["4", "2", "3", "1"], "answer": "2", "solution": {"num_jugs": 4, "capacities": [10, 6, 5, 2], "total_water": 20, "start": [9, 4, 5, 2], "end": [10, 5, 5, 0], "steps": [[9, 4, 5, 2], [10, 3, 5, 2], [10, 5, 5, 0]], "num_steps": 2}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0041.jpg", "question": "You are given 4 jugs of capacities 10, 6, 5, 2 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 8, 6, 4, 2 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["2", "4", "1", "6"], "answer": "2", "solution": {"num_jugs": 4, "capacities": [10, 6, 5, 2], "total_water": 20, "start": [10, 6, 3, 1], "end": [8, 6, 4, 2], "steps": [[10, 6, 3, 1], [8, 6, 5, 1], [8, 6, 4, 2]], "num_steps": 2}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0042.jpg", "question": "You are given 4 jugs of capacities 12, 7, 4, 2 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 12, 3, 2, 1 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["4", "1", "2", "3"], "answer": "4", "solution": {"num_jugs": 4, "capacities": [12, 7, 4, 2], "total_water": 18, "start": [11, 4, 1, 2], "end": [12, 3, 2, 1], "steps": [[11, 4, 1, 2], [11, 1, 4, 2], [11, 3, 4, 0], [11, 3, 2, 2], [12, 3, 2, 1]], "num_steps": 4}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0043.jpg", "question": "You are given 4 jugs of capacities 9, 6, 4, 1 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 6, 3, 3, 0 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["5", "6", "3", "2"], "answer": "3", "solution": {"num_jugs": 4, "capacities": [9, 6, 4, 1], "total_water": 12, "start": [6, 1, 4, 1], "end": [6, 3, 3, 0], "steps": [[6, 1, 4, 1], [6, 2, 4, 0], [6, 2, 3, 1], [6, 3, 3, 0]], "num_steps": 3}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0044.jpg", "question": "You are given 4 jugs of capacities 12, 7, 4, 2 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 11, 5, 2, 0 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["5", "4", "3", "1"], "answer": "3", "solution": {"num_jugs": 4, "capacities": [12, 7, 4, 2], "total_water": 18, "start": [10, 6, 1, 1], "end": [11, 5, 2, 0], "steps": [[10, 6, 1, 1], [10, 5, 1, 2], [11, 5, 0, 2], [11, 5, 2, 0]], "num_steps": 3}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0045.jpg", "question": "You are given 4 jugs of capacities 13, 9, 6, 3 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 13, 6, 6, 3 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["5", "2", "4", "6"], "answer": "2", "solution": {"num_jugs": 4, "capacities": [13, 9, 6, 3], "total_water": 28, "start": [12, 8, 6, 2], "end": [13, 6, 6, 3], "steps": [[12, 8, 6, 2], [11, 8, 6, 3], [13, 6, 6, 3]], "num_steps": 2}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0046.jpg", "question": "You are given 4 jugs of capacities 13, 11, 7, 1 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 13, 8, 6, 0 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["1", "6", "2", "3"], "answer": "3", "solution": {"num_jugs": 4, "capacities": [13, 11, 7, 1], "total_water": 27, "start": [12, 11, 3, 1], "end": [13, 8, 6, 0], "steps": [[12, 11, 3, 1], [12, 7, 7, 1], [13, 7, 6, 1], [13, 8, 6, 0]], "num_steps": 3}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0047.jpg", "question": "You are given 4 jugs of capacities 13, 11, 7, 1 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 8, 11, 7, 1 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["1", "5", "3", "4"], "answer": "1", "solution": {"num_jugs": 4, "capacities": [13, 11, 7, 1], "total_water": 27, "start": [12, 11, 3, 1], "end": [8, 11, 7, 1], "steps": [[12, 11, 3, 1], [8, 11, 7, 1]], "num_steps": 1}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0048.jpg", "question": "You are given 4 jugs of capacities 10, 6, 5, 2 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 8, 6, 4, 2 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["5", "4", "2", "3"], "answer": "2", "solution": {"num_jugs": 4, "capacities": [10, 6, 5, 2], "total_water": 20, "start": [10, 5, 5, 0], "end": [8, 6, 4, 2], "steps": [[10, 5, 5, 0], [8, 5, 5, 2], [8, 6, 4, 2]], "num_steps": 2}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0049.jpg", "question": "You are given 4 jugs of capacities 14, 13, 7, 6 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 13, 8, 7, 1 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["3", "2", "5", "1"], "answer": "2", "solution": {"num_jugs": 4, "capacities": [14, 13, 7, 6], "total_water": 29, "start": [11, 11, 6, 1], "end": [13, 8, 7, 1], "steps": [[11, 11, 6, 1], [14, 8, 6, 1], [13, 8, 7, 1]], "num_steps": 2}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0050.jpg", "question": "You are given 4 jugs of capacities 13, 11, 9, 2 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 8, 8, 7, 0 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["6", "1", "4", "5"], "answer": "1", "solution": {"num_jugs": 4, "capacities": [13, 11, 9, 2], "total_water": 23, "start": [6, 8, 7, 2], "end": [8, 8, 7, 0], "steps": [[6, 8, 7, 2], [8, 8, 7, 0]], "num_steps": 1}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0051.jpg", "question": "You are given 4 jugs of capacities 13, 11, 7, 1 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 13, 6, 7, 1 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["3", "2", "1", "6"], "answer": "2", "solution": {"num_jugs": 4, "capacities": [13, 11, 7, 1], "total_water": 27, "start": [11, 9, 7, 0], "end": [13, 6, 7, 1], "steps": [[11, 9, 7, 0], [10, 9, 7, 1], [13, 6, 7, 1]], "num_steps": 2}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0052.jpg", "question": "You are given 4 jugs of capacities 13, 11, 7, 1 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 11, 10, 5, 1 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["6", "4", "5", "3"], "answer": "4", "solution": {"num_jugs": 4, "capacities": [13, 11, 7, 1], "total_water": 27, "start": [13, 10, 3, 1], "end": [11, 10, 5, 1], "steps": [[13, 10, 3, 1], [13, 10, 4, 0], [12, 10, 4, 1], [12, 10, 5, 0], [11, 10, 5, 1]], "num_steps": 4}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0053.jpg", "question": "You are given 4 jugs of capacities 13, 12, 6, 5 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 0, 5, 6, 3 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["4", "3", "2", "5"], "answer": "3", "solution": {"num_jugs": 4, "capacities": [13, 12, 6, 5], "total_water": 14, "start": [5, 6, 3, 0], "end": [0, 5, 6, 3], "steps": [[5, 6, 3, 0], [0, 11, 3, 0], [0, 11, 0, 3], [0, 5, 6, 3]], "num_steps": 3}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0054.jpg", "question": "You are given 4 jugs of capacities 9, 6, 4, 1 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 2, 5, 4, 1 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["1", "4", "6", "2"], "answer": "2", "solution": {"num_jugs": 4, "capacities": [9, 6, 4, 1], "total_water": 12, "start": [6, 1, 4, 1], "end": [2, 5, 4, 1], "steps": [[6, 1, 4, 1], [6, 5, 0, 1], [2, 5, 4, 1]], "num_steps": 2}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0055.jpg", "question": "You are given 4 jugs of capacities 13, 11, 7, 1 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 12, 11, 4, 0 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["2", "1", "3", "5"], "answer": "3", "solution": {"num_jugs": 4, "capacities": [13, 11, 7, 1], "total_water": 27, "start": [10, 9, 7, 1], "end": [12, 11, 4, 0], "steps": [[10, 9, 7, 1], [13, 9, 4, 1], [11, 11, 4, 1], [12, 11, 4, 0]], "num_steps": 3}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0056.jpg", "question": "You are given 4 jugs of capacities 13, 11, 7, 1 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 13, 11, 2, 1 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["3", "2", "1", "6"], "answer": "2", "solution": {"num_jugs": 4, "capacities": [13, 11, 7, 1], "total_water": 27, "start": [12, 11, 4, 0], "end": [13, 11, 2, 1], "steps": [[12, 11, 4, 0], [11, 11, 4, 1], [13, 11, 2, 1]], "num_steps": 2}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0057.jpg", "question": "You are given 4 jugs of capacities 10, 6, 5, 2 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 10, 6, 2, 2 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["1", "6", "3", "2"], "answer": "1", "solution": {"num_jugs": 4, "capacities": [10, 6, 5, 2], "total_water": 20, "start": [8, 6, 4, 2], "end": [10, 6, 2, 2], "steps": [[8, 6, 4, 2], [10, 6, 2, 2]], "num_steps": 1}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0058.jpg", "question": "You are given 4 jugs of capacities 12, 7, 4, 2 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 8, 6, 2, 2 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["4", "5", "3", "6"], "answer": "3", "solution": {"num_jugs": 4, "capacities": [12, 7, 4, 2], "total_water": 18, "start": [6, 7, 4, 1], "end": [8, 6, 2, 2], "steps": [[6, 7, 4, 1], [6, 6, 4, 2], [8, 6, 4, 0], [8, 6, 2, 2]], "num_steps": 3}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0059.jpg", "question": "You are given 4 jugs of capacities 12, 7, 4, 2 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 7, 5, 4, 2 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["2", "1", "3", "6"], "answer": "1", "solution": {"num_jugs": 4, "capacities": [12, 7, 4, 2], "total_water": 18, "start": [9, 5, 2, 2], "end": [7, 5, 4, 2], "steps": [[9, 5, 2, 2], [7, 5, 4, 2]], "num_steps": 1}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0060.jpg", "question": "You are given 4 jugs of capacities 10, 6, 5, 2 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 10, 6, 3, 1 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["3", "2", "5", "1"], "answer": "2", "solution": {"num_jugs": 4, "capacities": [10, 6, 5, 2], "total_water": 20, "start": [8, 6, 4, 2], "end": [10, 6, 3, 1], "steps": [[8, 6, 4, 2], [8, 6, 5, 1], [10, 6, 3, 1]], "num_steps": 2}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0061.jpg", "question": "You are given 4 jugs of capacities 13, 11, 7, 1 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 11, 11, 4, 1 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["1", "4", "3", "6"], "answer": "4", "solution": {"num_jugs": 4, "capacities": [13, 11, 7, 1], "total_water": 27, "start": [9, 11, 6, 1], "end": [11, 11, 4, 1], "steps": [[9, 11, 6, 1], [10, 11, 6, 0], [10, 11, 5, 1], [11, 11, 5, 0], [11, 11, 4, 1]], "num_steps": 4}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0062.jpg", "question": "You are given 4 jugs of capacities 13, 9, 6, 3 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 13, 9, 3, 3 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["2", "4", "1", "6"], "answer": "2", "solution": {"num_jugs": 4, "capacities": [13, 9, 6, 3], "total_water": 28, "start": [13, 8, 5, 2], "end": [13, 9, 3, 3], "steps": [[13, 8, 5, 2], [13, 7, 5, 3], [13, 9, 3, 3]], "num_steps": 2}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0063.jpg", "question": "You are given 4 jugs of capacities 10, 6, 5, 2 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 9, 6, 3, 2 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["2", "6", "5", "4"], "answer": "2", "solution": {"num_jugs": 4, "capacities": [10, 6, 5, 2], "total_water": 20, "start": [8, 6, 5, 1], "end": [9, 6, 3, 2], "steps": [[8, 6, 5, 1], [10, 6, 3, 1], [9, 6, 3, 2]], "num_steps": 2}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0064.jpg", "question": "You are given 4 jugs of capacities 13, 9, 6, 3 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 13, 8, 4, 3 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["2", "6", "1", "4"], "answer": "2", "solution": {"num_jugs": 4, "capacities": [13, 9, 6, 3], "total_water": 28, "start": [12, 9, 6, 1], "end": [13, 8, 4, 3], "steps": [[12, 9, 6, 1], [13, 8, 6, 1], [13, 8, 4, 3]], "num_steps": 2}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0065.jpg", "question": "You are given 4 jugs of capacities 13, 11, 7, 1 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 12, 8, 6, 1 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["6", "5", "4", "3"], "answer": "3", "solution": {"num_jugs": 4, "capacities": [13, 11, 7, 1], "total_water": 27, "start": [10, 10, 7, 0], "end": [12, 8, 6, 1], "steps": [[10, 10, 7, 0], [10, 11, 6, 0], [13, 8, 6, 0], [12, 8, 6, 1]], "num_steps": 3}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0066.jpg", "question": "You are given 4 jugs of capacities 10, 6, 5, 2 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 10, 5, 3, 2 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["4", "6", "3", "1"], "answer": "1", "solution": {"num_jugs": 4, "capacities": [10, 6, 5, 2], "total_water": 20, "start": [10, 6, 3, 1], "end": [10, 5, 3, 2], "steps": [[10, 6, 3, 1], [10, 5, 3, 2]], "num_steps": 1}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0067.jpg", "question": "You are given 5 jugs of capacities 11, 9, 8, 4, 3 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 1, 4, 6, 0, 3 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["5", "3", "2", "6"], "answer": "3", "solution": {"num_jugs": 5, "capacities": [11, 9, 8, 4, 3], "total_water": 14, "start": [1, 7, 1, 2, 3], "end": [1, 4, 6, 0, 3], "steps": [[1, 7, 1, 2, 3], [1, 0, 8, 2, 3], [1, 0, 6, 4, 3], [1, 4, 6, 0, 3]], "num_steps": 3}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0068.jpg", "question": "You are given 5 jugs of capacities 14, 9, 7, 6, 1 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 10, 7, 7, 3, 0 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["4", "6", "1", "3"], "answer": "3", "solution": {"num_jugs": 5, "capacities": [14, 9, 7, 6, 1], "total_water": 27, "start": [13, 8, 3, 2, 1], "end": [10, 7, 7, 3, 0], "steps": [[13, 8, 3, 2, 1], [14, 7, 3, 2, 1], [10, 7, 7, 2, 1], [10, 7, 7, 3, 0]], "num_steps": 3}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0069.jpg", "question": "You are given 5 jugs of capacities 12, 11, 8, 7, 6 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 6, 8, 1, 0, 4 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["1", "4", "3", "5"], "answer": "4", "solution": {"num_jugs": 5, "capacities": [12, 11, 8, 7, 6], "total_water": 19, "start": [6, 5, 4, 4, 0], "end": [6, 8, 1, 0, 4], "steps": [[6, 5, 4, 4, 0], [6, 1, 8, 4, 0], [6, 1, 8, 0, 4], [6, 1, 1, 7, 4], [6, 8, 1, 0, 4]], "num_steps": 4}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0070.jpg", "question": "You are given 5 jugs of capacities 14, 9, 7, 6, 1 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 12, 9, 0, 6, 0 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["3", "6", "2", "5"], "answer": "3", "solution": {"num_jugs": 5, "capacities": [14, 9, 7, 6, 1], "total_water": 27, "start": [13, 7, 6, 0, 1], "end": [12, 9, 0, 6, 0], "steps": [[13, 7, 6, 0, 1], [11, 9, 6, 0, 1], [11, 9, 0, 6, 1], [12, 9, 0, 6, 0]], "num_steps": 3}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0071.jpg", "question": "You are given 5 jugs of capacities 11, 9, 8, 4, 3 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 5, 0, 3, 3, 3 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["1", "5", "4", "2"], "answer": "4", "solution": {"num_jugs": 5, "capacities": [11, 9, 8, 4, 3], "total_water": 14, "start": [1, 1, 8, 3, 1], "end": [5, 0, 3, 3, 3], "steps": [[1, 1, 8, 3, 1], [2, 0, 8, 3, 1], [2, 0, 6, 3, 3], [5, 0, 6, 3, 0], [5, 0, 3, 3, 3]], "num_steps": 4}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0072.jpg", "question": "You are given 5 jugs of capacities 14, 9, 7, 6, 1 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 9, 6, 7, 5, 0 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["2", "4", "6", "1"], "answer": "2", "solution": {"num_jugs": 5, "capacities": [14, 9, 7, 6, 1], "total_water": 27, "start": [12, 6, 3, 5, 1], "end": [9, 6, 7, 5, 0], "steps": [[12, 6, 3, 5, 1], [8, 6, 7, 5, 1], [9, 6, 7, 5, 0]], "num_steps": 2}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0073.jpg", "question": "You are given 5 jugs of capacities 12, 9, 7, 3, 1 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 6, 8, 2, 3, 1 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["4", "1", "6", "5"], "answer": "1", "solution": {"num_jugs": 5, "capacities": [12, 9, 7, 3, 1], "total_water": 20, "start": [6, 8, 5, 0, 1], "end": [6, 8, 2, 3, 1], "steps": [[6, 8, 5, 0, 1], [6, 8, 2, 3, 1]], "num_steps": 1}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0074.jpg", "question": "You are given 5 jugs of capacities 11, 9, 8, 4, 3 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 9, 0, 1, 4, 0 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["2", "6", "4", "5"], "answer": "4", "solution": {"num_jugs": 5, "capacities": [11, 9, 8, 4, 3], "total_water": 14, "start": [0, 3, 6, 2, 3], "end": [9, 0, 1, 4, 0], "steps": [[0, 3, 6, 2, 3], [3, 0, 6, 2, 3], [9, 0, 0, 2, 3], [9, 0, 3, 2, 0], [9, 0, 1, 4, 0]], "num_steps": 4}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0075.jpg", "question": "You are given 5 jugs of capacities 14, 9, 7, 6, 1 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 13, 8, 3, 2, 1 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["6", "3", "2", "5"], "answer": "3", "solution": {"num_jugs": 5, "capacities": [14, 9, 7, 6, 1], "total_water": 27, "start": [12, 6, 3, 5, 1], "end": [13, 8, 3, 2, 1], "steps": [[12, 6, 3, 5, 1], [12, 9, 3, 2, 1], [13, 9, 3, 2, 0], [13, 8, 3, 2, 1]], "num_steps": 3}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0076.jpg", "question": "You are given 5 jugs of capacities 14, 9, 7, 6, 1 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 9, 6, 7, 5, 0 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["2", "1", "4", "6"], "answer": "4", "solution": {"num_jugs": 5, "capacities": [14, 9, 7, 6, 1], "total_water": 27, "start": [14, 9, 2, 2, 0], "end": [9, 6, 7, 5, 0], "steps": [[14, 9, 2, 2, 0], [9, 9, 7, 2, 0], [9, 5, 7, 6, 0], [9, 5, 7, 5, 1], [9, 6, 7, 5, 0]], "num_steps": 4}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0077.jpg", "question": "You are given 5 jugs of capacities 11, 9, 8, 4, 3 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 9, 0, 1, 4, 0 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["4", "1", "3", "5"], "answer": "3", "solution": {"num_jugs": 5, "capacities": [11, 9, 8, 4, 3], "total_water": 14, "start": [1, 1, 8, 3, 1], "end": [9, 0, 1, 4, 0], "steps": [[1, 1, 8, 3, 1], [1, 0, 8, 4, 1], [9, 0, 0, 4, 1], [9, 0, 1, 4, 0]], "num_steps": 3}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0078.jpg", "question": "You are given 5 jugs of capacities 12, 9, 7, 3, 1 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 6, 9, 2, 2, 1 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["6", "5", "3", "1"], "answer": "3", "solution": {"num_jugs": 5, "capacities": [12, 9, 7, 3, 1], "total_water": 20, "start": [5, 4, 7, 3, 1], "end": [6, 9, 2, 2, 1], "steps": [[5, 4, 7, 3, 1], [5, 9, 2, 3, 1], [6, 9, 2, 3, 0], [6, 9, 2, 2, 1]], "num_steps": 3}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0079.jpg", "question": "You are given 5 jugs of capacities 14, 11, 8, 7, 2 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 6, 9, 0, 6, 0 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["5", "2", "3", "4"], "answer": "4", "solution": {"num_jugs": 5, "capacities": [14, 11, 8, 7, 2], "total_water": 21, "start": [4, 10, 3, 4, 0], "end": [6, 9, 0, 6, 0], "steps": [[4, 10, 3, 4, 0], [3, 11, 3, 4, 0], [3, 9, 3, 4, 2], [6, 9, 0, 4, 2], [6, 9, 0, 6, 0]], "num_steps": 4}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0080.jpg", "question": "You are given 5 jugs of capacities 14, 11, 9, 6, 1 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 13, 9, 6, 0, 1 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["2", "1", "5", "4"], "answer": "4", "solution": {"num_jugs": 5, "capacities": [14, 11, 9, 6, 1], "total_water": 29, "start": [4, 11, 8, 6, 0], "end": [13, 9, 6, 0, 1], "steps": [[4, 11, 8, 6, 0], [14, 1, 8, 6, 0], [13, 1, 8, 6, 1], [13, 9, 0, 6, 1], [13, 9, 6, 0, 1]], "num_steps": 4}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0081.jpg", "question": "You are given 5 jugs of capacities 12, 11, 8, 7, 6 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 12, 4, 1, 2, 0 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["1", "3", "5", "4"], "answer": "4", "solution": {"num_jugs": 5, "capacities": [12, 11, 8, 7, 6], "total_water": 19, "start": [4, 6, 8, 1, 0], "end": [12, 4, 1, 2, 0], "steps": [[4, 6, 8, 1, 0], [5, 6, 8, 0, 0], [5, 6, 1, 7, 0], [5, 11, 1, 2, 0], [12, 4, 1, 2, 0]], "num_steps": 4}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0082.jpg", "question": "You are given 5 jugs of capacities 12, 11, 8, 7, 6 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 10, 1, 1, 7, 0 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["1", "5", "4", "2"], "answer": "4", "solution": {"num_jugs": 5, "capacities": [12, 11, 8, 7, 6], "total_water": 19, "start": [3, 7, 2, 5, 2], "end": [10, 1, 1, 7, 0], "steps": [[3, 7, 2, 5, 2], [3, 1, 8, 5, 2], [8, 1, 8, 0, 2], [8, 1, 1, 7, 2], [10, 1, 1, 7, 0]], "num_steps": 4}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0083.jpg", "question": "You are given 5 jugs of capacities 12, 11, 8, 7, 6 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 0, 3, 3, 7, 6 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["1", "4", "3", "2"], "answer": "3", "solution": {"num_jugs": 5, "capacities": [12, 11, 8, 7, 6], "total_water": 19, "start": [3, 4, 6, 1, 5], "end": [0, 3, 3, 7, 6], "steps": [[3, 4, 6, 1, 5], [0, 4, 6, 4, 5], [0, 3, 6, 4, 6], [0, 3, 3, 7, 6]], "num_steps": 3}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0084.jpg", "question": "You are given 5 jugs of capacities 14, 9, 7, 6, 1 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 14, 5, 2, 5, 1 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["1", "3", "6", "4"], "answer": "4", "solution": {"num_jugs": 5, "capacities": [14, 9, 7, 6, 1], "total_water": 27, "start": [14, 6, 5, 1, 1], "end": [14, 5, 2, 5, 1], "steps": [[14, 6, 5, 1, 1], [14, 4, 7, 1, 1], [14, 4, 2, 6, 1], [14, 5, 2, 6, 0], [14, 5, 2, 5, 1]], "num_steps": 4}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0085.jpg", "question": "You are given 5 jugs of capacities 14, 11, 9, 6, 1 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 6, 8, 9, 6, 0 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["3", "1", "2", "5"], "answer": "2", "solution": {"num_jugs": 5, "capacities": [14, 11, 9, 6, 1], "total_water": 29, "start": [6, 10, 8, 4, 1], "end": [6, 8, 9, 6, 0], "steps": [[6, 10, 8, 4, 1], [6, 8, 8, 6, 1], [6, 8, 9, 6, 0]], "num_steps": 2}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0086.jpg", "question": "You are given 5 jugs of capacities 14, 9, 7, 6, 1 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 14, 6, 5, 1, 1 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["2", "6", "3", "4"], "answer": "3", "solution": {"num_jugs": 5, "capacities": [14, 9, 7, 6, 1], "total_water": 27, "start": [13, 6, 3, 4, 1], "end": [14, 6, 5, 1, 1], "steps": [[13, 6, 3, 4, 1], [9, 6, 7, 4, 1], [9, 6, 5, 6, 1], [14, 6, 5, 1, 1]], "num_steps": 3}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0087.jpg", "question": "You are given 5 jugs of capacities 14, 11, 9, 6, 1 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 13, 7, 4, 4, 1 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["5", "6", "1", "4"], "answer": "4", "solution": {"num_jugs": 5, "capacities": [14, 11, 9, 6, 1], "total_water": 29, "start": [13, 6, 7, 3, 0], "end": [13, 7, 4, 4, 1], "steps": [[13, 6, 7, 3, 0], [13, 6, 4, 6, 0], [13, 6, 4, 5, 1], [13, 7, 4, 5, 0], [13, 7, 4, 4, 1]], "num_steps": 4}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0088.jpg", "question": "You are given 5 jugs of capacities 14, 11, 9, 6, 1 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 12, 2, 9, 6, 0 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["6", "3", "5", "2"], "answer": "2", "solution": {"num_jugs": 5, "capacities": [14, 11, 9, 6, 1], "total_water": 29, "start": [4, 11, 8, 6, 0], "end": [12, 2, 9, 6, 0], "steps": [[4, 11, 8, 6, 0], [12, 11, 0, 6, 0], [12, 2, 9, 6, 0]], "num_steps": 2}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0089.jpg", "question": "You are given 5 jugs of capacities 12, 11, 8, 7, 6 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 0, 3, 3, 7, 6 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["3", "4", "6", "5"], "answer": "4", "solution": {"num_jugs": 5, "capacities": [12, 11, 8, 7, 6], "total_water": 19, "start": [5, 5, 6, 3, 0], "end": [0, 3, 3, 7, 6], "steps": [[5, 5, 6, 3, 0], [0, 10, 6, 3, 0], [0, 10, 0, 3, 6], [0, 10, 3, 0, 6], [0, 3, 3, 7, 6]], "num_steps": 4}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0090.jpg", "question": "You are given 5 jugs of capacities 12, 9, 7, 3, 1 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 12, 3, 3, 1, 1 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["4", "6", "5", "1"], "answer": "4", "solution": {"num_jugs": 5, "capacities": [12, 9, 7, 3, 1], "total_water": 20, "start": [6, 8, 5, 0, 1], "end": [12, 3, 3, 1, 1], "steps": [[6, 8, 5, 0, 1], [6, 5, 5, 3, 1], [6, 5, 7, 1, 1], [6, 9, 3, 1, 1], [12, 3, 3, 1, 1]], "num_steps": 4}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0091.jpg", "question": "You are given 5 jugs of capacities 11, 9, 8, 4, 3 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 1, 4, 6, 0, 3 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["2", "6", "3", "5"], "answer": "3", "solution": {"num_jugs": 5, "capacities": [11, 9, 8, 4, 3], "total_water": 14, "start": [5, 3, 2, 1, 3], "end": [1, 4, 6, 0, 3], "steps": [[5, 3, 2, 1, 3], [5, 4, 2, 0, 3], [1, 4, 2, 4, 3], [1, 4, 6, 0, 3]], "num_steps": 3}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0092.jpg", "question": "You are given 5 jugs of capacities 12, 9, 7, 3, 1 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 9, 3, 7, 0, 1 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["1", "4", "2", "3"], "answer": "1", "solution": {"num_jugs": 5, "capacities": [12, 9, 7, 3, 1], "total_water": 20, "start": [10, 3, 6, 0, 1], "end": [9, 3, 7, 0, 1], "steps": [[10, 3, 6, 0, 1], [9, 3, 7, 0, 1]], "num_steps": 1}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0093.jpg", "question": "You are given 5 jugs of capacities 12, 11, 8, 7, 6 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 2, 3, 7, 7, 0 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["6", "2", "5", "3"], "answer": "3", "solution": {"num_jugs": 5, "capacities": [12, 11, 8, 7, 6], "total_water": 19, "start": [8, 10, 1, 0, 0], "end": [2, 3, 7, 7, 0], "steps": [[8, 10, 1, 0, 0], [2, 10, 1, 0, 6], [2, 3, 1, 7, 6], [2, 3, 7, 7, 0]], "num_steps": 3}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0094.jpg", "question": "You are given 5 jugs of capacities 14, 9, 7, 6, 1 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 13, 8, 1, 5, 0 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["3", "6", "4", "1"], "answer": "4", "solution": {"num_jugs": 5, "capacities": [14, 9, 7, 6, 1], "total_water": 27, "start": [13, 6, 3, 4, 1], "end": [13, 8, 1, 5, 0], "steps": [[13, 6, 3, 4, 1], [13, 9, 0, 4, 1], [13, 9, 1, 4, 0], [13, 8, 1, 4, 1], [13, 8, 1, 5, 0]], "num_steps": 4}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0095.jpg", "question": "You are given 5 jugs of capacities 14, 11, 8, 7, 2 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 0, 10, 3, 6, 2 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["5", "2", "4", "6"], "answer": "4", "solution": {"num_jugs": 5, "capacities": [14, 11, 8, 7, 2], "total_water": 21, "start": [10, 3, 2, 5, 1], "end": [0, 10, 3, 6, 2], "steps": [[10, 3, 2, 5, 1], [10, 0, 5, 5, 1], [0, 10, 5, 5, 1], [0, 10, 3, 7, 1], [0, 10, 3, 6, 2]], "num_steps": 4}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0096.jpg", "question": "You are given 5 jugs of capacities 12, 9, 7, 3, 1 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 12, 4, 0, 3, 1 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["1", "5", "6", "3"], "answer": "1", "solution": {"num_jugs": 5, "capacities": [12, 9, 7, 3, 1], "total_water": 20, "start": [5, 4, 7, 3, 1], "end": [12, 4, 0, 3, 1], "steps": [[5, 4, 7, 3, 1], [12, 4, 0, 3, 1]], "num_steps": 1}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0097.jpg", "question": "You are given 5 jugs of capacities 14, 11, 9, 6, 1 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 12, 2, 9, 6, 0 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["4", "1", "3", "2"], "answer": "4", "solution": {"num_jugs": 5, "capacities": [14, 11, 9, 6, 1], "total_water": 29, "start": [10, 9, 3, 6, 1], "end": [12, 2, 9, 6, 0], "steps": [[10, 9, 3, 6, 1], [8, 11, 3, 6, 1], [11, 11, 0, 6, 1], [11, 2, 9, 6, 1], [12, 2, 9, 6, 0]], "num_steps": 4}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0098.jpg", "question": "You are given 5 jugs of capacities 14, 11, 8, 7, 2 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 11, 2, 5, 1, 2 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["1", "3", "2", "4"], "answer": "3", "solution": {"num_jugs": 5, "capacities": [14, 11, 8, 7, 2], "total_water": 21, "start": [10, 3, 5, 1, 2], "end": [11, 2, 5, 1, 2], "steps": [[10, 3, 5, 1, 2], [13, 0, 5, 1, 2], [13, 2, 5, 1, 0], [11, 2, 5, 1, 2]], "num_steps": 3}, "source_file": "water_jugs.json"}
{"image": "images/water_jugs/water_jugs_0099.jpg", "question": "You are given 5 jugs of capacities 14, 9, 7, 6, 1 litres. Initially, the amount of water that is contained in each jar is shown in the image. A single step of water pouring from one jug to another is constrained by the following rules: i) take a non-empty jug and pour water from it to another non-full jug until the first one becomes empty or the second one becomes full; and ii) no water can be split while pouring. The objective is to reach the amounts of 6, 8, 6, 6, 1 litres of water in the jugs from left to right, respectively. What is the minimum number of water pouring steps required to achieve the objective?", "options": ["2", "5", "1", "4"], "answer": "2", "solution": {"num_jugs": 5, "capacities": [14, 9, 7, 6, 1], "total_water": 27, "start": [12, 3, 6, 6, 0], "end": [6, 8, 6, 6, 1], "steps": [[12, 3, 6, 6, 0], [6, 9, 6, 6, 0], [6, 8, 6, 6, 1]], "num_steps": 2}, "source_file": "water_jugs.json"}
{"image": "images/calendar/calendar_0000.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. The previous year was a non-leap year. Which day of the week was on August 2 of the previous year?", "options": ["Monday", "Sunday", "Saturday", "Thursday"], "answer": "Sunday", "solution": {"image_year": 2675, "image_month": [1, "January"], "query_year": 2674, "query_month": [8, "August"], "query_day": 2}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0001.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. Which day of the week was on March 1 of that year?", "options": ["Thursday", "Sunday", "Wednesday", "Friday"], "answer": "Friday", "solution": {"image_year": 2301, "image_month": [11, "November"], "query_year": 2301, "query_month": [3, "March"], "query_day": 1}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0002.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. Which day of the week was on May 31 of that year?", "options": ["Monday", "Wednesday", "Tuesday", "Thursday"], "answer": "Wednesday", "solution": {"image_year": 2282, "image_month": [6, "June"], "query_year": 2282, "query_month": [5, "May"], "query_day": 31}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0003.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. The previous year was a non-leap year. Which day of the week was on June 12 of the previous year?", "options": ["Sunday", "Wednesday", "Thursday", "Saturday"], "answer": "Saturday", "solution": {"image_year": 2338, "image_month": [11, "November"], "query_year": 2337, "query_month": [6, "June"], "query_day": 12}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0004.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. Which day of the week was on July 5 of that year?", "options": ["Tuesday", "Friday", "Wednesday", "Saturday"], "answer": "Tuesday", "solution": {"image_year": 2850, "image_month": [11, "November"], "query_year": 2850, "query_month": [7, "July"], "query_day": 5}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0005.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. Which day of the week was on January 25 of that year?", "options": ["Friday", "Sunday", "Saturday", "Monday"], "answer": "Friday", "solution": {"image_year": 2785, "image_month": [7, "July"], "query_year": 2785, "query_month": [1, "January"], "query_day": 25}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0006.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. The next year was a non-leap year. Which day of the week was on November 9 of the next year?", "options": ["Thursday", "Wednesday", "Sunday", "Tuesday"], "answer": "Wednesday", "solution": {"image_year": 2106, "image_month": [6, "June"], "query_year": 2107, "query_month": [11, "November"], "query_day": 9}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0007.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. The previous year was a non-leap year. Which day of the week was on November 17 of the previous year?", "options": ["Tuesday", "Sunday", "Friday", "Thursday"], "answer": "Sunday", "solution": {"image_year": 2730, "image_month": [3, "March"], "query_year": 2729, "query_month": [11, "November"], "query_day": 17}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0008.jpg", "question": "The image shows the calendar of a month of a particular leap year. The next year was a non-leap year. Which day of the week was on January 11 of the next year?", "options": ["Monday", "Saturday", "Thursday", "Wednesday"], "answer": "Wednesday", "solution": {"image_year": 2444, "image_month": [4, "April"], "query_year": 2445, "query_month": [1, "January"], "query_day": 11}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0009.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. The next year was a non-leap year. Which day of the week was on April 11 of the next year?", "options": ["Wednesday", "Saturday", "Sunday", "Thursday"], "answer": "Wednesday", "solution": {"image_year": 1961, "image_month": [12, "December"], "query_year": 1962, "query_month": [4, "April"], "query_day": 11}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0010.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. The previous year was a non-leap year. Which day of the week was on August 29 of the previous year?", "options": ["Wednesday", "Saturday", "Thursday", "Tuesday"], "answer": "Tuesday", "solution": {"image_year": 2531, "image_month": [6, "June"], "query_year": 2530, "query_month": [8, "August"], "query_day": 29}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0011.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. The previous year was a leap year. Which day of the week was on January 16 of the previous year?", "options": ["Saturday", "Friday", "Thursday", "Wednesday"], "answer": "Friday", "solution": {"image_year": 2557, "image_month": [2, "February"], "query_year": 2556, "query_month": [1, "January"], "query_day": 16}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0012.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. Which day of the week was on March 28 of that year?", "options": ["Thursday", "Friday", "Monday", "Sunday"], "answer": "Friday", "solution": {"image_year": 2217, "image_month": [11, "November"], "query_year": 2217, "query_month": [3, "March"], "query_day": 28}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0013.jpg", "question": "The image shows the calendar of a month of a particular leap year. The previous year was a non-leap year. Which day of the week was on May 8 of the previous year?", "options": ["Friday", "Saturday", "Wednesday", "Sunday"], "answer": "Wednesday", "solution": {"image_year": 2696, "image_month": [12, "December"], "query_year": 2695, "query_month": [5, "May"], "query_day": 8}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0014.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. The previous year was a non-leap year. Which day of the week was on October 12 of the previous year?", "options": ["Thursday", "Sunday", "Wednesday", "Monday"], "answer": "Thursday", "solution": {"image_year": 1990, "image_month": [8, "August"], "query_year": 1989, "query_month": [10, "October"], "query_day": 12}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0015.jpg", "question": "The image shows the calendar of a month of a particular leap year. The next year was a non-leap year. Which day of the week was on July 20 of the next year?", "options": ["Tuesday", "Wednesday", "Saturday", "Monday"], "answer": "Saturday", "solution": {"image_year": 2756, "image_month": [9, "September"], "query_year": 2757, "query_month": [7, "July"], "query_day": 20}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0016.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. The previous year was a non-leap year. Which day of the week was on December 24 of the previous year?", "options": ["Wednesday", "Monday", "Friday", "Thursday"], "answer": "Monday", "solution": {"image_year": 2458, "image_month": [6, "June"], "query_year": 2457, "query_month": [12, "December"], "query_day": 24}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0017.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. Which day of the week was on September 19 of that year?", "options": ["Monday", "Tuesday", "Sunday", "Saturday"], "answer": "Tuesday", "solution": {"image_year": 2817, "image_month": [7, "July"], "query_year": 2817, "query_month": [9, "September"], "query_day": 19}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0018.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. The previous year was a non-leap year. Which day of the week was on November 27 of the previous year?", "options": ["Friday", "Monday", "Thursday", "Tuesday"], "answer": "Monday", "solution": {"image_year": 2751, "image_month": [6, "June"], "query_year": 2750, "query_month": [11, "November"], "query_day": 27}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0019.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. The previous year was a non-leap year. Which day of the week was on May 27 of the previous year?", "options": ["Tuesday", "Friday", "Wednesday", "Monday"], "answer": "Monday", "solution": {"image_year": 2775, "image_month": [4, "April"], "query_year": 2774, "query_month": [5, "May"], "query_day": 27}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0020.jpg", "question": "The image shows the calendar of a month of a particular leap year. The previous year was a non-leap year. Which day of the week was on October 29 of the previous year?", "options": ["Tuesday", "Saturday", "Monday", "Friday"], "answer": "Monday", "solution": {"image_year": 2132, "image_month": [2, "February"], "query_year": 2131, "query_month": [10, "October"], "query_day": 29}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0021.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. The next year was a non-leap year. Which day of the week was on April 10 of the next year?", "options": ["Wednesday", "Sunday", "Saturday", "Thursday"], "answer": "Wednesday", "solution": {"image_year": 2666, "image_month": [7, "July"], "query_year": 2667, "query_month": [4, "April"], "query_day": 10}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0022.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. The next year was a non-leap year. Which day of the week was on April 16 of the next year?", "options": ["Monday", "Tuesday", "Saturday", "Sunday"], "answer": "Monday", "solution": {"image_year": 2006, "image_month": [3, "March"], "query_year": 2007, "query_month": [4, "April"], "query_day": 16}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0023.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. The previous year was a leap year. Which day of the week was on September 17 of the previous year?", "options": ["Friday", "Sunday", "Wednesday", "Tuesday"], "answer": "Tuesday", "solution": {"image_year": 1997, "image_month": [7, "July"], "query_year": 1996, "query_month": [9, "September"], "query_day": 17}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0024.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. The previous year was a non-leap year. Which day of the week was on February 21 of the previous year?", "options": ["Wednesday", "Sunday", "Saturday", "Friday"], "answer": "Friday", "solution": {"image_year": 2454, "image_month": [6, "June"], "query_year": 2453, "query_month": [2, "February"], "query_day": 21}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0025.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. The next year was a non-leap year. Which day of the week was on July 26 of the next year?", "options": ["Saturday", "Thursday", "Friday", "Monday"], "answer": "Thursday", "solution": {"image_year": 1922, "image_month": [5, "May"], "query_year": 1923, "query_month": [7, "July"], "query_day": 26}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0026.jpg", "question": "The image shows the calendar of a month of a particular leap year. The previous year was a non-leap year. Which day of the week was on October 14 of the previous year?", "options": ["Sunday", "Wednesday", "Thursday", "Tuesday"], "answer": "Thursday", "solution": {"image_year": 2648, "image_month": [4, "April"], "query_year": 2647, "query_month": [10, "October"], "query_day": 14}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0027.jpg", "question": "The image shows the calendar of a month of a particular leap year. The previous year was a non-leap year. Which day of the week was on August 25 of the previous year?", "options": ["Monday", "Saturday", "Sunday", "Wednesday"], "answer": "Sunday", "solution": {"image_year": 2572, "image_month": [9, "September"], "query_year": 2571, "query_month": [8, "August"], "query_day": 25}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0028.jpg", "question": "The image shows the calendar of a month of a particular leap year. The previous year was a non-leap year. Which day of the week was on July 5 of the previous year?", "options": ["Thursday", "Sunday", "Tuesday", "Saturday"], "answer": "Tuesday", "solution": {"image_year": 2468, "image_month": [3, "March"], "query_year": 2467, "query_month": [7, "July"], "query_day": 5}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0029.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. The previous year was a leap year. Which day of the week was on March 8 of the previous year?", "options": ["Saturday", "Monday", "Sunday", "Thursday"], "answer": "Sunday", "solution": {"image_year": 2269, "image_month": [10, "October"], "query_year": 2268, "query_month": [3, "March"], "query_day": 8}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0030.jpg", "question": "The image shows the calendar of a month of a particular leap year. The next year was a non-leap year. Which day of the week was on April 11 of the next year?", "options": ["Saturday", "Sunday", "Friday", "Tuesday"], "answer": "Saturday", "solution": {"image_year": 2892, "image_month": [5, "May"], "query_year": 2893, "query_month": [4, "April"], "query_day": 11}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0031.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. The previous year was a non-leap year. Which day of the week was on March 21 of the previous year?", "options": ["Thursday", "Friday", "Saturday", "Sunday"], "answer": "Friday", "solution": {"image_year": 2314, "image_month": [9, "September"], "query_year": 2313, "query_month": [3, "March"], "query_day": 21}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0032.jpg", "question": "The image shows the calendar of a month of a particular leap year. The next year was a non-leap year. Which day of the week was on August 2 of the next year?", "options": ["Monday", "Friday", "Thursday", "Wednesday"], "answer": "Monday", "solution": {"image_year": 2020, "image_month": [10, "October"], "query_year": 2021, "query_month": [8, "August"], "query_day": 2}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0033.jpg", "question": "The image shows the calendar of a month of a particular leap year. The previous year was a non-leap year. Which day of the week was on June 23 of the previous year?", "options": ["Saturday", "Thursday", "Wednesday", "Friday"], "answer": "Saturday", "solution": {"image_year": 2160, "image_month": [10, "October"], "query_year": 2159, "query_month": [6, "June"], "query_day": 23}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0034.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. The next year was a non-leap year. Which day of the week was on May 16 of the next year?", "options": ["Saturday", "Monday", "Tuesday", "Friday"], "answer": "Friday", "solution": {"image_year": 1946, "image_month": [12, "December"], "query_year": 1947, "query_month": [5, "May"], "query_day": 16}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0035.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. The next year was a non-leap year. Which day of the week was on April 28 of the next year?", "options": ["Tuesday", "Sunday", "Monday", "Wednesday"], "answer": "Monday", "solution": {"image_year": 2413, "image_month": [3, "March"], "query_year": 2414, "query_month": [4, "April"], "query_day": 28}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0036.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. The next year was a non-leap year. Which day of the week was on January 31 of the next year?", "options": ["Wednesday", "Saturday", "Tuesday", "Monday"], "answer": "Monday", "solution": {"image_year": 2162, "image_month": [10, "October"], "query_year": 2163, "query_month": [1, "January"], "query_day": 31}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0037.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. The next year was a non-leap year. Which day of the week was on July 20 of the next year?", "options": ["Thursday", "Sunday", "Monday", "Friday"], "answer": "Friday", "solution": {"image_year": 1922, "image_month": [3, "March"], "query_year": 1923, "query_month": [7, "July"], "query_day": 20}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0038.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. The next year was a non-leap year. Which day of the week was on August 13 of the next year?", "options": ["Wednesday", "Sunday", "Tuesday", "Saturday"], "answer": "Sunday", "solution": {"image_year": 2794, "image_month": [7, "July"], "query_year": 2795, "query_month": [8, "August"], "query_day": 13}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0039.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. The previous year was a leap year. Which day of the week was on July 3 of the previous year?", "options": ["Tuesday", "Sunday", "Saturday", "Monday"], "answer": "Sunday", "solution": {"image_year": 2541, "image_month": [1, "January"], "query_year": 2540, "query_month": [7, "July"], "query_day": 3}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0040.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. Which day of the week was on November 2 of that year?", "options": ["Saturday", "Thursday", "Monday", "Friday"], "answer": "Saturday", "solution": {"image_year": 2622, "image_month": [9, "September"], "query_year": 2622, "query_month": [11, "November"], "query_day": 2}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0041.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. Which day of the week was on December 14 of that year?", "options": ["Saturday", "Sunday", "Tuesday", "Friday"], "answer": "Saturday", "solution": {"image_year": 2182, "image_month": [9, "September"], "query_year": 2182, "query_month": [12, "December"], "query_day": 14}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0042.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. The next year was a leap year. Which day of the week was on September 24 of the next year?", "options": ["Wednesday", "Sunday", "Saturday", "Tuesday"], "answer": "Saturday", "solution": {"image_year": 2871, "image_month": [1, "January"], "query_year": 2872, "query_month": [9, "September"], "query_day": 24}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0043.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. Which day of the week was on November 20 of that year?", "options": ["Thursday", "Saturday", "Tuesday", "Monday"], "answer": "Tuesday", "solution": {"image_year": 2249, "image_month": [3, "March"], "query_year": 2249, "query_month": [11, "November"], "query_day": 20}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0044.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. Which day of the week was on May 16 of that year?", "options": ["Tuesday", "Sunday", "Saturday", "Thursday"], "answer": "Tuesday", "solution": {"image_year": 2502, "image_month": [7, "July"], "query_year": 2502, "query_month": [5, "May"], "query_day": 16}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0045.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. Which day of the week was on July 26 of that year?", "options": ["Monday", "Friday", "Wednesday", "Tuesday"], "answer": "Wednesday", "solution": {"image_year": 2569, "image_month": [1, "January"], "query_year": 2569, "query_month": [7, "July"], "query_day": 26}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0046.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. The next year was a non-leap year. Which day of the week was on January 14 of the next year?", "options": ["Sunday", "Friday", "Wednesday", "Thursday"], "answer": "Thursday", "solution": {"image_year": 2437, "image_month": [9, "September"], "query_year": 2438, "query_month": [1, "January"], "query_day": 14}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0047.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. Which day of the week was on October 7 of that year?", "options": ["Sunday", "Thursday", "Saturday", "Friday"], "answer": "Friday", "solution": {"image_year": 2501, "image_month": [7, "July"], "query_year": 2501, "query_month": [10, "October"], "query_day": 7}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0048.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. The next year was a non-leap year. Which day of the week was on August 1 of the next year?", "options": ["Monday", "Thursday", "Saturday", "Friday"], "answer": "Friday", "solution": {"image_year": 2346, "image_month": [12, "December"], "query_year": 2347, "query_month": [8, "August"], "query_day": 1}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0049.jpg", "question": "The image shows the calendar of a month of a particular leap year. The previous year was a non-leap year. Which day of the week was on February 20 of the previous year?", "options": ["Tuesday", "Sunday", "Thursday", "Friday"], "answer": "Sunday", "solution": {"image_year": 2536, "image_month": [12, "December"], "query_year": 2535, "query_month": [2, "February"], "query_day": 20}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0050.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. Which day of the week was on February 25 of that year?", "options": ["Friday", "Sunday", "Monday", "Tuesday"], "answer": "Friday", "solution": {"image_year": 2185, "image_month": [3, "March"], "query_year": 2185, "query_month": [2, "February"], "query_day": 25}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0051.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. Which day of the week was on April 20 of that year?", "options": ["Sunday", "Saturday", "Friday", "Wednesday"], "answer": "Sunday", "solution": {"image_year": 2003, "image_month": [5, "May"], "query_year": 2003, "query_month": [4, "April"], "query_day": 20}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0052.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. Which day of the week was on September 5 of that year?", "options": ["Tuesday", "Sunday", "Monday", "Wednesday"], "answer": "Sunday", "solution": {"image_year": 2590, "image_month": [12, "December"], "query_year": 2590, "query_month": [9, "September"], "query_day": 5}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0053.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. The next year was a non-leap year. Which day of the week was on September 29 of the next year?", "options": ["Tuesday", "Monday", "Friday", "Wednesday"], "answer": "Friday", "solution": {"image_year": 2889, "image_month": [4, "April"], "query_year": 2890, "query_month": [9, "September"], "query_day": 29}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0054.jpg", "question": "The image shows the calendar of a month of a particular leap year. Which day of the week was on May 1 of that year?", "options": ["Tuesday", "Wednesday", "Monday", "Sunday"], "answer": "Tuesday", "solution": {"image_year": 2328, "image_month": [10, "October"], "query_year": 2328, "query_month": [5, "May"], "query_day": 1}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0055.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. Which day of the week was on January 7 of that year?", "options": ["Monday", "Sunday", "Tuesday", "Saturday"], "answer": "Saturday", "solution": {"image_year": 2339, "image_month": [9, "September"], "query_year": 2339, "query_month": [1, "January"], "query_day": 7}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0056.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. The next year was a non-leap year. Which day of the week was on August 1 of the next year?", "options": ["Thursday", "Tuesday", "Wednesday", "Saturday"], "answer": "Saturday", "solution": {"image_year": 2662, "image_month": [2, "February"], "query_year": 2663, "query_month": [8, "August"], "query_day": 1}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0057.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. Which day of the week was on August 21 of that year?", "options": ["Thursday", "Sunday", "Friday", "Saturday"], "answer": "Thursday", "solution": {"image_year": 2887, "image_month": [6, "June"], "query_year": 2887, "query_month": [8, "August"], "query_day": 21}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0058.jpg", "question": "The image shows the calendar of a month of a particular leap year. Which day of the week was on October 11 of that year?", "options": ["Friday", "Wednesday", "Saturday", "Tuesday"], "answer": "Tuesday", "solution": {"image_year": 2568, "image_month": [12, "December"], "query_year": 2568, "query_month": [10, "October"], "query_day": 11}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0059.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. The previous year was a leap year. Which day of the week was on July 16 of the previous year?", "options": ["Tuesday", "Saturday", "Monday", "Friday"], "answer": "Saturday", "solution": {"image_year": 1905, "image_month": [9, "September"], "query_year": 1904, "query_month": [7, "July"], "query_day": 16}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0060.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. The previous year was a leap year. Which day of the week was on May 9 of the previous year?", "options": ["Saturday", "Tuesday", "Friday", "Thursday"], "answer": "Tuesday", "solution": {"image_year": 2429, "image_month": [3, "March"], "query_year": 2428, "query_month": [5, "May"], "query_day": 9}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0061.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. The next year was a leap year. Which day of the week was on September 30 of the next year?", "options": ["Monday", "Wednesday", "Sunday", "Tuesday"], "answer": "Tuesday", "solution": {"image_year": 2627, "image_month": [12, "December"], "query_year": 2628, "query_month": [9, "September"], "query_day": 30}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0062.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. The next year was a non-leap year. Which day of the week was on June 16 of the next year?", "options": ["Thursday", "Sunday", "Saturday", "Tuesday"], "answer": "Sunday", "solution": {"image_year": 2446, "image_month": [10, "October"], "query_year": 2447, "query_month": [6, "June"], "query_day": 16}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0063.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. The next year was a leap year. Which day of the week was on November 15 of the next year?", "options": ["Friday", "Saturday", "Monday", "Sunday"], "answer": "Friday", "solution": {"image_year": 2395, "image_month": [1, "January"], "query_year": 2396, "query_month": [11, "November"], "query_day": 15}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0064.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. Which day of the week was on January 10 of that year?", "options": ["Friday", "Wednesday", "Monday", "Sunday"], "answer": "Monday", "solution": {"image_year": 2377, "image_month": [5, "May"], "query_year": 2377, "query_month": [1, "January"], "query_day": 10}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0065.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. The previous year was a non-leap year. Which day of the week was on October 29 of the previous year?", "options": ["Sunday", "Thursday", "Saturday", "Tuesday"], "answer": "Tuesday", "solution": {"image_year": 2566, "image_month": [12, "December"], "query_year": 2565, "query_month": [10, "October"], "query_day": 29}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0066.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. The next year was a non-leap year. Which day of the week was on March 26 of the next year?", "options": ["Friday", "Wednesday", "Saturday", "Thursday"], "answer": "Friday", "solution": {"image_year": 2353, "image_month": [9, "September"], "query_year": 2354, "query_month": [3, "March"], "query_day": 26}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0067.jpg", "question": "The image shows the calendar of a month of a particular leap year. The next year was a non-leap year. Which day of the week was on February 21 of the next year?", "options": ["Tuesday", "Wednesday", "Thursday", "Saturday"], "answer": "Wednesday", "solution": {"image_year": 2276, "image_month": [12, "December"], "query_year": 2277, "query_month": [2, "February"], "query_day": 21}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0068.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. The previous year was a non-leap year. Which day of the week was on October 29 of the previous year?", "options": ["Friday", "Tuesday", "Monday", "Wednesday"], "answer": "Tuesday", "solution": {"image_year": 2087, "image_month": [8, "August"], "query_year": 2086, "query_month": [10, "October"], "query_day": 29}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0069.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. The next year was a non-leap year. Which day of the week was on April 8 of the next year?", "options": ["Wednesday", "Saturday", "Sunday", "Friday"], "answer": "Wednesday", "solution": {"image_year": 2498, "image_month": [2, "February"], "query_year": 2499, "query_month": [4, "April"], "query_day": 8}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0070.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. The previous year was a non-leap year. Which day of the week was on February 10 of the previous year?", "options": ["Monday", "Saturday", "Tuesday", "Wednesday"], "answer": "Tuesday", "solution": {"image_year": 2123, "image_month": [9, "September"], "query_year": 2122, "query_month": [2, "February"], "query_day": 10}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0071.jpg", "question": "The image shows the calendar of a month of a particular leap year. Which day of the week was on March 24 of that year?", "options": ["Saturday", "Thursday", "Wednesday", "Sunday"], "answer": "Thursday", "solution": {"image_year": 2540, "image_month": [12, "December"], "query_year": 2540, "query_month": [3, "March"], "query_day": 24}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0072.jpg", "question": "The image shows the calendar of a month of a particular leap year. The previous year was a non-leap year. Which day of the week was on December 16 of the previous year?", "options": ["Friday", "Thursday", "Monday", "Saturday"], "answer": "Thursday", "solution": {"image_year": 2744, "image_month": [11, "November"], "query_year": 2743, "query_month": [12, "December"], "query_day": 16}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0073.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. The next year was a non-leap year. Which day of the week was on December 30 of the next year?", "options": ["Wednesday", "Thursday", "Monday", "Friday"], "answer": "Monday", "solution": {"image_year": 2846, "image_month": [9, "September"], "query_year": 2847, "query_month": [12, "December"], "query_day": 30}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0074.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. Which day of the week was on January 10 of that year?", "options": ["Sunday", "Wednesday", "Thursday", "Friday"], "answer": "Wednesday", "solution": {"image_year": 2525, "image_month": [4, "April"], "query_year": 2525, "query_month": [1, "January"], "query_day": 10}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0075.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. The next year was a leap year. Which day of the week was on June 12 of the next year?", "options": ["Friday", "Monday", "Tuesday", "Sunday"], "answer": "Tuesday", "solution": {"image_year": 2811, "image_month": [9, "September"], "query_year": 2812, "query_month": [6, "June"], "query_day": 12}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0076.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. Which day of the week was on November 4 of that year?", "options": ["Friday", "Monday", "Wednesday", "Saturday"], "answer": "Wednesday", "solution": {"image_year": 2071, "image_month": [7, "July"], "query_year": 2071, "query_month": [11, "November"], "query_day": 4}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0077.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. The previous year was a non-leap year. Which day of the week was on June 29 of the previous year?", "options": ["Saturday", "Friday", "Monday", "Tuesday"], "answer": "Monday", "solution": {"image_year": 1915, "image_month": [8, "August"], "query_year": 1914, "query_month": [6, "June"], "query_day": 29}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0078.jpg", "question": "The image shows the calendar of a month of a particular leap year. The previous year was a non-leap year. Which day of the week was on January 31 of the previous year?", "options": ["Friday", "Tuesday", "Monday", "Thursday"], "answer": "Friday", "solution": {"image_year": 2280, "image_month": [2, "February"], "query_year": 2279, "query_month": [1, "January"], "query_day": 31}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0079.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. Which day of the week was on February 2 of that year?", "options": ["Thursday", "Wednesday", "Friday", "Saturday"], "answer": "Friday", "solution": {"image_year": 2221, "image_month": [11, "November"], "query_year": 2221, "query_month": [2, "February"], "query_day": 2}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0080.jpg", "question": "The image shows the calendar of a month of a particular leap year. The next year was a non-leap year. Which day of the week was on September 6 of the next year?", "options": ["Sunday", "Wednesday", "Friday", "Monday"], "answer": "Friday", "solution": {"image_year": 2592, "image_month": [8, "August"], "query_year": 2593, "query_month": [9, "September"], "query_day": 6}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0081.jpg", "question": "The image shows the calendar of a month of a particular leap year. The previous year was a non-leap year. Which day of the week was on March 20 of the previous year?", "options": ["Monday", "Wednesday", "Tuesday", "Saturday"], "answer": "Saturday", "solution": {"image_year": 2484, "image_month": [8, "August"], "query_year": 2483, "query_month": [3, "March"], "query_day": 20}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0082.jpg", "question": "The image shows the calendar of a month of a particular leap year. The next year was a non-leap year. Which day of the week was on February 17 of the next year?", "options": ["Wednesday", "Thursday", "Sunday", "Monday"], "answer": "Thursday", "solution": {"image_year": 2004, "image_month": [8, "August"], "query_year": 2005, "query_month": [2, "February"], "query_day": 17}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0083.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. Which day of the week was on January 4 of that year?", "options": ["Wednesday", "Sunday", "Friday", "Tuesday"], "answer": "Tuesday", "solution": {"image_year": 1983, "image_month": [8, "August"], "query_year": 1983, "query_month": [1, "January"], "query_day": 4}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0084.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. The next year was a leap year. Which day of the week was on January 10 of the next year?", "options": ["Sunday", "Monday", "Tuesday", "Wednesday"], "answer": "Tuesday", "solution": {"image_year": 2095, "image_month": [3, "March"], "query_year": 2096, "query_month": [1, "January"], "query_day": 10}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0085.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. The next year was a leap year. Which day of the week was on August 25 of the next year?", "options": ["Saturday", "Sunday", "Thursday", "Wednesday"], "answer": "Wednesday", "solution": {"image_year": 2251, "image_month": [11, "November"], "query_year": 2252, "query_month": [8, "August"], "query_day": 25}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0086.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. Which day of the week was on December 15 of that year?", "options": ["Sunday", "Tuesday", "Saturday", "Thursday"], "answer": "Tuesday", "solution": {"image_year": 2657, "image_month": [9, "September"], "query_year": 2657, "query_month": [12, "December"], "query_day": 15}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0087.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. The previous year was a non-leap year. Which day of the week was on May 12 of the previous year?", "options": ["Thursday", "Wednesday", "Tuesday", "Sunday"], "answer": "Tuesday", "solution": {"image_year": 2647, "image_month": [3, "March"], "query_year": 2646, "query_month": [5, "May"], "query_day": 12}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0088.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. Which day of the week was on June 26 of that year?", "options": ["Thursday", "Monday", "Friday", "Tuesday"], "answer": "Friday", "solution": {"image_year": 2567, "image_month": [12, "December"], "query_year": 2567, "query_month": [6, "June"], "query_day": 26}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0089.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. The next year was a non-leap year. Which day of the week was on May 7 of the next year?", "options": ["Saturday", "Wednesday", "Tuesday", "Thursday"], "answer": "Saturday", "solution": {"image_year": 2810, "image_month": [4, "April"], "query_year": 2811, "query_month": [5, "May"], "query_day": 7}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0090.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. The previous year was a non-leap year. Which day of the week was on February 5 of the previous year?", "options": ["Sunday", "Wednesday", "Monday", "Thursday"], "answer": "Wednesday", "solution": {"image_year": 2674, "image_month": [7, "July"], "query_year": 2673, "query_month": [2, "February"], "query_day": 5}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0091.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. The previous year was a leap year. Which day of the week was on September 27 of the previous year?", "options": ["Friday", "Monday", "Sunday", "Thursday"], "answer": "Friday", "solution": {"image_year": 2081, "image_month": [1, "January"], "query_year": 2080, "query_month": [9, "September"], "query_day": 27}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0092.jpg", "question": "The image shows the calendar of a month of a particular leap year. The previous year was a non-leap year. Which day of the week was on November 22 of the previous year?", "options": ["Tuesday", "Wednesday", "Saturday", "Thursday"], "answer": "Tuesday", "solution": {"image_year": 2728, "image_month": [1, "January"], "query_year": 2727, "query_month": [11, "November"], "query_day": 22}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0093.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. The next year was a non-leap year. Which day of the week was on August 19 of the next year?", "options": ["Friday", "Monday", "Wednesday", "Tuesday"], "answer": "Friday", "solution": {"image_year": 2038, "image_month": [10, "October"], "query_year": 2039, "query_month": [8, "August"], "query_day": 19}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0094.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. The next year was a non-leap year. Which day of the week was on May 10 of the next year?", "options": ["Tuesday", "Wednesday", "Friday", "Saturday"], "answer": "Tuesday", "solution": {"image_year": 2573, "image_month": [3, "March"], "query_year": 2574, "query_month": [5, "May"], "query_day": 10}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0095.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. The previous year was a non-leap year. Which day of the week was on November 1 of the previous year?", "options": ["Monday", "Friday", "Thursday", "Sunday"], "answer": "Friday", "solution": {"image_year": 2031, "image_month": [2, "February"], "query_year": 2030, "query_month": [11, "November"], "query_day": 1}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0096.jpg", "question": "The image shows the calendar of a month of a particular leap year. The next year was a non-leap year. Which day of the week was on May 26 of the next year?", "options": ["Friday", "Wednesday", "Saturday", "Monday"], "answer": "Wednesday", "solution": {"image_year": 2736, "image_month": [7, "July"], "query_year": 2737, "query_month": [5, "May"], "query_day": 26}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0097.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. The next year was a leap year. Which day of the week was on February 3 of the next year?", "options": ["Friday", "Tuesday", "Sunday", "Saturday"], "answer": "Friday", "solution": {"image_year": 2191, "image_month": [12, "December"], "query_year": 2192, "query_month": [2, "February"], "query_day": 3}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0098.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. Which day of the week was on June 14 of that year?", "options": ["Friday", "Thursday", "Sunday", "Tuesday"], "answer": "Friday", "solution": {"image_year": 2137, "image_month": [3, "March"], "query_year": 2137, "query_month": [6, "June"], "query_day": 14}, "source_file": "calendar.json"}
{"image": "images/calendar/calendar_0099.jpg", "question": "The image shows the calendar of a month of a particular non-leap year. The next year was a non-leap year. Which day of the week was on March 18 of the next year?", "options": ["Saturday", "Monday", "Friday", "Wednesday"], "answer": "Friday", "solution": {"image_year": 2545, "image_month": [5, "May"], "query_year": 2546, "query_month": [3, "March"], "query_day": 18}, "source_file": "calendar.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0000.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["1", "4", "6", "5"], "answer": "4", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[2, 1, 1], [1, 0, 1], [0, 0, 1]], "minute_1": [[2, 2, 1], [2, 0, 1], [0, 0, 1]], "minute_2": [[2, 2, 2], [2, 0, 1], [0, 0, 1]], "minute_3": [[2, 2, 2], [2, 0, 2], [0, 0, 1]], "minute_4": [[2, 2, 2], [2, 0, 2], [0, 0, 2]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0001.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["5", "2", "4", "3"], "answer": "3", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[1, 0, 0], [1, 1, 0], [0, 2, 0]], "minute_1": [[1, 0, 0], [1, 2, 0], [0, 2, 0]], "minute_2": [[1, 0, 0], [2, 2, 0], [0, 2, 0]], "minute_3": [[2, 0, 0], [2, 2, 0], [0, 2, 0]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0002.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["3", "6", "2", "1"], "answer": "6", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[2, 1, 1], [0, 0, 1], [1, 1, 1]], "minute_1": [[2, 2, 1], [0, 0, 1], [1, 1, 1]], "minute_2": [[2, 2, 2], [0, 0, 1], [1, 1, 1]], "minute_3": [[2, 2, 2], [0, 0, 2], [1, 1, 1]], "minute_4": [[2, 2, 2], [0, 0, 2], [1, 1, 2]], "minute_5": [[2, 2, 2], [0, 0, 2], [1, 2, 2]], "minute_6": [[2, 2, 2], [0, 0, 2], [2, 2, 2]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0003.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["4", "6", "2", "1"], "answer": "1", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[0, 0, 0], [0, 0, 0], [2, 1, 0]], "minute_1": [[0, 0, 0], [0, 0, 0], [2, 2, 0]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0004.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["3", "6", "5", "4"], "answer": "5", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[1, 2, 1], [1, 0, 0], [1, 1, 1]], "minute_1": [[2, 2, 2], [1, 0, 0], [1, 1, 1]], "minute_2": [[2, 2, 2], [2, 0, 0], [1, 1, 1]], "minute_3": [[2, 2, 2], [2, 0, 0], [2, 1, 1]], "minute_4": [[2, 2, 2], [2, 0, 0], [2, 2, 1]], "minute_5": [[2, 2, 2], [2, 0, 0], [2, 2, 2]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0005.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["6", "5", "3", "1"], "answer": "5", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[2, 1, 1], [0, 0, 1], [0, 1, 1]], "minute_1": [[2, 2, 1], [0, 0, 1], [0, 1, 1]], "minute_2": [[2, 2, 2], [0, 0, 1], [0, 1, 1]], "minute_3": [[2, 2, 2], [0, 0, 2], [0, 1, 1]], "minute_4": [[2, 2, 2], [0, 0, 2], [0, 1, 2]], "minute_5": [[2, 2, 2], [0, 0, 2], [0, 2, 2]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0006.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["4", "2", "6", "5"], "answer": "6", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[1, 1, 1], [1, 0, 1], [1, 0, 2]], "minute_1": [[1, 1, 1], [1, 0, 2], [1, 0, 2]], "minute_2": [[1, 1, 2], [1, 0, 2], [1, 0, 2]], "minute_3": [[1, 2, 2], [1, 0, 2], [1, 0, 2]], "minute_4": [[2, 2, 2], [1, 0, 2], [1, 0, 2]], "minute_5": [[2, 2, 2], [2, 0, 2], [1, 0, 2]], "minute_6": [[2, 2, 2], [2, 0, 2], [2, 0, 2]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0007.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["6", "1", "4", "2"], "answer": "4", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[2, 1, 1], [1, 0, 0], [1, 1, 1]], "minute_1": [[2, 2, 1], [2, 0, 0], [1, 1, 1]], "minute_2": [[2, 2, 2], [2, 0, 0], [2, 1, 1]], "minute_3": [[2, 2, 2], [2, 0, 0], [2, 2, 1]], "minute_4": [[2, 2, 2], [2, 0, 0], [2, 2, 2]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0008.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["6", "1", "3", "4"], "answer": "6", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[1, 1, 1], [1, 0, 2], [1, 1, 0]], "minute_1": [[1, 1, 2], [1, 0, 2], [1, 1, 0]], "minute_2": [[1, 2, 2], [1, 0, 2], [1, 1, 0]], "minute_3": [[2, 2, 2], [1, 0, 2], [1, 1, 0]], "minute_4": [[2, 2, 2], [2, 0, 2], [1, 1, 0]], "minute_5": [[2, 2, 2], [2, 0, 2], [2, 1, 0]], "minute_6": [[2, 2, 2], [2, 0, 2], [2, 2, 0]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0009.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["4", "5", "3", "1"], "answer": "3", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[1, 2, 0], [0, 1, 1], [1, 1, 1]], "minute_1": [[2, 2, 0], [0, 2, 1], [1, 1, 1]], "minute_2": [[2, 2, 0], [0, 2, 2], [1, 2, 1]], "minute_3": [[2, 2, 0], [0, 2, 2], [2, 2, 2]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0010.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["5", "4", "1", "2"], "answer": "4", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[1, 0, 2], [1, 1, 1], [0, 1, 1]], "minute_1": [[1, 0, 2], [1, 1, 2], [0, 1, 1]], "minute_2": [[1, 0, 2], [1, 2, 2], [0, 1, 2]], "minute_3": [[1, 0, 2], [2, 2, 2], [0, 2, 2]], "minute_4": [[2, 0, 2], [2, 2, 2], [0, 2, 2]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0011.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["4", "1", "2", "3"], "answer": "3", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[1, 2, 1], [0, 1, 0], [1, 1, 0]], "minute_1": [[2, 2, 2], [0, 2, 0], [1, 1, 0]], "minute_2": [[2, 2, 2], [0, 2, 0], [1, 2, 0]], "minute_3": [[2, 2, 2], [0, 2, 0], [2, 2, 0]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0012.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["2", "1", "6", "4"], "answer": "4", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[0, 1, 2], [0, 1, 0], [1, 1, 0]], "minute_1": [[0, 2, 2], [0, 1, 0], [1, 1, 0]], "minute_2": [[0, 2, 2], [0, 2, 0], [1, 1, 0]], "minute_3": [[0, 2, 2], [0, 2, 0], [1, 2, 0]], "minute_4": [[0, 2, 2], [0, 2, 0], [2, 2, 0]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0013.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["2", "1", "3", "6"], "answer": "2", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[1, 1, 1], [0, 2, 0], [1, 1, 0]], "minute_1": [[1, 2, 1], [0, 2, 0], [1, 2, 0]], "minute_2": [[2, 2, 2], [0, 2, 0], [2, 2, 0]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0014.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["2", "1", "5", "4"], "answer": "1", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[0, 0, 0], [0, 0, 2], [0, 0, 1]], "minute_1": [[0, 0, 0], [0, 0, 2], [0, 0, 2]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0015.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["4", "6", "2", "1"], "answer": "2", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[0, 1, 1], [0, 0, 2], [0, 0, 1]], "minute_1": [[0, 1, 2], [0, 0, 2], [0, 0, 2]], "minute_2": [[0, 2, 2], [0, 0, 2], [0, 0, 2]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0016.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["1", "3", "2", "4"], "answer": "4", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[0, 0, 1], [1, 1, 1], [2, 0, 0]], "minute_1": [[0, 0, 1], [2, 1, 1], [2, 0, 0]], "minute_2": [[0, 0, 1], [2, 2, 1], [2, 0, 0]], "minute_3": [[0, 0, 1], [2, 2, 2], [2, 0, 0]], "minute_4": [[0, 0, 2], [2, 2, 2], [2, 0, 0]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0017.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["2", "4", "1", "6"], "answer": "4", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[0, 1, 1], [0, 1, 0], [2, 1, 0]], "minute_1": [[0, 1, 1], [0, 1, 0], [2, 2, 0]], "minute_2": [[0, 1, 1], [0, 2, 0], [2, 2, 0]], "minute_3": [[0, 2, 1], [0, 2, 0], [2, 2, 0]], "minute_4": [[0, 2, 2], [0, 2, 0], [2, 2, 0]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0018.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["6", "1", "3", "2"], "answer": "3", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[1, 1, 0], [0, 1, 1], [1, 2, 0]], "minute_1": [[1, 1, 0], [0, 2, 1], [2, 2, 0]], "minute_2": [[1, 2, 0], [0, 2, 2], [2, 2, 0]], "minute_3": [[2, 2, 0], [0, 2, 2], [2, 2, 0]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0019.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["1", "4", "6", "5"], "answer": "5", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[1, 1, 1], [1, 0, 1], [2, 1, 0]], "minute_1": [[1, 1, 1], [2, 0, 1], [2, 2, 0]], "minute_2": [[2, 1, 1], [2, 0, 1], [2, 2, 0]], "minute_3": [[2, 2, 1], [2, 0, 1], [2, 2, 0]], "minute_4": [[2, 2, 2], [2, 0, 1], [2, 2, 0]], "minute_5": [[2, 2, 2], [2, 0, 2], [2, 2, 0]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0020.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["3", "4", "1", "2"], "answer": "2", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[0, 0, 0], [1, 1, 0], [1, 2, 0]], "minute_1": [[0, 0, 0], [1, 2, 0], [2, 2, 0]], "minute_2": [[0, 0, 0], [2, 2, 0], [2, 2, 0]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0021.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["4", "5", "1", "2"], "answer": "2", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[0, 1, 0], [0, 1, 0], [0, 2, 0]], "minute_1": [[0, 1, 0], [0, 2, 0], [0, 2, 0]], "minute_2": [[0, 2, 0], [0, 2, 0], [0, 2, 0]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0022.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["5", "4", "1", "2"], "answer": "5", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[1, 1, 1], [1, 0, 1], [2, 0, 0]], "minute_1": [[1, 1, 1], [2, 0, 1], [2, 0, 0]], "minute_2": [[2, 1, 1], [2, 0, 1], [2, 0, 0]], "minute_3": [[2, 2, 1], [2, 0, 1], [2, 0, 0]], "minute_4": [[2, 2, 2], [2, 0, 1], [2, 0, 0]], "minute_5": [[2, 2, 2], [2, 0, 2], [2, 0, 0]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0023.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["2", "6", "3", "4"], "answer": "2", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[1, 1, 0], [2, 1, 1], [0, 1, 0]], "minute_1": [[2, 1, 0], [2, 2, 1], [0, 1, 0]], "minute_2": [[2, 2, 0], [2, 2, 2], [0, 2, 0]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0024.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["6", "3", "2", "1"], "answer": "3", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[1, 2, 0], [0, 1, 0], [1, 1, 1]], "minute_1": [[2, 2, 0], [0, 2, 0], [1, 1, 1]], "minute_2": [[2, 2, 0], [0, 2, 0], [1, 2, 1]], "minute_3": [[2, 2, 0], [0, 2, 0], [2, 2, 2]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0025.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["4", "5", "6", "3"], "answer": "6", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[1, 1, 2], [1, 0, 0], [1, 1, 1]], "minute_1": [[1, 2, 2], [1, 0, 0], [1, 1, 1]], "minute_2": [[2, 2, 2], [1, 0, 0], [1, 1, 1]], "minute_3": [[2, 2, 2], [2, 0, 0], [1, 1, 1]], "minute_4": [[2, 2, 2], [2, 0, 0], [2, 1, 1]], "minute_5": [[2, 2, 2], [2, 0, 0], [2, 2, 1]], "minute_6": [[2, 2, 2], [2, 0, 0], [2, 2, 2]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0026.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["5", "3", "4", "6"], "answer": "4", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[1, 1, 0], [0, 1, 1], [2, 1, 0]], "minute_1": [[1, 1, 0], [0, 1, 1], [2, 2, 0]], "minute_2": [[1, 1, 0], [0, 2, 1], [2, 2, 0]], "minute_3": [[1, 2, 0], [0, 2, 2], [2, 2, 0]], "minute_4": [[2, 2, 0], [0, 2, 2], [2, 2, 0]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0027.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["6", "2", "1", "3"], "answer": "1", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[0, 0, 0], [0, 2, 1], [0, 0, 0]], "minute_1": [[0, 0, 0], [0, 2, 2], [0, 0, 0]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0028.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["4", "6", "5", "2"], "answer": "6", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[1, 1, 1], [0, 0, 1], [2, 1, 1]], "minute_1": [[1, 1, 1], [0, 0, 1], [2, 2, 1]], "minute_2": [[1, 1, 1], [0, 0, 1], [2, 2, 2]], "minute_3": [[1, 1, 1], [0, 0, 2], [2, 2, 2]], "minute_4": [[1, 1, 2], [0, 0, 2], [2, 2, 2]], "minute_5": [[1, 2, 2], [0, 0, 2], [2, 2, 2]], "minute_6": [[2, 2, 2], [0, 0, 2], [2, 2, 2]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0029.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["3", "2", "5", "6"], "answer": "5", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[1, 1, 1], [2, 0, 1], [1, 0, 1]], "minute_1": [[2, 1, 1], [2, 0, 1], [2, 0, 1]], "minute_2": [[2, 2, 1], [2, 0, 1], [2, 0, 1]], "minute_3": [[2, 2, 2], [2, 0, 1], [2, 0, 1]], "minute_4": [[2, 2, 2], [2, 0, 2], [2, 0, 1]], "minute_5": [[2, 2, 2], [2, 0, 2], [2, 0, 2]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0030.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["3", "1", "5", "2"], "answer": "5", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[0, 1, 1], [0, 0, 1], [2, 1, 1]], "minute_1": [[0, 1, 1], [0, 0, 1], [2, 2, 1]], "minute_2": [[0, 1, 1], [0, 0, 1], [2, 2, 2]], "minute_3": [[0, 1, 1], [0, 0, 2], [2, 2, 2]], "minute_4": [[0, 1, 2], [0, 0, 2], [2, 2, 2]], "minute_5": [[0, 2, 2], [0, 0, 2], [2, 2, 2]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0031.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["4", "5", "6", "3"], "answer": "4", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[0, 1, 1], [1, 0, 1], [1, 2, 1]], "minute_1": [[0, 1, 1], [1, 0, 1], [2, 2, 2]], "minute_2": [[0, 1, 1], [2, 0, 2], [2, 2, 2]], "minute_3": [[0, 1, 2], [2, 0, 2], [2, 2, 2]], "minute_4": [[0, 2, 2], [2, 0, 2], [2, 2, 2]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0032.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["2", "3", "1", "5"], "answer": "1", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[0, 0, 0], [0, 0, 0], [1, 2, 0]], "minute_1": [[0, 0, 0], [0, 0, 0], [2, 2, 0]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0033.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["6", "1", "5", "4"], "answer": "1", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[0, 0, 1], [0, 0, 2], [0, 0, 1]], "minute_1": [[0, 0, 2], [0, 0, 2], [0, 0, 2]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0034.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["5", "3", "1", "4"], "answer": "5", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[0, 0, 2], [1, 0, 1], [1, 1, 1]], "minute_1": [[0, 0, 2], [1, 0, 2], [1, 1, 1]], "minute_2": [[0, 0, 2], [1, 0, 2], [1, 1, 2]], "minute_3": [[0, 0, 2], [1, 0, 2], [1, 2, 2]], "minute_4": [[0, 0, 2], [1, 0, 2], [2, 2, 2]], "minute_5": [[0, 0, 2], [2, 0, 2], [2, 2, 2]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0035.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["2", "5", "1", "4"], "answer": "2", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[0, 2, 0], [0, 1, 0], [0, 1, 0]], "minute_1": [[0, 2, 0], [0, 2, 0], [0, 1, 0]], "minute_2": [[0, 2, 0], [0, 2, 0], [0, 2, 0]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0036.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["1", "2", "4", "6"], "answer": "2", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[1, 0, 0], [1, 0, 0], [2, 1, 1]], "minute_1": [[1, 0, 0], [2, 0, 0], [2, 2, 1]], "minute_2": [[2, 0, 0], [2, 0, 0], [2, 2, 2]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0037.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["6", "4", "2", "5"], "answer": "2", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[0, 1, 1], [1, 2, 1], [0, 1, 1]], "minute_1": [[0, 2, 1], [2, 2, 2], [0, 2, 1]], "minute_2": [[0, 2, 2], [2, 2, 2], [0, 2, 2]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0038.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["5", "1", "6", "2"], "answer": "5", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[2, 1, 0], [1, 0, 1], [1, 1, 1]], "minute_1": [[2, 2, 0], [2, 0, 1], [1, 1, 1]], "minute_2": [[2, 2, 0], [2, 0, 1], [2, 1, 1]], "minute_3": [[2, 2, 0], [2, 0, 1], [2, 2, 1]], "minute_4": [[2, 2, 0], [2, 0, 1], [2, 2, 2]], "minute_5": [[2, 2, 0], [2, 0, 2], [2, 2, 2]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0039.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["3", "4", "6", "1"], "answer": "4", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[1, 1, 2], [1, 1, 1], [1, 0, 0]], "minute_1": [[1, 2, 2], [1, 1, 2], [1, 0, 0]], "minute_2": [[2, 2, 2], [1, 2, 2], [1, 0, 0]], "minute_3": [[2, 2, 2], [2, 2, 2], [1, 0, 0]], "minute_4": [[2, 2, 2], [2, 2, 2], [2, 0, 0]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0040.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["4", "3", "2", "1"], "answer": "3", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[1, 1, 0], [1, 1, 2], [1, 0, 0]], "minute_1": [[1, 1, 0], [1, 2, 2], [1, 0, 0]], "minute_2": [[1, 2, 0], [2, 2, 2], [1, 0, 0]], "minute_3": [[2, 2, 0], [2, 2, 2], [2, 0, 0]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0041.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["1", "4", "2", "6"], "answer": "1", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[1, 2, 1], [0, 1, 0], [0, 0, 0]], "minute_1": [[2, 2, 2], [0, 2, 0], [0, 0, 0]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0042.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["1", "2", "3", "4"], "answer": "1", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[0, 0, 0], [0, 0, 1], [0, 0, 2]], "minute_1": [[0, 0, 0], [0, 0, 2], [0, 0, 2]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0043.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["5", "6", "4", "2"], "answer": "4", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[1, 1, 0], [1, 1, 1], [0, 0, 2]], "minute_1": [[1, 1, 0], [1, 1, 2], [0, 0, 2]], "minute_2": [[1, 1, 0], [1, 2, 2], [0, 0, 2]], "minute_3": [[1, 2, 0], [2, 2, 2], [0, 0, 2]], "minute_4": [[2, 2, 0], [2, 2, 2], [0, 0, 2]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0044.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["4", "3", "5", "1"], "answer": "5", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[1, 1, 1], [1, 0, 0], [1, 2, 1]], "minute_1": [[1, 1, 1], [1, 0, 0], [2, 2, 2]], "minute_2": [[1, 1, 1], [2, 0, 0], [2, 2, 2]], "minute_3": [[2, 1, 1], [2, 0, 0], [2, 2, 2]], "minute_4": [[2, 2, 1], [2, 0, 0], [2, 2, 2]], "minute_5": [[2, 2, 2], [2, 0, 0], [2, 2, 2]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0045.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["5", "4", "3", "6"], "answer": "4", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[1, 1, 1], [1, 1, 0], [2, 1, 0]], "minute_1": [[1, 1, 1], [2, 1, 0], [2, 2, 0]], "minute_2": [[2, 1, 1], [2, 2, 0], [2, 2, 0]], "minute_3": [[2, 2, 1], [2, 2, 0], [2, 2, 0]], "minute_4": [[2, 2, 2], [2, 2, 0], [2, 2, 0]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0046.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["1", "5", "2", "6"], "answer": "6", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[1, 1, 1], [1, 0, 1], [2, 0, 1]], "minute_1": [[1, 1, 1], [2, 0, 1], [2, 0, 1]], "minute_2": [[2, 1, 1], [2, 0, 1], [2, 0, 1]], "minute_3": [[2, 2, 1], [2, 0, 1], [2, 0, 1]], "minute_4": [[2, 2, 2], [2, 0, 1], [2, 0, 1]], "minute_5": [[2, 2, 2], [2, 0, 2], [2, 0, 1]], "minute_6": [[2, 2, 2], [2, 0, 2], [2, 0, 2]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0047.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["3", "5", "2", "4"], "answer": "3", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[0, 1, 0], [2, 1, 1], [1, 0, 1]], "minute_1": [[0, 1, 0], [2, 2, 1], [2, 0, 1]], "minute_2": [[0, 2, 0], [2, 2, 2], [2, 0, 1]], "minute_3": [[0, 2, 0], [2, 2, 2], [2, 0, 2]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0048.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["5", "3", "4", "2"], "answer": "4", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[0, 0, 1], [1, 1, 1], [1, 0, 2]], "minute_1": [[0, 0, 1], [1, 1, 2], [1, 0, 2]], "minute_2": [[0, 0, 2], [1, 2, 2], [1, 0, 2]], "minute_3": [[0, 0, 2], [2, 2, 2], [1, 0, 2]], "minute_4": [[0, 0, 2], [2, 2, 2], [2, 0, 2]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0049.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["2", "4", "5", "1"], "answer": "4", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[2, 1, 1], [1, 1, 1], [0, 0, 1]], "minute_1": [[2, 2, 1], [2, 1, 1], [0, 0, 1]], "minute_2": [[2, 2, 2], [2, 2, 1], [0, 0, 1]], "minute_3": [[2, 2, 2], [2, 2, 2], [0, 0, 1]], "minute_4": [[2, 2, 2], [2, 2, 2], [0, 0, 2]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0050.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["6", "3", "4", "5"], "answer": "3", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[1, 1, 0], [0, 1, 1], [1, 2, 1]], "minute_1": [[1, 1, 0], [0, 2, 1], [2, 2, 2]], "minute_2": [[1, 2, 0], [0, 2, 2], [2, 2, 2]], "minute_3": [[2, 2, 0], [0, 2, 2], [2, 2, 2]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0051.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["2", "5", "1", "6"], "answer": "5", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[0, 1, 1], [1, 0, 1], [2, 1, 1]], "minute_1": [[0, 1, 1], [2, 0, 1], [2, 2, 1]], "minute_2": [[0, 1, 1], [2, 0, 1], [2, 2, 2]], "minute_3": [[0, 1, 1], [2, 0, 2], [2, 2, 2]], "minute_4": [[0, 1, 2], [2, 0, 2], [2, 2, 2]], "minute_5": [[0, 2, 2], [2, 0, 2], [2, 2, 2]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0052.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["6", "4", "5", "3"], "answer": "4", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[1, 1, 1], [0, 1, 1], [0, 0, 2]], "minute_1": [[1, 1, 1], [0, 1, 2], [0, 0, 2]], "minute_2": [[1, 1, 2], [0, 2, 2], [0, 0, 2]], "minute_3": [[1, 2, 2], [0, 2, 2], [0, 0, 2]], "minute_4": [[2, 2, 2], [0, 2, 2], [0, 0, 2]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0053.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["4", "2", "3", "5"], "answer": "2", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[0, 1, 0], [2, 1, 0], [0, 0, 0]], "minute_1": [[0, 1, 0], [2, 2, 0], [0, 0, 0]], "minute_2": [[0, 2, 0], [2, 2, 0], [0, 0, 0]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0054.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["1", "3", "6", "4"], "answer": "4", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[0, 1, 2], [0, 0, 1], [1, 1, 1]], "minute_1": [[0, 2, 2], [0, 0, 2], [1, 1, 1]], "minute_2": [[0, 2, 2], [0, 0, 2], [1, 1, 2]], "minute_3": [[0, 2, 2], [0, 0, 2], [1, 2, 2]], "minute_4": [[0, 2, 2], [0, 0, 2], [2, 2, 2]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0055.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["2", "1", "5", "4"], "answer": "5", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[1, 1, 2], [1, 0, 0], [1, 1, 0]], "minute_1": [[1, 2, 2], [1, 0, 0], [1, 1, 0]], "minute_2": [[2, 2, 2], [1, 0, 0], [1, 1, 0]], "minute_3": [[2, 2, 2], [2, 0, 0], [1, 1, 0]], "minute_4": [[2, 2, 2], [2, 0, 0], [2, 1, 0]], "minute_5": [[2, 2, 2], [2, 0, 0], [2, 2, 0]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0056.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["3", "2", "1", "6"], "answer": "2", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[0, 2, 1], [1, 1, 1], [0, 1, 0]], "minute_1": [[0, 2, 2], [1, 2, 1], [0, 1, 0]], "minute_2": [[0, 2, 2], [2, 2, 2], [0, 2, 0]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0057.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["1", "6", "3", "2"], "answer": "1", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[0, 0, 1], [0, 1, 2], [0, 0, 0]], "minute_1": [[0, 0, 2], [0, 2, 2], [0, 0, 0]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0058.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["3", "4", "5", "6"], "answer": "5", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[1, 1, 1], [2, 0, 1], [0, 0, 1]], "minute_1": [[2, 1, 1], [2, 0, 1], [0, 0, 1]], "minute_2": [[2, 2, 1], [2, 0, 1], [0, 0, 1]], "minute_3": [[2, 2, 2], [2, 0, 1], [0, 0, 1]], "minute_4": [[2, 2, 2], [2, 0, 2], [0, 0, 1]], "minute_5": [[2, 2, 2], [2, 0, 2], [0, 0, 2]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0059.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["1", "6", "2", "5"], "answer": "6", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[2, 0, 1], [1, 0, 1], [1, 1, 1]], "minute_1": [[2, 0, 1], [2, 0, 1], [1, 1, 1]], "minute_2": [[2, 0, 1], [2, 0, 1], [2, 1, 1]], "minute_3": [[2, 0, 1], [2, 0, 1], [2, 2, 1]], "minute_4": [[2, 0, 1], [2, 0, 1], [2, 2, 2]], "minute_5": [[2, 0, 1], [2, 0, 2], [2, 2, 2]], "minute_6": [[2, 0, 2], [2, 0, 2], [2, 2, 2]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0060.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["2", "3", "5", "1"], "answer": "3", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[1, 2, 1], [0, 1, 1], [1, 1, 0]], "minute_1": [[2, 2, 2], [0, 2, 1], [1, 1, 0]], "minute_2": [[2, 2, 2], [0, 2, 2], [1, 2, 0]], "minute_3": [[2, 2, 2], [0, 2, 2], [2, 2, 0]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0061.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["1", "2", "4", "6"], "answer": "2", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[0, 1, 0], [0, 1, 0], [1, 2, 0]], "minute_1": [[0, 1, 0], [0, 2, 0], [2, 2, 0]], "minute_2": [[0, 2, 0], [0, 2, 0], [2, 2, 0]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0062.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["4", "3", "1", "6"], "answer": "4", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[1, 1, 0], [2, 0, 1], [1, 1, 1]], "minute_1": [[2, 1, 0], [2, 0, 1], [2, 1, 1]], "minute_2": [[2, 2, 0], [2, 0, 1], [2, 2, 1]], "minute_3": [[2, 2, 0], [2, 0, 1], [2, 2, 2]], "minute_4": [[2, 2, 0], [2, 0, 2], [2, 2, 2]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0063.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["1", "6", "5", "4"], "answer": "1", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[0, 0, 0], [0, 0, 0], [0, 1, 2]], "minute_1": [[0, 0, 0], [0, 0, 0], [0, 2, 2]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0064.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["3", "6", "1", "4"], "answer": "3", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[0, 2, 0], [1, 1, 1], [1, 0, 0]], "minute_1": [[0, 2, 0], [1, 2, 1], [1, 0, 0]], "minute_2": [[0, 2, 0], [2, 2, 2], [1, 0, 0]], "minute_3": [[0, 2, 0], [2, 2, 2], [2, 0, 0]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0065.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["6", "5", "4", "2"], "answer": "2", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[0, 0, 0], [2, 0, 0], [1, 1, 0]], "minute_1": [[0, 0, 0], [2, 0, 0], [2, 1, 0]], "minute_2": [[0, 0, 0], [2, 0, 0], [2, 2, 0]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0066.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["3", "6", "2", "4"], "answer": "4", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[0, 1, 1], [0, 1, 0], [2, 1, 1]], "minute_1": [[0, 1, 1], [0, 1, 0], [2, 2, 1]], "minute_2": [[0, 1, 1], [0, 2, 0], [2, 2, 2]], "minute_3": [[0, 2, 1], [0, 2, 0], [2, 2, 2]], "minute_4": [[0, 2, 2], [0, 2, 0], [2, 2, 2]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0067.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["5", "4", "2", "6"], "answer": "4", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[1, 1, 0], [1, 1, 1], [1, 0, 2]], "minute_1": [[1, 1, 0], [1, 1, 2], [1, 0, 2]], "minute_2": [[1, 1, 0], [1, 2, 2], [1, 0, 2]], "minute_3": [[1, 2, 0], [2, 2, 2], [1, 0, 2]], "minute_4": [[2, 2, 0], [2, 2, 2], [2, 0, 2]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0068.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["3", "5", "1", "6"], "answer": "6", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[1, 2, 0], [1, 0, 1], [1, 1, 1]], "minute_1": [[2, 2, 0], [1, 0, 1], [1, 1, 1]], "minute_2": [[2, 2, 0], [2, 0, 1], [1, 1, 1]], "minute_3": [[2, 2, 0], [2, 0, 1], [2, 1, 1]], "minute_4": [[2, 2, 0], [2, 0, 1], [2, 2, 1]], "minute_5": [[2, 2, 0], [2, 0, 1], [2, 2, 2]], "minute_6": [[2, 2, 0], [2, 0, 2], [2, 2, 2]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0069.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["1", "4", "3", "5"], "answer": "4", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[0, 1, 1], [1, 1, 1], [1, 0, 2]], "minute_1": [[0, 1, 1], [1, 1, 2], [1, 0, 2]], "minute_2": [[0, 1, 2], [1, 2, 2], [1, 0, 2]], "minute_3": [[0, 2, 2], [2, 2, 2], [1, 0, 2]], "minute_4": [[0, 2, 2], [2, 2, 2], [2, 0, 2]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0070.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["2", "6", "3", "5"], "answer": "2", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[0, 0, 2], [0, 1, 1], [0, 0, 1]], "minute_1": [[0, 0, 2], [0, 1, 2], [0, 0, 1]], "minute_2": [[0, 0, 2], [0, 2, 2], [0, 0, 2]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0071.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["2", "5", "1", "3"], "answer": "1", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[1, 2, 0], [0, 0, 0], [0, 0, 0]], "minute_1": [[2, 2, 0], [0, 0, 0], [0, 0, 0]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0072.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["4", "3", "6", "1"], "answer": "4", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[1, 0, 0], [1, 1, 1], [1, 1, 2]], "minute_1": [[1, 0, 0], [1, 1, 2], [1, 2, 2]], "minute_2": [[1, 0, 0], [1, 2, 2], [2, 2, 2]], "minute_3": [[1, 0, 0], [2, 2, 2], [2, 2, 2]], "minute_4": [[2, 0, 0], [2, 2, 2], [2, 2, 2]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0073.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["3", "4", "6", "5"], "answer": "4", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[1, 0, 0], [1, 0, 0], [1, 1, 2]], "minute_1": [[1, 0, 0], [1, 0, 0], [1, 2, 2]], "minute_2": [[1, 0, 0], [1, 0, 0], [2, 2, 2]], "minute_3": [[1, 0, 0], [2, 0, 0], [2, 2, 2]], "minute_4": [[2, 0, 0], [2, 0, 0], [2, 2, 2]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0074.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["3", "6", "2", "5"], "answer": "2", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[0, 0, 0], [0, 1, 1], [0, 1, 2]], "minute_1": [[0, 0, 0], [0, 1, 2], [0, 2, 2]], "minute_2": [[0, 0, 0], [0, 2, 2], [0, 2, 2]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0075.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["6", "3", "2", "5"], "answer": "3", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[1, 0, 1], [2, 1, 1], [0, 1, 1]], "minute_1": [[2, 0, 1], [2, 2, 1], [0, 1, 1]], "minute_2": [[2, 0, 1], [2, 2, 2], [0, 2, 1]], "minute_3": [[2, 0, 2], [2, 2, 2], [0, 2, 2]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0076.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["2", "1", "4", "6"], "answer": "4", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[1, 0, 1], [1, 1, 1], [0, 0, 2]], "minute_1": [[1, 0, 1], [1, 1, 2], [0, 0, 2]], "minute_2": [[1, 0, 2], [1, 2, 2], [0, 0, 2]], "minute_3": [[1, 0, 2], [2, 2, 2], [0, 0, 2]], "minute_4": [[2, 0, 2], [2, 2, 2], [0, 0, 2]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0077.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["4", "1", "2", "5"], "answer": "2", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[1, 1, 0], [2, 0, 0], [1, 0, 0]], "minute_1": [[2, 1, 0], [2, 0, 0], [2, 0, 0]], "minute_2": [[2, 2, 0], [2, 0, 0], [2, 0, 0]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0078.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["6", "5", "3", "1"], "answer": "3", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[0, 1, 1], [0, 1, 1], [1, 1, 2]], "minute_1": [[0, 1, 1], [0, 1, 2], [1, 2, 2]], "minute_2": [[0, 1, 2], [0, 2, 2], [2, 2, 2]], "minute_3": [[0, 2, 2], [0, 2, 2], [2, 2, 2]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0079.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["5", "3", "4", "2"], "answer": "2", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[1, 1, 1], [1, 2, 0], [1, 1, 0]], "minute_1": [[1, 2, 1], [2, 2, 0], [1, 2, 0]], "minute_2": [[2, 2, 2], [2, 2, 0], [2, 2, 0]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0080.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["3", "1", "5", "2"], "answer": "2", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[0, 0, 0], [0, 1, 2], [0, 1, 0]], "minute_1": [[0, 0, 0], [0, 2, 2], [0, 1, 0]], "minute_2": [[0, 0, 0], [0, 2, 2], [0, 2, 0]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0081.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["1", "4", "5", "2"], "answer": "2", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[1, 1, 1], [1, 2, 0], [0, 1, 1]], "minute_1": [[1, 2, 1], [2, 2, 0], [0, 2, 1]], "minute_2": [[2, 2, 2], [2, 2, 0], [0, 2, 2]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0082.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["2", "5", "1", "3"], "answer": "1", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[0, 0, 0], [0, 1, 2], [0, 0, 0]], "minute_1": [[0, 0, 0], [0, 2, 2], [0, 0, 0]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0083.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["1", "4", "3", "2"], "answer": "3", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[0, 1, 1], [0, 1, 2], [1, 1, 1]], "minute_1": [[0, 1, 2], [0, 2, 2], [1, 1, 2]], "minute_2": [[0, 2, 2], [0, 2, 2], [1, 2, 2]], "minute_3": [[0, 2, 2], [0, 2, 2], [2, 2, 2]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0084.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["1", "4", "6", "2"], "answer": "2", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[0, 0, 2], [0, 0, 1], [0, 0, 1]], "minute_1": [[0, 0, 2], [0, 0, 2], [0, 0, 1]], "minute_2": [[0, 0, 2], [0, 0, 2], [0, 0, 2]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0085.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["3", "1", "2", "5"], "answer": "2", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[1, 1, 0], [1, 2, 1], [1, 0, 1]], "minute_1": [[1, 2, 0], [2, 2, 2], [1, 0, 1]], "minute_2": [[2, 2, 0], [2, 2, 2], [2, 0, 2]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0086.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["3", "6", "1", "4"], "answer": "1", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[0, 0, 0], [0, 1, 0], [1, 2, 0]], "minute_1": [[0, 0, 0], [0, 2, 0], [2, 2, 0]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0087.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["5", "6", "1", "2"], "answer": "2", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[1, 0, 0], [2, 1, 1], [1, 1, 0]], "minute_1": [[2, 0, 0], [2, 2, 1], [2, 1, 0]], "minute_2": [[2, 0, 0], [2, 2, 2], [2, 2, 0]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0088.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["6", "2", "5", "4"], "answer": "4", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[1, 2, 1], [1, 0, 1], [1, 1, 0]], "minute_1": [[2, 2, 2], [1, 0, 1], [1, 1, 0]], "minute_2": [[2, 2, 2], [2, 0, 2], [1, 1, 0]], "minute_3": [[2, 2, 2], [2, 0, 2], [2, 1, 0]], "minute_4": [[2, 2, 2], [2, 0, 2], [2, 2, 0]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0089.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["4", "3", "6", "5"], "answer": "3", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[2, 1, 1], [1, 0, 1], [1, 1, 0]], "minute_1": [[2, 2, 1], [2, 0, 1], [1, 1, 0]], "minute_2": [[2, 2, 2], [2, 0, 1], [2, 1, 0]], "minute_3": [[2, 2, 2], [2, 0, 2], [2, 2, 0]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0090.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["2", "6", "5", "1"], "answer": "2", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[0, 1, 1], [1, 2, 1], [1, 1, 0]], "minute_1": [[0, 2, 1], [2, 2, 2], [1, 2, 0]], "minute_2": [[0, 2, 2], [2, 2, 2], [2, 2, 0]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0091.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["2", "6", "4", "5"], "answer": "4", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[1, 0, 2], [1, 1, 1], [1, 0, 1]], "minute_1": [[1, 0, 2], [1, 1, 2], [1, 0, 1]], "minute_2": [[1, 0, 2], [1, 2, 2], [1, 0, 2]], "minute_3": [[1, 0, 2], [2, 2, 2], [1, 0, 2]], "minute_4": [[2, 0, 2], [2, 2, 2], [2, 0, 2]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0092.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["2", "4", "1", "3"], "answer": "2", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[0, 0, 0], [1, 1, 1], [0, 2, 0]], "minute_1": [[0, 0, 0], [1, 2, 1], [0, 2, 0]], "minute_2": [[0, 0, 0], [2, 2, 2], [0, 2, 0]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0093.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["6", "3", "5", "1"], "answer": "1", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[0, 0, 0], [1, 2, 1], [0, 0, 0]], "minute_1": [[0, 0, 0], [2, 2, 2], [0, 0, 0]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0094.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["4", "6", "2", "1"], "answer": "2", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[1, 1, 1], [0, 2, 1], [0, 1, 1]], "minute_1": [[1, 2, 1], [0, 2, 2], [0, 2, 1]], "minute_2": [[2, 2, 2], [0, 2, 2], [0, 2, 2]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0095.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["5", "2", "3", "6"], "answer": "3", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[1, 1, 2], [0, 1, 1], [0, 1, 0]], "minute_1": [[1, 2, 2], [0, 1, 2], [0, 1, 0]], "minute_2": [[2, 2, 2], [0, 2, 2], [0, 1, 0]], "minute_3": [[2, 2, 2], [0, 2, 2], [0, 2, 0]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0096.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["4", "5", "6", "2"], "answer": "4", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[0, 1, 2], [1, 1, 1], [1, 0, 1]], "minute_1": [[0, 2, 2], [1, 1, 2], [1, 0, 1]], "minute_2": [[0, 2, 2], [1, 2, 2], [1, 0, 2]], "minute_3": [[0, 2, 2], [2, 2, 2], [1, 0, 2]], "minute_4": [[0, 2, 2], [2, 2, 2], [2, 0, 2]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0097.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["6", "1", "3", "2"], "answer": "6", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[1, 1, 1], [1, 0, 1], [0, 2, 1]], "minute_1": [[1, 1, 1], [1, 0, 1], [0, 2, 2]], "minute_2": [[1, 1, 1], [1, 0, 2], [0, 2, 2]], "minute_3": [[1, 1, 2], [1, 0, 2], [0, 2, 2]], "minute_4": [[1, 2, 2], [1, 0, 2], [0, 2, 2]], "minute_5": [[2, 2, 2], [1, 0, 2], [0, 2, 2]], "minute_6": [[2, 2, 2], [2, 0, 2], [0, 2, 2]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0098.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["1", "4", "2", "3"], "answer": "4", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[1, 1, 2], [1, 0, 0], [1, 0, 0]], "minute_1": [[1, 2, 2], [1, 0, 0], [1, 0, 0]], "minute_2": [[2, 2, 2], [1, 0, 0], [1, 0, 0]], "minute_3": [[2, 2, 2], [2, 0, 0], [1, 0, 0]], "minute_4": [[2, 2, 2], [2, 0, 0], [2, 0, 0]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/rotting_kiwi/rotting_kiwi_0099.jpg", "question": "You are given a 3 x 3 grid in which each cell can contain either no kiwi, one fresh kiwi, or one rotten kiwi. Every minute, any fresh kiwi that is 4-directionally adjacent to a rotten kiwi also becomes rotten. What is the minimum number of minutes that must elapse until no cell has a fresh kiwi?", "options": ["2", "5", "1", "4"], "answer": "2", "solution": {"ids": {"empty": 0, "fresh": 1, "rotten": 2}, "timestep": {"minute_0": [[0, 1, 0], [0, 2, 1], [1, 1, 1]], "minute_1": [[0, 2, 0], [0, 2, 2], [1, 2, 1]], "minute_2": [[0, 2, 0], [0, 2, 2], [2, 2, 2]]}}, "source_file": "rotting_kiwi.json"}
{"image": "images/chain_link/chain_link_0000.jpg", "question": "Alice has 12 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 32 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 5 minutes and each welding takes 2 minutes. Initially, she has 3 segments each with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 32 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["3", "34", "27", "25"], "answer": "34", "solution": {"steps": [[3, 2, 1, 1, 3, 2], [4, 1, 1, 1, 3, 2], [5, 0, 1, 1, 3, 2], [6, 1, 0, 1, 3, 2], [7, 0, 0, 1, 3, 2]], "cuts": 4, "joins": 7, "each_cut_time": 5, "each_join_time": 2, "total_time": 34}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0001.jpg", "question": "Alice has 14 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 37 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 5 minutes and each welding takes 4 minutes. Initially, she has 3 segments each with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 37 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["62", "46", "39", "66"], "answer": "66", "solution": {"steps": [[3, 0, 4, 4, 1, 2], [4, 1, 3, 4, 1, 2], [5, 0, 3, 4, 1, 2], [6, 1, 2, 4, 1, 2], [7, 0, 2, 4, 1, 2], [8, 1, 1, 4, 1, 2], [9, 0, 1, 4, 1, 2]], "cuts": 6, "joins": 9, "each_cut_time": 5, "each_join_time": 4, "total_time": 66}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0002.jpg", "question": "Alice has 12 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 33 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 5 minutes and each welding takes 3 minutes. Initially, she has 2 segments each with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 33 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["13", "54", "18", "98"], "answer": "54", "solution": {"steps": [[2, 0, 3, 4, 2, 1], [3, 1, 2, 4, 2, 1], [4, 0, 2, 4, 2, 1], [5, 1, 1, 4, 2, 1], [6, 0, 1, 4, 2, 1], [7, 1, 0, 4, 2, 1], [8, 0, 0, 4, 2, 1]], "cuts": 6, "joins": 8, "each_cut_time": 5, "each_join_time": 3, "total_time": 54}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0003.jpg", "question": "Alice has 11 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 19 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 5 minutes and each welding takes 5 minutes. Initially, she has 4 segments each with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 19 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["5", "48", "7", "40"], "answer": "40", "solution": {"steps": [[4, 2, 3, 1, 1, 0], [5, 1, 3, 1, 1, 0], [6, 0, 3, 1, 1, 0]], "cuts": 2, "joins": 6, "each_cut_time": 5, "each_join_time": 5, "total_time": 40}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0004.jpg", "question": "Alice has 8 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 23 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 5 minutes and each welding takes 5 minutes. Initially, she has 1 segment with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 23 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["41", "80", "55", "57"], "answer": "55", "solution": {"steps": [[1, 0, 1, 4, 2, 0], [2, 1, 0, 4, 2, 0], [3, 0, 0, 4, 2, 0], [4, 0, 1, 3, 2, 0], [5, 1, 0, 3, 2, 0], [6, 0, 0, 3, 2, 0]], "cuts": 5, "joins": 6, "each_cut_time": 5, "each_join_time": 5, "total_time": 55}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0005.jpg", "question": "Alice has 10 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 19 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 2 minutes and each welding takes 4 minutes. Initially, she has 3 segments each with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 19 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["35", "30", "17", "4"], "answer": "30", "solution": {"steps": [[3, 1, 3, 3, 0, 0], [4, 0, 3, 3, 0, 0], [5, 1, 2, 3, 0, 0], [6, 0, 2, 3, 0, 0]], "cuts": 3, "joins": 6, "each_cut_time": 2, "each_join_time": 4, "total_time": 30}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0006.jpg", "question": "Alice has 11 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 26 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 2 minutes and each welding takes 5 minutes. Initially, she has 2 segments each with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 26 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["32", "22", "38", "41"], "answer": "38", "solution": {"steps": [[2, 2, 2, 2, 3, 0], [3, 1, 2, 2, 3, 0], [4, 0, 2, 2, 3, 0], [5, 1, 1, 2, 3, 0], [6, 0, 1, 2, 3, 0]], "cuts": 4, "joins": 6, "each_cut_time": 2, "each_join_time": 5, "total_time": 38}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0007.jpg", "question": "Alice has 9 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 26 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 5 minutes and each welding takes 5 minutes. Initially, there are no open pieces in any of the segments. She now wants to make the longest possible necklace using all the available 26 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["74", "25", "60", "29"], "answer": "60", "solution": {"steps": [[0, 3, 0, 3, 1, 2], [1, 2, 0, 3, 1, 2], [2, 1, 0, 3, 1, 2], [3, 0, 0, 3, 1, 2], [4, 0, 1, 2, 1, 2], [5, 1, 0, 2, 1, 2], [6, 0, 0, 2, 1, 2]], "cuts": 6, "joins": 6, "each_cut_time": 5, "each_join_time": 5, "total_time": 60}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0008.jpg", "question": "Alice has 11 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 27 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 2 minutes and each welding takes 2 minutes. Initially, there are no open pieces in any of the segments. She now wants to make the longest possible necklace using all the available 27 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["28", "6", "21", "34"], "answer": "28", "solution": {"steps": [[0, 3, 4, 2, 0, 2], [1, 2, 4, 2, 0, 2], [2, 1, 4, 2, 0, 2], [3, 0, 4, 2, 0, 2], [4, 1, 3, 2, 0, 2], [5, 0, 3, 2, 0, 2], [6, 1, 2, 2, 0, 2], [7, 0, 2, 2, 0, 2]], "cuts": 7, "joins": 7, "each_cut_time": 2, "each_join_time": 2, "total_time": 28}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0009.jpg", "question": "Alice has 8 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 24 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 4 minutes and each welding takes 2 minutes. Initially, she has 2 segments each with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 24 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["37", "22", "47", "8"], "answer": "22", "solution": {"steps": [[2, 0, 0, 3, 2, 1], [3, 0, 1, 2, 2, 1], [4, 1, 0, 2, 2, 1], [5, 0, 0, 2, 2, 1]], "cuts": 3, "joins": 5, "each_cut_time": 4, "each_join_time": 2, "total_time": 22}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0010.jpg", "question": "Alice has 10 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 31 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 3 minutes and each welding takes 2 minutes. Initially, she has 1 segment with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 31 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["32", "6", "29", "40"], "answer": "32", "solution": {"steps": [[1, 0, 4, 0, 3, 2], [2, 1, 3, 0, 3, 2], [3, 0, 3, 0, 3, 2], [4, 1, 2, 0, 3, 2], [5, 0, 2, 0, 3, 2], [6, 1, 1, 0, 3, 2], [7, 0, 1, 0, 3, 2]], "cuts": 6, "joins": 7, "each_cut_time": 3, "each_join_time": 2, "total_time": 32}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0011.jpg", "question": "Alice has 11 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 30 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 2 minutes and each welding takes 3 minutes. Initially, she has 2 segments each with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 30 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["3", "13", "12", "31"], "answer": "31", "solution": {"steps": [[2, 1, 1, 4, 2, 1], [3, 0, 1, 4, 2, 1], [4, 1, 0, 4, 2, 1], [5, 0, 0, 4, 2, 1], [6, 0, 1, 3, 2, 1], [7, 1, 0, 3, 2, 1]], "cuts": 5, "joins": 7, "each_cut_time": 2, "each_join_time": 3, "total_time": 31}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0012.jpg", "question": "Alice has 8 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 23 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 3 minutes and each welding takes 2 minutes. Initially, she has 3 segments each with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 23 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["45", "16", "9", "10"], "answer": "16", "solution": {"steps": [[3, 0, 0, 1, 3, 1], [4, 0, 1, 0, 3, 1], [5, 1, 0, 0, 3, 1]], "cuts": 2, "joins": 5, "each_cut_time": 3, "each_join_time": 2, "total_time": 16}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0013.jpg", "question": "Alice has 11 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 21 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 4 minutes and each welding takes 2 minutes. Initially, she has 4 segments each with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 21 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["20", "14", "16", "35"], "answer": "20", "solution": {"steps": [[4, 2, 2, 2, 0, 1], [5, 1, 2, 2, 0, 1], [6, 0, 2, 2, 0, 1]], "cuts": 2, "joins": 6, "each_cut_time": 4, "each_join_time": 2, "total_time": 20}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0014.jpg", "question": "Alice has 11 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 22 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 4 minutes and each welding takes 3 minutes. Initially, she has 2 segments each with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 22 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["43", "32", "44", "34"], "answer": "34", "solution": {"steps": [[2, 4, 2, 0, 3, 0], [3, 3, 2, 0, 3, 0], [4, 2, 2, 0, 3, 0], [5, 1, 2, 0, 3, 0], [6, 0, 2, 0, 3, 0]], "cuts": 4, "joins": 6, "each_cut_time": 4, "each_join_time": 3, "total_time": 34}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0015.jpg", "question": "Alice has 14 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 32 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 4 minutes and each welding takes 4 minutes. Initially, she has 3 segments each with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 32 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["41", "32", "44", "38"], "answer": "44", "solution": {"steps": [[3, 4, 0, 4, 2, 1], [4, 3, 0, 4, 2, 1], [5, 2, 0, 4, 2, 1], [6, 1, 0, 4, 2, 1], [7, 0, 0, 4, 2, 1]], "cuts": 4, "joins": 7, "each_cut_time": 4, "each_join_time": 4, "total_time": 44}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0016.jpg", "question": "Alice has 9 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 24 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 3 minutes and each welding takes 3 minutes. Initially, there are no open pieces in any of the segments. She now wants to make the longest possible necklace using all the available 24 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["18", "36", "48", "8"], "answer": "36", "solution": {"steps": [[0, 2, 3, 1, 2, 1], [1, 1, 3, 1, 2, 1], [2, 0, 3, 1, 2, 1], [3, 1, 2, 1, 2, 1], [4, 0, 2, 1, 2, 1], [5, 1, 1, 1, 2, 1], [6, 0, 1, 1, 2, 1]], "cuts": 6, "joins": 6, "each_cut_time": 3, "each_join_time": 3, "total_time": 36}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0017.jpg", "question": "Alice has 12 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 35 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 5 minutes and each welding takes 2 minutes. Initially, there are no open pieces in any of the segments. She now wants to make the longest possible necklace using all the available 35 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["8", "13", "55", "56"], "answer": "56", "solution": {"steps": [[0, 1, 4, 3, 3, 1], [1, 0, 4, 3, 3, 1], [2, 1, 3, 3, 3, 1], [3, 0, 3, 3, 3, 1], [4, 1, 2, 3, 3, 1], [5, 0, 2, 3, 3, 1], [6, 1, 1, 3, 3, 1], [7, 0, 1, 3, 3, 1], [8, 1, 0, 3, 3, 1]], "cuts": 8, "joins": 8, "each_cut_time": 5, "each_join_time": 2, "total_time": 56}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0018.jpg", "question": "Alice has 12 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 28 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 5 minutes and each welding takes 4 minutes. Initially, she has 2 segments each with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 28 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["37", "44", "35", "41"], "answer": "44", "solution": {"steps": [[2, 4, 2, 0, 2, 2], [3, 3, 2, 0, 2, 2], [4, 2, 2, 0, 2, 2], [5, 1, 2, 0, 2, 2], [6, 0, 2, 0, 2, 2]], "cuts": 4, "joins": 6, "each_cut_time": 5, "each_join_time": 4, "total_time": 44}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0019.jpg", "question": "Alice has 13 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 35 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 2 minutes and each welding takes 4 minutes. Initially, there are no open pieces in any of the segments. She now wants to make the longest possible necklace using all the available 35 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["48", "39", "37", "8"], "answer": "48", "solution": {"steps": [[0, 3, 3, 3, 3, 1], [1, 2, 3, 3, 3, 1], [2, 1, 3, 3, 3, 1], [3, 0, 3, 3, 3, 1], [4, 1, 2, 3, 3, 1], [5, 0, 2, 3, 3, 1], [6, 1, 1, 3, 3, 1], [7, 0, 1, 3, 3, 1], [8, 1, 0, 3, 3, 1]], "cuts": 8, "joins": 8, "each_cut_time": 2, "each_join_time": 4, "total_time": 48}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0020.jpg", "question": "Alice has 12 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 38 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 4 minutes and each welding takes 2 minutes. Initially, she has 1 segment with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 38 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["39", "3", "2", "44"], "answer": "44", "solution": {"steps": [[1, 0, 3, 3, 3, 2], [2, 1, 2, 3, 3, 2], [3, 0, 2, 3, 3, 2], [4, 1, 1, 3, 3, 2], [5, 0, 1, 3, 3, 2], [6, 1, 0, 3, 3, 2], [7, 0, 0, 3, 3, 2], [8, 0, 1, 2, 3, 2]], "cuts": 7, "joins": 8, "each_cut_time": 4, "each_join_time": 2, "total_time": 44}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0021.jpg", "question": "Alice has 10 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 19 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 2 minutes and each welding takes 5 minutes. Initially, she has 4 segments each with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 19 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["14", "4", "48", "27"], "answer": "27", "solution": {"steps": [[4, 1, 2, 2, 1, 0], [5, 0, 2, 2, 1, 0]], "cuts": 1, "joins": 5, "each_cut_time": 2, "each_join_time": 5, "total_time": 27}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0022.jpg", "question": "Alice has 11 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 29 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 5 minutes and each welding takes 4 minutes. Initially, she has 2 segments each with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 29 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["17", "15", "5", "44"], "answer": "44", "solution": {"steps": [[2, 2, 2, 1, 2, 2], [3, 1, 2, 1, 2, 2], [4, 0, 2, 1, 2, 2], [5, 1, 1, 1, 2, 2], [6, 0, 1, 1, 2, 2]], "cuts": 4, "joins": 6, "each_cut_time": 5, "each_join_time": 4, "total_time": 44}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0023.jpg", "question": "Alice has 14 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 31 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 5 minutes and each welding takes 2 minutes. Initially, she has 4 segments each with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 31 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["36", "28", "4", "12"], "answer": "36", "solution": {"steps": [[4, 1, 4, 2, 3, 0], [5, 0, 4, 2, 3, 0], [6, 1, 3, 2, 3, 0], [7, 0, 3, 2, 3, 0], [8, 1, 2, 2, 3, 0]], "cuts": 4, "joins": 8, "each_cut_time": 5, "each_join_time": 2, "total_time": 36}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0024.jpg", "question": "Alice has 11 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 20 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 5 minutes and each welding takes 3 minutes. Initially, she has 4 segments each with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 20 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["28", "23", "13", "17"], "answer": "28", "solution": {"steps": [[4, 1, 3, 3, 0, 0], [5, 0, 3, 3, 0, 0], [6, 1, 2, 3, 0, 0]], "cuts": 2, "joins": 6, "each_cut_time": 5, "each_join_time": 3, "total_time": 28}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0025.jpg", "question": "Alice has 8 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 20 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 5 minutes and each welding takes 4 minutes. Initially, she has 2 segments each with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 20 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["45", "35", "11", "4"], "answer": "35", "solution": {"steps": [[2, 0, 3, 1, 1, 1], [3, 1, 2, 1, 1, 1], [4, 0, 2, 1, 1, 1], [5, 1, 1, 1, 1, 1]], "cuts": 3, "joins": 5, "each_cut_time": 5, "each_join_time": 4, "total_time": 35}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0026.jpg", "question": "Alice has 11 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 28 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 2 minutes and each welding takes 2 minutes. Initially, she has 1 segment with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 28 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["30", "40", "26", "44"], "answer": "26", "solution": {"steps": [[1, 3, 0, 4, 3, 0], [2, 2, 0, 4, 3, 0], [3, 1, 0, 4, 3, 0], [4, 0, 0, 4, 3, 0], [5, 0, 1, 3, 3, 0], [6, 1, 0, 3, 3, 0], [7, 0, 0, 3, 3, 0]], "cuts": 6, "joins": 7, "each_cut_time": 2, "each_join_time": 2, "total_time": 26}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0027.jpg", "question": "Alice has 11 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 24 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 2 minutes and each welding takes 3 minutes. Initially, she has 1 segment with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 24 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["20", "34", "28", "38"], "answer": "28", "solution": {"steps": [[1, 3, 4, 0, 3, 0], [2, 2, 4, 0, 3, 0], [3, 1, 4, 0, 3, 0], [4, 0, 4, 0, 3, 0], [5, 1, 3, 0, 3, 0], [6, 0, 3, 0, 3, 0]], "cuts": 5, "joins": 6, "each_cut_time": 2, "each_join_time": 3, "total_time": 28}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0028.jpg", "question": "Alice has 8 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 17 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 2 minutes and each welding takes 3 minutes. Initially, she has 4 segments each with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 17 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["12", "1", "37", "46"], "answer": "12", "solution": {"steps": [[4, 0, 2, 0, 1, 1]], "cuts": 0, "joins": 4, "each_cut_time": 2, "each_join_time": 3, "total_time": 12}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0029.jpg", "question": "Alice has 16 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 41 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 4 minutes and each welding takes 2 minutes. Initially, she has 2 segments each with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 41 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["35", "49", "46", "3"], "answer": "46", "solution": {"steps": [[2, 3, 3, 4, 2, 2], [3, 2, 3, 4, 2, 2], [4, 1, 3, 4, 2, 2], [5, 0, 3, 4, 2, 2], [6, 1, 2, 4, 2, 2], [7, 0, 2, 4, 2, 2], [8, 1, 1, 4, 2, 2], [9, 0, 1, 4, 2, 2]], "cuts": 7, "joins": 9, "each_cut_time": 4, "each_join_time": 2, "total_time": 46}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0030.jpg", "question": "Alice has 9 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 23 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 4 minutes and each welding takes 5 minutes. Initially, there are no open pieces in any of the segments. She now wants to make the longest possible necklace using all the available 23 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["37", "54", "46", "80"], "answer": "54", "solution": {"steps": [[0, 1, 3, 4, 1, 0], [1, 0, 3, 4, 1, 0], [2, 1, 2, 4, 1, 0], [3, 0, 2, 4, 1, 0], [4, 1, 1, 4, 1, 0], [5, 0, 1, 4, 1, 0], [6, 1, 0, 4, 1, 0]], "cuts": 6, "joins": 6, "each_cut_time": 4, "each_join_time": 5, "total_time": 54}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0031.jpg", "question": "Alice has 8 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 17 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 5 minutes and each welding takes 2 minutes. Initially, she has 4 segments each with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 17 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["7", "8", "4", "6"], "answer": "8", "solution": {"steps": [[4, 1, 1, 0, 0, 2]], "cuts": 0, "joins": 4, "each_cut_time": 5, "each_join_time": 2, "total_time": 8}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0032.jpg", "question": "Alice has 15 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 35 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 3 minutes and each welding takes 4 minutes. Initially, she has 2 segments each with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 35 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["50", "16", "15", "11"], "answer": "50", "solution": {"steps": [[2, 4, 4, 1, 2, 2], [3, 3, 4, 1, 2, 2], [4, 2, 4, 1, 2, 2], [5, 1, 4, 1, 2, 2], [6, 0, 4, 1, 2, 2], [7, 1, 3, 1, 2, 2], [8, 0, 3, 1, 2, 2]], "cuts": 6, "joins": 8, "each_cut_time": 3, "each_join_time": 4, "total_time": 50}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0033.jpg", "question": "Alice has 10 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 27 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 4 minutes and each welding takes 4 minutes. Initially, there are no open pieces in any of the segments. She now wants to make the longest possible necklace using all the available 27 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["48", "37", "26", "45"], "answer": "48", "solution": {"steps": [[0, 3, 1, 4, 0, 2], [1, 2, 1, 4, 0, 2], [2, 1, 1, 4, 0, 2], [3, 0, 1, 4, 0, 2], [4, 1, 0, 4, 0, 2], [5, 0, 0, 4, 0, 2], [6, 0, 1, 3, 0, 2]], "cuts": 6, "joins": 6, "each_cut_time": 4, "each_join_time": 4, "total_time": 48}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0034.jpg", "question": "Alice has 8 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 21 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 4 minutes and each welding takes 3 minutes. Initially, she has 3 segments each with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 21 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["5", "23", "17", "30"], "answer": "23", "solution": {"steps": [[3, 0, 1, 1, 2, 1], [4, 1, 0, 1, 2, 1], [5, 0, 0, 1, 2, 1]], "cuts": 2, "joins": 5, "each_cut_time": 4, "each_join_time": 3, "total_time": 23}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0035.jpg", "question": "Alice has 12 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 30 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 4 minutes and each welding takes 2 minutes. Initially, she has 4 segments each with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 30 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["21", "33", "3", "26"], "answer": "26", "solution": {"steps": [[4, 0, 1, 4, 3, 0], [5, 1, 0, 4, 3, 0], [6, 0, 0, 4, 3, 0], [7, 0, 1, 3, 3, 0]], "cuts": 3, "joins": 7, "each_cut_time": 4, "each_join_time": 2, "total_time": 26}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0036.jpg", "question": "Alice has 9 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 22 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 5 minutes and each welding takes 3 minutes. Initially, she has 2 segments each with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 22 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["13", "42", "30", "37"], "answer": "30", "solution": {"steps": [[2, 1, 1, 4, 0, 1], [3, 0, 1, 4, 0, 1], [4, 1, 0, 4, 0, 1], [5, 0, 0, 4, 0, 1]], "cuts": 3, "joins": 5, "each_cut_time": 5, "each_join_time": 3, "total_time": 30}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0037.jpg", "question": "Alice has 14 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 32 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 3 minutes and each welding takes 2 minutes. Initially, she has 3 segments each with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 32 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["27", "26", "31", "45"], "answer": "31", "solution": {"steps": [[3, 1, 4, 4, 2, 0], [4, 0, 4, 4, 2, 0], [5, 1, 3, 4, 2, 0], [6, 0, 3, 4, 2, 0], [7, 1, 2, 4, 2, 0], [8, 0, 2, 4, 2, 0]], "cuts": 5, "joins": 8, "each_cut_time": 3, "each_join_time": 2, "total_time": 31}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0038.jpg", "question": "Alice has 10 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 29 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 5 minutes and each welding takes 4 minutes. Initially, she has 3 segments each with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 29 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["47", "39", "45", "1"], "answer": "39", "solution": {"steps": [[3, 0, 0, 4, 1, 2], [4, 0, 1, 3, 1, 2], [5, 1, 0, 3, 1, 2], [6, 0, 0, 3, 1, 2]], "cuts": 3, "joins": 6, "each_cut_time": 5, "each_join_time": 4, "total_time": 39}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0039.jpg", "question": "Alice has 11 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 29 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 2 minutes and each welding takes 5 minutes. Initially, she has 1 segment with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 29 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["18", "20", "47", "45"], "answer": "47", "solution": {"steps": [[1, 2, 3, 2, 1, 2], [2, 1, 3, 2, 1, 2], [3, 0, 3, 2, 1, 2], [4, 1, 2, 2, 1, 2], [5, 0, 2, 2, 1, 2], [6, 1, 1, 2, 1, 2], [7, 0, 1, 2, 1, 2]], "cuts": 6, "joins": 7, "each_cut_time": 2, "each_join_time": 5, "total_time": 47}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0040.jpg", "question": "Alice has 9 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 22 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 3 minutes and each welding takes 3 minutes. Initially, she has 2 segments each with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 22 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["2", "6", "42", "24"], "answer": "24", "solution": {"steps": [[2, 1, 1, 3, 2, 0], [3, 0, 1, 3, 2, 0], [4, 1, 0, 3, 2, 0], [5, 0, 0, 3, 2, 0]], "cuts": 3, "joins": 5, "each_cut_time": 3, "each_join_time": 3, "total_time": 24}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0041.jpg", "question": "Alice has 10 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 29 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 5 minutes and each welding takes 2 minutes. Initially, there are no open pieces in any of the segments. She now wants to make the longest possible necklace using all the available 29 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["34", "9", "49", "42"], "answer": "49", "solution": {"steps": [[0, 0, 4, 4, 1, 1], [1, 1, 3, 4, 1, 1], [2, 0, 3, 4, 1, 1], [3, 1, 2, 4, 1, 1], [4, 0, 2, 4, 1, 1], [5, 1, 1, 4, 1, 1], [6, 0, 1, 4, 1, 1], [7, 1, 0, 4, 1, 1]], "cuts": 7, "joins": 7, "each_cut_time": 5, "each_join_time": 2, "total_time": 49}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0042.jpg", "question": "Alice has 16 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 41 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 4 minutes and each welding takes 2 minutes. Initially, she has 3 segments each with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 41 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["14", "42", "3", "2"], "answer": "42", "solution": {"steps": [[3, 4, 0, 4, 3, 2], [4, 3, 0, 4, 3, 2], [5, 2, 0, 4, 3, 2], [6, 1, 0, 4, 3, 2], [7, 0, 0, 4, 3, 2], [8, 0, 1, 3, 3, 2], [9, 1, 0, 3, 3, 2]], "cuts": 6, "joins": 9, "each_cut_time": 4, "each_join_time": 2, "total_time": 42}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0043.jpg", "question": "Alice has 8 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 18 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 3 minutes and each welding takes 2 minutes. Initially, she has 4 segments each with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 18 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["8", "6", "7", "1"], "answer": "8", "solution": {"steps": [[4, 0, 2, 0, 0, 2]], "cuts": 0, "joins": 4, "each_cut_time": 3, "each_join_time": 2, "total_time": 8}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0044.jpg", "question": "Alice has 12 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 28 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 2 minutes and each welding takes 4 minutes. Initially, she has 2 segments each with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 28 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["35", "38", "12", "24"], "answer": "38", "solution": {"steps": [[2, 3, 3, 1, 1, 2], [3, 2, 3, 1, 1, 2], [4, 1, 3, 1, 1, 2], [5, 0, 3, 1, 1, 2], [6, 1, 2, 1, 1, 2], [7, 0, 2, 1, 1, 2]], "cuts": 5, "joins": 7, "each_cut_time": 2, "each_join_time": 4, "total_time": 38}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0045.jpg", "question": "Alice has 13 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 23 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 4 minutes and each welding takes 4 minutes. Initially, she has 4 segments each with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 23 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["18", "10", "40", "9"], "answer": "40", "solution": {"steps": [[4, 4, 3, 0, 1, 1], [5, 3, 3, 0, 1, 1], [6, 2, 3, 0, 1, 1], [7, 1, 3, 0, 1, 1]], "cuts": 3, "joins": 7, "each_cut_time": 4, "each_join_time": 4, "total_time": 40}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0046.jpg", "question": "Alice has 8 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 18 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 3 minutes and each welding takes 4 minutes. Initially, she has 4 segments each with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 18 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["23", "41", "16", "3"], "answer": "16", "solution": {"steps": [[4, 0, 1, 1, 1, 1]], "cuts": 0, "joins": 4, "each_cut_time": 3, "each_join_time": 4, "total_time": 16}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0047.jpg", "question": "Alice has 16 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 35 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 5 minutes and each welding takes 2 minutes. Initially, she has 4 segments each with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 35 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["43", "24", "38", "19"], "answer": "43", "solution": {"steps": [[4, 2, 4, 3, 3, 0], [5, 1, 4, 3, 3, 0], [6, 0, 4, 3, 3, 0], [7, 1, 3, 3, 3, 0], [8, 0, 3, 3, 3, 0], [9, 1, 2, 3, 3, 0]], "cuts": 5, "joins": 9, "each_cut_time": 5, "each_join_time": 2, "total_time": 43}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0048.jpg", "question": "Alice has 11 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 24 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 2 minutes and each welding takes 3 minutes. Initially, she has 3 segments each with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 24 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["32", "8", "24", "48"], "answer": "24", "solution": {"steps": [[3, 4, 0, 0, 3, 1], [4, 3, 0, 0, 3, 1], [5, 2, 0, 0, 3, 1], [6, 1, 0, 0, 3, 1]], "cuts": 3, "joins": 6, "each_cut_time": 2, "each_join_time": 3, "total_time": 24}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0049.jpg", "question": "Alice has 9 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 22 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 5 minutes and each welding takes 3 minutes. Initially, she has 3 segments each with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 22 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["5", "48", "25", "35"], "answer": "25", "solution": {"steps": [[3, 1, 1, 1, 2, 1], [4, 0, 1, 1, 2, 1], [5, 1, 0, 1, 2, 1]], "cuts": 2, "joins": 5, "each_cut_time": 5, "each_join_time": 3, "total_time": 25}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0050.jpg", "question": "Alice has 14 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 30 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 5 minutes and each welding takes 5 minutes. Initially, she has 4 segments each with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 30 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["60", "14", "13", "54"], "answer": "60", "solution": {"steps": [[4, 2, 2, 4, 2, 0], [5, 1, 2, 4, 2, 0], [6, 0, 2, 4, 2, 0], [7, 1, 1, 4, 2, 0], [8, 0, 1, 4, 2, 0]], "cuts": 4, "joins": 8, "each_cut_time": 5, "each_join_time": 5, "total_time": 60}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0051.jpg", "question": "Alice has 11 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 24 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 2 minutes and each welding takes 4 minutes. Initially, she has 3 segments each with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 24 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["30", "32", "8", "46"], "answer": "30", "solution": {"steps": [[3, 3, 0, 3, 1, 1], [4, 2, 0, 3, 1, 1], [5, 1, 0, 3, 1, 1], [6, 0, 0, 3, 1, 1]], "cuts": 3, "joins": 6, "each_cut_time": 2, "each_join_time": 4, "total_time": 30}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0052.jpg", "question": "Alice has 9 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 26 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 5 minutes and each welding takes 3 minutes. Initially, she has 1 segment with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 26 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["49", "22", "43", "45"], "answer": "43", "solution": {"steps": [[1, 1, 2, 1, 3, 1], [2, 0, 2, 1, 3, 1], [3, 1, 1, 1, 3, 1], [4, 0, 1, 1, 3, 1], [5, 1, 0, 1, 3, 1], [6, 0, 0, 1, 3, 1]], "cuts": 5, "joins": 6, "each_cut_time": 5, "each_join_time": 3, "total_time": 43}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0053.jpg", "question": "Alice has 9 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 17 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 5 minutes and each welding takes 3 minutes. Initially, she has 3 segments each with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 17 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["6", "5", "25", "13"], "answer": "25", "solution": {"steps": [[3, 2, 0, 4, 0, 0], [4, 1, 0, 4, 0, 0], [5, 0, 0, 4, 0, 0]], "cuts": 2, "joins": 5, "each_cut_time": 5, "each_join_time": 3, "total_time": 25}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0054.jpg", "question": "Alice has 16 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 33 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 3 minutes and each welding takes 4 minutes. Initially, she has 3 segments each with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 33 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["73", "51", "54", "13"], "answer": "54", "solution": {"steps": [[3, 4, 4, 3, 1, 1], [4, 3, 4, 3, 1, 1], [5, 2, 4, 3, 1, 1], [6, 1, 4, 3, 1, 1], [7, 0, 4, 3, 1, 1], [8, 1, 3, 3, 1, 1], [9, 0, 3, 3, 1, 1]], "cuts": 6, "joins": 9, "each_cut_time": 3, "each_join_time": 4, "total_time": 54}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0055.jpg", "question": "Alice has 9 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 25 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 2 minutes and each welding takes 4 minutes. Initially, she has 3 segments each with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 25 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["6", "24", "29", "25"], "answer": "24", "solution": {"steps": [[3, 1, 0, 1, 2, 2], [4, 0, 0, 1, 2, 2], [5, 0, 1, 0, 2, 2]], "cuts": 2, "joins": 5, "each_cut_time": 2, "each_join_time": 4, "total_time": 24}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0056.jpg", "question": "Alice has 14 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 28 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 4 minutes and each welding takes 5 minutes. Initially, she has 3 segments each with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 28 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["25", "15", "51", "46"], "answer": "51", "solution": {"steps": [[3, 4, 2, 4, 0, 1], [4, 3, 2, 4, 0, 1], [5, 2, 2, 4, 0, 1], [6, 1, 2, 4, 0, 1], [7, 0, 2, 4, 0, 1]], "cuts": 4, "joins": 7, "each_cut_time": 4, "each_join_time": 5, "total_time": 51}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0057.jpg", "question": "Alice has 10 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 25 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 4 minutes and each welding takes 5 minutes. Initially, there are no open pieces in any of the segments. She now wants to make the longest possible necklace using all the available 25 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["98", "88", "26", "54"], "answer": "54", "solution": {"steps": [[0, 3, 3, 2, 0, 2], [1, 2, 3, 2, 0, 2], [2, 1, 3, 2, 0, 2], [3, 0, 3, 2, 0, 2], [4, 1, 2, 2, 0, 2], [5, 0, 2, 2, 0, 2], [6, 1, 1, 2, 0, 2]], "cuts": 6, "joins": 6, "each_cut_time": 4, "each_join_time": 5, "total_time": 54}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0058.jpg", "question": "Alice has 14 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 30 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 4 minutes and each welding takes 5 minutes. Initially, she has 2 segments each with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 30 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["84", "6", "27", "64"], "answer": "64", "solution": {"steps": [[2, 4, 3, 3, 1, 1], [3, 3, 3, 3, 1, 1], [4, 2, 3, 3, 1, 1], [5, 1, 3, 3, 1, 1], [6, 0, 3, 3, 1, 1], [7, 1, 2, 3, 1, 1], [8, 0, 2, 3, 1, 1]], "cuts": 6, "joins": 8, "each_cut_time": 4, "each_join_time": 5, "total_time": 64}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0059.jpg", "question": "Alice has 10 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 23 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 4 minutes and each welding takes 2 minutes. Initially, she has 1 segment with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 23 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["25", "32", "13", "30"], "answer": "32", "solution": {"steps": [[1, 3, 3, 0, 2, 1], [2, 2, 3, 0, 2, 1], [3, 1, 3, 0, 2, 1], [4, 0, 3, 0, 2, 1], [5, 1, 2, 0, 2, 1], [6, 0, 2, 0, 2, 1]], "cuts": 5, "joins": 6, "each_cut_time": 4, "each_join_time": 2, "total_time": 32}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0060.jpg", "question": "Alice has 8 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 24 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 2 minutes and each welding takes 4 minutes. Initially, she has 2 segments each with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 24 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["26", "10", "33", "40"], "answer": "26", "solution": {"steps": [[2, 0, 0, 4, 0, 2], [3, 0, 1, 3, 0, 2], [4, 1, 0, 3, 0, 2], [5, 0, 0, 3, 0, 2]], "cuts": 3, "joins": 5, "each_cut_time": 2, "each_join_time": 4, "total_time": 26}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0061.jpg", "question": "Alice has 9 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 22 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 2 minutes and each welding takes 4 minutes. Initially, she has 1 segment with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 22 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["28", "33", "45", "21"], "answer": "28", "solution": {"steps": [[1, 3, 1, 1, 2, 1], [2, 2, 1, 1, 2, 1], [3, 1, 1, 1, 2, 1], [4, 0, 1, 1, 2, 1], [5, 1, 0, 1, 2, 1]], "cuts": 4, "joins": 5, "each_cut_time": 2, "each_join_time": 4, "total_time": 28}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0062.jpg", "question": "Alice has 9 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 27 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 3 minutes and each welding takes 3 minutes. Initially, she has 2 segments each with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 27 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["47", "22", "1", "30"], "answer": "30", "solution": {"steps": [[2, 0, 1, 2, 3, 1], [3, 1, 0, 2, 3, 1], [4, 0, 0, 2, 3, 1], [5, 0, 1, 1, 3, 1], [6, 1, 0, 1, 3, 1]], "cuts": 4, "joins": 6, "each_cut_time": 3, "each_join_time": 3, "total_time": 30}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0063.jpg", "question": "Alice has 8 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 15 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 5 minutes and each welding takes 4 minutes. Initially, she has 1 segment with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 15 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["31", "10", "40", "17"], "answer": "31", "solution": {"steps": [[1, 4, 0, 2, 1, 0], [2, 3, 0, 2, 1, 0], [3, 2, 0, 2, 1, 0], [4, 1, 0, 2, 1, 0]], "cuts": 3, "joins": 4, "each_cut_time": 5, "each_join_time": 4, "total_time": 31}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0064.jpg", "question": "Alice has 10 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 28 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 3 minutes and each welding takes 4 minutes. Initially, she has 2 segments each with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 28 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["5", "36", "34", "6"], "answer": "36", "solution": {"steps": [[2, 2, 1, 0, 3, 2], [3, 1, 1, 0, 3, 2], [4, 0, 1, 0, 3, 2], [5, 1, 0, 0, 3, 2], [6, 0, 0, 0, 3, 2]], "cuts": 4, "joins": 6, "each_cut_time": 3, "each_join_time": 4, "total_time": 36}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0065.jpg", "question": "Alice has 10 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 24 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 4 minutes and each welding takes 2 minutes. Initially, she has 3 segments each with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 24 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["24", "20", "3", "1"], "answer": "24", "solution": {"steps": [[3, 1, 1, 3, 1, 1], [4, 0, 1, 3, 1, 1], [5, 1, 0, 3, 1, 1], [6, 0, 0, 3, 1, 1]], "cuts": 3, "joins": 6, "each_cut_time": 4, "each_join_time": 2, "total_time": 24}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0066.jpg", "question": "Alice has 12 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 30 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 2 minutes and each welding takes 4 minutes. Initially, she has 2 segments each with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 30 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["38", "24", "43", "30"], "answer": "38", "solution": {"steps": [[2, 1, 3, 4, 1, 1], [3, 0, 3, 4, 1, 1], [4, 1, 2, 4, 1, 1], [5, 0, 2, 4, 1, 1], [6, 1, 1, 4, 1, 1], [7, 0, 1, 4, 1, 1]], "cuts": 5, "joins": 7, "each_cut_time": 2, "each_join_time": 4, "total_time": 38}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0067.jpg", "question": "Alice has 13 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 29 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 5 minutes and each welding takes 3 minutes. Initially, she has 3 segments each with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 29 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["44", "39", "34", "49"], "answer": "49", "solution": {"steps": [[3, 1, 4, 4, 0, 1], [4, 0, 4, 4, 0, 1], [5, 1, 3, 4, 0, 1], [6, 0, 3, 4, 0, 1], [7, 1, 2, 4, 0, 1], [8, 0, 2, 4, 0, 1]], "cuts": 5, "joins": 8, "each_cut_time": 5, "each_join_time": 3, "total_time": 49}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0068.jpg", "question": "Alice has 10 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 21 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 5 minutes and each welding takes 4 minutes. Initially, she has 4 segments each with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 21 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["25", "36", "40", "19"], "answer": "25", "solution": {"steps": [[4, 2, 0, 1, 3, 0], [5, 1, 0, 1, 3, 0]], "cuts": 1, "joins": 5, "each_cut_time": 5, "each_join_time": 4, "total_time": 25}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0069.jpg", "question": "Alice has 13 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 33 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 3 minutes and each welding takes 4 minutes. Initially, she has 1 segment with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 33 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["86", "53", "1", "3"], "answer": "53", "solution": {"steps": [[1, 2, 4, 3, 2, 1], [2, 1, 4, 3, 2, 1], [3, 0, 4, 3, 2, 1], [4, 1, 3, 3, 2, 1], [5, 0, 3, 3, 2, 1], [6, 1, 2, 3, 2, 1], [7, 0, 2, 3, 2, 1], [8, 1, 1, 3, 2, 1]], "cuts": 7, "joins": 8, "each_cut_time": 3, "each_join_time": 4, "total_time": 53}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0070.jpg", "question": "Alice has 8 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 15 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 5 minutes and each welding takes 2 minutes. Initially, she has 2 segments each with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 15 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["17", "33", "18", "5"], "answer": "18", "solution": {"steps": [[2, 2, 1, 3, 0, 0], [3, 1, 1, 3, 0, 0], [4, 0, 1, 3, 0, 0]], "cuts": 2, "joins": 4, "each_cut_time": 5, "each_join_time": 2, "total_time": 18}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0071.jpg", "question": "Alice has 13 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 29 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 4 minutes and each welding takes 5 minutes. Initially, she has 2 segments each with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 29 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["21", "8", "64", "84"], "answer": "64", "solution": {"steps": [[2, 2, 4, 4, 0, 1], [3, 1, 4, 4, 0, 1], [4, 0, 4, 4, 0, 1], [5, 1, 3, 4, 0, 1], [6, 0, 3, 4, 0, 1], [7, 1, 2, 4, 0, 1], [8, 0, 2, 4, 0, 1]], "cuts": 6, "joins": 8, "each_cut_time": 4, "each_join_time": 5, "total_time": 64}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0072.jpg", "question": "Alice has 9 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 19 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 2 minutes and each welding takes 2 minutes. Initially, she has 2 segments each with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 19 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["16", "4", "3", "32"], "answer": "16", "solution": {"steps": [[2, 4, 0, 0, 2, 1], [3, 3, 0, 0, 2, 1], [4, 2, 0, 0, 2, 1], [5, 1, 0, 0, 2, 1]], "cuts": 3, "joins": 5, "each_cut_time": 2, "each_join_time": 2, "total_time": 16}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0073.jpg", "question": "Alice has 12 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 37 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 5 minutes and each welding takes 4 minutes. Initially, there are no open pieces in any of the segments. She now wants to make the longest possible necklace using all the available 37 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["20", "91", "88", "72"], "answer": "72", "solution": {"steps": [[0, 3, 0, 4, 3, 2], [1, 2, 0, 4, 3, 2], [2, 1, 0, 4, 3, 2], [3, 0, 0, 4, 3, 2], [4, 0, 1, 3, 3, 2], [5, 1, 0, 3, 3, 2], [6, 0, 0, 3, 3, 2], [7, 0, 1, 2, 3, 2], [8, 1, 0, 2, 3, 2]], "cuts": 8, "joins": 8, "each_cut_time": 5, "each_join_time": 4, "total_time": 72}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0074.jpg", "question": "Alice has 14 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 39 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 3 minutes and each welding takes 2 minutes. Initially, she has 2 segments each with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 39 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["25", "30", "39", "4"], "answer": "39", "solution": {"steps": [[2, 1, 3, 4, 2, 2], [3, 0, 3, 4, 2, 2], [4, 1, 2, 4, 2, 2], [5, 0, 2, 4, 2, 2], [6, 1, 1, 4, 2, 2], [7, 0, 1, 4, 2, 2], [8, 1, 0, 4, 2, 2], [9, 0, 0, 4, 2, 2]], "cuts": 7, "joins": 9, "each_cut_time": 3, "each_join_time": 2, "total_time": 39}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0075.jpg", "question": "Alice has 10 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 19 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 5 minutes and each welding takes 5 minutes. Initially, she has 3 segments each with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 19 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["40", "41", "35", "3"], "answer": "35", "solution": {"steps": [[3, 4, 0, 0, 3, 0], [4, 3, 0, 0, 3, 0], [5, 2, 0, 0, 3, 0]], "cuts": 2, "joins": 5, "each_cut_time": 5, "each_join_time": 5, "total_time": 35}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0076.jpg", "question": "Alice has 13 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 33 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 4 minutes and each welding takes 3 minutes. Initially, she has 1 segment with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 33 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["85", "91", "72", "52"], "answer": "52", "solution": {"steps": [[1, 2, 4, 4, 0, 2], [2, 1, 4, 4, 0, 2], [3, 0, 4, 4, 0, 2], [4, 1, 3, 4, 0, 2], [5, 0, 3, 4, 0, 2], [6, 1, 2, 4, 0, 2], [7, 0, 2, 4, 0, 2], [8, 1, 1, 4, 0, 2]], "cuts": 7, "joins": 8, "each_cut_time": 4, "each_join_time": 3, "total_time": 52}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0077.jpg", "question": "Alice has 8 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 23 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 4 minutes and each welding takes 5 minutes. Initially, there are no open pieces in any of the segments. She now wants to make the longest possible necklace using all the available 23 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["54", "80", "8", "15"], "answer": "54", "solution": {"steps": [[0, 1, 1, 4, 2, 0], [1, 0, 1, 4, 2, 0], [2, 1, 0, 4, 2, 0], [3, 0, 0, 4, 2, 0], [4, 0, 1, 3, 2, 0], [5, 1, 0, 3, 2, 0], [6, 0, 0, 3, 2, 0]], "cuts": 6, "joins": 6, "each_cut_time": 4, "each_join_time": 5, "total_time": 54}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0078.jpg", "question": "Alice has 11 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 28 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 3 minutes and each welding takes 2 minutes. Initially, she has 4 segments each with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 28 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["41", "45", "47", "18"], "answer": "18", "solution": {"steps": [[4, 0, 2, 2, 1, 2], [5, 1, 1, 2, 1, 2], [6, 0, 1, 2, 1, 2]], "cuts": 2, "joins": 6, "each_cut_time": 3, "each_join_time": 2, "total_time": 18}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0079.jpg", "question": "Alice has 11 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 22 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 4 minutes and each welding takes 4 minutes. Initially, she has 1 segment with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 22 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["45", "49", "44", "8"], "answer": "44", "solution": {"steps": [[1, 4, 4, 0, 1, 1], [2, 3, 4, 0, 1, 1], [3, 2, 4, 0, 1, 1], [4, 1, 4, 0, 1, 1], [5, 0, 4, 0, 1, 1], [6, 1, 3, 0, 1, 1]], "cuts": 5, "joins": 6, "each_cut_time": 4, "each_join_time": 4, "total_time": 44}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0080.jpg", "question": "Alice has 14 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 24 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 5 minutes and each welding takes 3 minutes. Initially, she has 4 segments each with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 24 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["30", "36", "24", "13"], "answer": "36", "solution": {"steps": [[4, 3, 4, 3, 0, 0], [5, 2, 4, 3, 0, 0], [6, 1, 4, 3, 0, 0], [7, 0, 4, 3, 0, 0]], "cuts": 3, "joins": 7, "each_cut_time": 5, "each_join_time": 3, "total_time": 36}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0081.jpg", "question": "Alice has 15 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 38 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 2 minutes and each welding takes 3 minutes. Initially, she has 4 segments each with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 38 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["3", "17", "32", "33"], "answer": "32", "solution": {"steps": [[4, 3, 0, 3, 3, 2], [5, 2, 0, 3, 3, 2], [6, 1, 0, 3, 3, 2], [7, 0, 0, 3, 3, 2], [8, 0, 1, 2, 3, 2]], "cuts": 4, "joins": 8, "each_cut_time": 2, "each_join_time": 3, "total_time": 32}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0082.jpg", "question": "Alice has 10 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 20 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 5 minutes and each welding takes 5 minutes. Initially, she has 4 segments each with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 20 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["30", "34", "42", "6"], "answer": "30", "solution": {"steps": [[4, 2, 2, 0, 0, 2], [5, 1, 2, 0, 0, 2]], "cuts": 1, "joins": 5, "each_cut_time": 5, "each_join_time": 5, "total_time": 30}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0083.jpg", "question": "Alice has 12 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 25 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 2 minutes and each welding takes 5 minutes. Initially, she has 1 segment with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 25 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["47", "10", "37", "28"], "answer": "47", "solution": {"steps": [[1, 4, 4, 1, 1, 1], [2, 3, 4, 1, 1, 1], [3, 2, 4, 1, 1, 1], [4, 1, 4, 1, 1, 1], [5, 0, 4, 1, 1, 1], [6, 1, 3, 1, 1, 1], [7, 0, 3, 1, 1, 1]], "cuts": 6, "joins": 7, "each_cut_time": 2, "each_join_time": 5, "total_time": 47}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0084.jpg", "question": "Alice has 13 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 29 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 5 minutes and each welding takes 2 minutes. Initially, she has 3 segments each with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 29 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["7", "27", "5", "34"], "answer": "34", "solution": {"steps": [[3, 2, 4, 1, 2, 1], [4, 1, 4, 1, 2, 1], [5, 0, 4, 1, 2, 1], [6, 1, 3, 1, 2, 1], [7, 0, 3, 1, 2, 1]], "cuts": 4, "joins": 7, "each_cut_time": 5, "each_join_time": 2, "total_time": 34}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0085.jpg", "question": "Alice has 11 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 26 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 3 minutes and each welding takes 5 minutes. Initially, she has 3 segments each with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 26 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["28", "45", "27", "39"], "answer": "39", "solution": {"steps": [[3, 1, 1, 4, 2, 0], [4, 0, 1, 4, 2, 0], [5, 1, 0, 4, 2, 0], [6, 0, 0, 4, 2, 0]], "cuts": 3, "joins": 6, "each_cut_time": 3, "each_join_time": 5, "total_time": 39}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0086.jpg", "question": "Alice has 10 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 27 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 4 minutes and each welding takes 4 minutes. Initially, there are no open pieces in any of the segments. She now wants to make the longest possible necklace using all the available 27 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["6", "23", "48", "5"], "answer": "48", "solution": {"steps": [[0, 4, 1, 1, 2, 2], [1, 3, 1, 1, 2, 2], [2, 2, 1, 1, 2, 2], [3, 1, 1, 1, 2, 2], [4, 0, 1, 1, 2, 2], [5, 1, 0, 1, 2, 2], [6, 0, 0, 1, 2, 2]], "cuts": 6, "joins": 6, "each_cut_time": 4, "each_join_time": 4, "total_time": 48}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0087.jpg", "question": "Alice has 9 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 28 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 3 minutes and each welding takes 4 minutes. Initially, she has 1 segment with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 28 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["12", "39", "23", "1"], "answer": "39", "solution": {"steps": [[1, 1, 1, 2, 2, 2], [2, 0, 1, 2, 2, 2], [3, 1, 0, 2, 2, 2], [4, 0, 0, 2, 2, 2], [5, 0, 1, 1, 2, 2], [6, 1, 0, 1, 2, 2]], "cuts": 5, "joins": 6, "each_cut_time": 3, "each_join_time": 4, "total_time": 39}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0088.jpg", "question": "Alice has 12 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 32 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 2 minutes and each welding takes 3 minutes. Initially, she has 4 segments each with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 32 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["14", "44", "27", "1"], "answer": "27", "solution": {"steps": [[4, 0, 3, 0, 3, 2], [5, 1, 2, 0, 3, 2], [6, 0, 2, 0, 3, 2], [7, 1, 1, 0, 3, 2]], "cuts": 3, "joins": 7, "each_cut_time": 2, "each_join_time": 3, "total_time": 27}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0089.jpg", "question": "Alice has 8 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 12 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 2 minutes and each welding takes 4 minutes. Initially, she has 2 segments each with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 12 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["46", "25", "2", "20"], "answer": "20", "solution": {"steps": [[2, 2, 4, 0, 0, 0], [3, 1, 4, 0, 0, 0], [4, 0, 4, 0, 0, 0]], "cuts": 2, "joins": 4, "each_cut_time": 2, "each_join_time": 4, "total_time": 20}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0090.jpg", "question": "Alice has 11 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 30 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 4 minutes and each welding takes 2 minutes. Initially, there are no open pieces in any of the segments. She now wants to make the longest possible necklace using all the available 30 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["23", "8", "42", "31"], "answer": "42", "solution": {"steps": [[0, 4, 0, 4, 1, 2], [1, 3, 0, 4, 1, 2], [2, 2, 0, 4, 1, 2], [3, 1, 0, 4, 1, 2], [4, 0, 0, 4, 1, 2], [5, 0, 1, 3, 1, 2], [6, 1, 0, 3, 1, 2], [7, 0, 0, 3, 1, 2]], "cuts": 7, "joins": 7, "each_cut_time": 4, "each_join_time": 2, "total_time": 42}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0091.jpg", "question": "Alice has 13 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 30 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 2 minutes and each welding takes 5 minutes. Initially, she has 3 segments each with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 30 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["31", "22", "43", "24"], "answer": "43", "solution": {"steps": [[3, 2, 3, 2, 2, 1], [4, 1, 3, 2, 2, 1], [5, 0, 3, 2, 2, 1], [6, 1, 2, 2, 2, 1], [7, 0, 2, 2, 2, 1]], "cuts": 4, "joins": 7, "each_cut_time": 2, "each_join_time": 5, "total_time": 43}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0092.jpg", "question": "Alice has 13 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 34 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 3 minutes and each welding takes 3 minutes. Initially, there are no open pieces in any of the segments. She now wants to make the longest possible necklace using all the available 34 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["7", "38", "6", "48"], "answer": "48", "solution": {"steps": [[0, 3, 4, 2, 3, 1], [1, 2, 4, 2, 3, 1], [2, 1, 4, 2, 3, 1], [3, 0, 4, 2, 3, 1], [4, 1, 3, 2, 3, 1], [5, 0, 3, 2, 3, 1], [6, 1, 2, 2, 3, 1], [7, 0, 2, 2, 3, 1], [8, 1, 1, 2, 3, 1]], "cuts": 8, "joins": 8, "each_cut_time": 3, "each_join_time": 3, "total_time": 48}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0093.jpg", "question": "Alice has 8 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 19 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 5 minutes and each welding takes 3 minutes. Initially, there are no open pieces in any of the segments. She now wants to make the longest possible necklace using all the available 19 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["15", "9", "21", "40"], "answer": "40", "solution": {"steps": [[0, 3, 0, 4, 1, 0], [1, 2, 0, 4, 1, 0], [2, 1, 0, 4, 1, 0], [3, 0, 0, 4, 1, 0], [4, 0, 1, 3, 1, 0], [5, 1, 0, 3, 1, 0]], "cuts": 5, "joins": 5, "each_cut_time": 5, "each_join_time": 3, "total_time": 40}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0094.jpg", "question": "Alice has 9 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 30 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 3 minutes and each welding takes 2 minutes. Initially, she has 1 segment with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 30 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["24", "27", "44", "28"], "answer": "27", "solution": {"steps": [[1, 0, 2, 1, 3, 2], [2, 1, 1, 1, 3, 2], [3, 0, 1, 1, 3, 2], [4, 1, 0, 1, 3, 2], [5, 0, 0, 1, 3, 2], [6, 0, 1, 0, 3, 2]], "cuts": 5, "joins": 6, "each_cut_time": 3, "each_join_time": 2, "total_time": 27}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0095.jpg", "question": "Alice has 9 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 18 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 2 minutes and each welding takes 5 minutes. Initially, she has 3 segments each with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 18 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["29", "46", "9", "5"], "answer": "29", "solution": {"steps": [[3, 2, 0, 3, 1, 0], [4, 1, 0, 3, 1, 0], [5, 0, 0, 3, 1, 0]], "cuts": 2, "joins": 5, "each_cut_time": 2, "each_join_time": 5, "total_time": 29}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0096.jpg", "question": "Alice has 8 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 15 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 5 minutes and each welding takes 2 minutes. Initially, there are no open pieces in any of the segments. She now wants to make the longest possible necklace using all the available 15 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["20", "39", "35", "28"], "answer": "35", "solution": {"steps": [[0, 3, 3, 2, 0, 0], [1, 2, 3, 2, 0, 0], [2, 1, 3, 2, 0, 0], [3, 0, 3, 2, 0, 0], [4, 1, 2, 2, 0, 0], [5, 0, 2, 2, 0, 0]], "cuts": 5, "joins": 5, "each_cut_time": 5, "each_join_time": 2, "total_time": 35}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0097.jpg", "question": "Alice has 12 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 34 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 4 minutes and each welding takes 2 minutes. Initially, she has 1 segment with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 34 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["42", "24", "34", "38"], "answer": "38", "solution": {"steps": [[1, 3, 1, 2, 3, 2], [2, 2, 1, 2, 3, 2], [3, 1, 1, 2, 3, 2], [4, 0, 1, 2, 3, 2], [5, 1, 0, 2, 3, 2], [6, 0, 0, 2, 3, 2], [7, 0, 1, 1, 3, 2]], "cuts": 6, "joins": 7, "each_cut_time": 4, "each_join_time": 2, "total_time": 38}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0098.jpg", "question": "Alice has 9 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 22 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 4 minutes and each welding takes 5 minutes. Initially, she has 4 segments each with 1 open piece as shown in the image. All the other pieces are closed. She now wants to make the longest possible necklace using all the available 22 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["29", "27", "48", "21"], "answer": "29", "solution": {"steps": [[4, 0, 1, 2, 0, 2], [5, 1, 0, 2, 0, 2]], "cuts": 1, "joins": 5, "each_cut_time": 4, "each_join_time": 5, "total_time": 29}, "source_file": "chain_link.json"}
{"image": "images/chain_link/chain_link_0099.jpg", "question": "Alice has 10 segments of chains of different lengths as shown in the image. The total length of all the segments combined is 33 pieces. She has a saw machine with which a closed piece can be cut opened. She also has a welding machine with which an open piece can be closed. Each cut takes 4 minutes and each welding takes 5 minutes. Initially, there are no open pieces in any of the segments. She now wants to make the longest possible necklace using all the available 33 pieces. Each piece in the necklace would be connected to exactly two other pieces. This would require cutting open some pieces and then joining all the resulting segments together. What is the minimum time in which she can create the necklace?", "options": ["61", "12", "63", "24"], "answer": "63", "solution": {"steps": [[0, 1, 1, 4, 2, 2], [1, 0, 1, 4, 2, 2], [2, 1, 0, 4, 2, 2], [3, 0, 0, 4, 2, 2], [4, 0, 1, 3, 2, 2], [5, 1, 0, 3, 2, 2], [6, 0, 0, 3, 2, 2], [7, 0, 1, 2, 2, 2]], "cuts": 7, "joins": 7, "each_cut_time": 4, "each_join_time": 5, "total_time": 63}, "source_file": "chain_link.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0000.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 6 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["2", "1", "6", "5"], "answer": "1", "solution": {"start_position": [[4, 1], [3, 2], [6, 5]], "end_position": [[4], [3, 2, 1], [6, 5]], "moves": [{"position": [[4, 1], [3, 2], [6, 5]], "num_moves": 0}, {"position": [[4], [3, 2, 1], [6, 5]], "num_moves": 1}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0001.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 5 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["5", "2", "3", "4"], "answer": "4", "solution": {"start_position": [[3], [4], [5, 2, 1]], "end_position": [[3, 2, 1], [], [5, 4]], "moves": [{"position": [[3], [4], [5, 2, 1]], "num_moves": 0}, {"position": [[3], [4, 1], [5, 2]], "num_moves": 1}, {"position": [[3, 2], [4, 1], [5]], "num_moves": 2}, {"position": [[3, 2, 1], [4], [5]], "num_moves": 3}, {"position": [[3, 2, 1], [], [5, 4]], "num_moves": 4}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0002.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 6 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["4", "2", "3", "1"], "answer": "2", "solution": {"start_position": [[6], [5, 2, 1], [4, 3]], "end_position": [[6, 1], [5], [4, 3, 2]], "moves": [{"position": [[6], [5, 2, 1], [4, 3]], "num_moves": 0}, {"position": [[6, 1], [5, 2], [4, 3]], "num_moves": 1}, {"position": [[6, 1], [5], [4, 3, 2]], "num_moves": 2}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0003.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 4 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["3", "6", "1", "5"], "answer": "5", "solution": {"start_position": [[2], [3], [4, 1]], "end_position": [[4, 1], [3], [2]], "moves": [{"position": [[2], [3], [4, 1]], "num_moves": 0}, {"position": [[], [3, 2], [4, 1]], "num_moves": 1}, {"position": [[], [3, 2, 1], [4]], "num_moves": 2}, {"position": [[4], [3, 2, 1], []], "num_moves": 3}, {"position": [[4, 1], [3, 2], []], "num_moves": 4}, {"position": [[4, 1], [3], [2]], "num_moves": 5}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0004.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 5 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["4", "6", "2", "5"], "answer": "2", "solution": {"start_position": [[5, 2], [4, 3], [1]], "end_position": [[5], [4, 3, 2, 1], []], "moves": [{"position": [[5, 2], [4, 3], [1]], "num_moves": 0}, {"position": [[5], [4, 3, 2], [1]], "num_moves": 1}, {"position": [[5], [4, 3, 2, 1], []], "num_moves": 2}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0005.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 3 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["6", "4", "3", "1"], "answer": "4", "solution": {"start_position": [[3, 2, 1], [], []], "end_position": [[], [2, 1], [3]], "moves": [{"position": [[3, 2, 1], [], []], "num_moves": 0}, {"position": [[3, 2], [], [1]], "num_moves": 1}, {"position": [[3], [2], [1]], "num_moves": 2}, {"position": [[3], [2, 1], []], "num_moves": 3}, {"position": [[], [2, 1], [3]], "num_moves": 4}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0006.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 6 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["4", "2", "5", "6"], "answer": "5", "solution": {"start_position": [[6], [5, 4, 3], [2, 1]], "end_position": [[], [5, 4, 3, 2], [6, 1]], "moves": [{"position": [[6], [5, 4, 3], [2, 1]], "num_moves": 0}, {"position": [[6, 1], [5, 4, 3], [2]], "num_moves": 1}, {"position": [[6, 1], [5, 4, 3, 2], []], "num_moves": 2}, {"position": [[6], [5, 4, 3, 2, 1], []], "num_moves": 3}, {"position": [[], [5, 4, 3, 2, 1], [6]], "num_moves": 4}, {"position": [[], [5, 4, 3, 2], [6, 1]], "num_moves": 5}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0007.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 4 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["6", "1", "5", "2"], "answer": "5", "solution": {"start_position": [[2, 1], [], [4, 3]], "end_position": [[4], [3, 2, 1], []], "moves": [{"position": [[2, 1], [], [4, 3]], "num_moves": 0}, {"position": [[2, 1], [3], [4]], "num_moves": 1}, {"position": [[2], [3], [4, 1]], "num_moves": 2}, {"position": [[], [3, 2], [4, 1]], "num_moves": 3}, {"position": [[], [3, 2, 1], [4]], "num_moves": 4}, {"position": [[4], [3, 2, 1], []], "num_moves": 5}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0008.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 6 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["1", "2", "4", "5"], "answer": "1", "solution": {"start_position": [[4, 3, 2, 1], [5], [6]], "end_position": [[4, 3, 2, 1], [], [6, 5]], "moves": [{"position": [[4, 3, 2, 1], [5], [6]], "num_moves": 0}, {"position": [[4, 3, 2, 1], [], [6, 5]], "num_moves": 1}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0009.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 3 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["3", "5", "4", "1"], "answer": "4", "solution": {"start_position": [[3], [2, 1], []], "end_position": [[], [], [3, 2, 1]], "moves": [{"position": [[3], [2, 1], []], "num_moves": 0}, {"position": [[], [2, 1], [3]], "num_moves": 1}, {"position": [[1], [2], [3]], "num_moves": 2}, {"position": [[1], [], [3, 2]], "num_moves": 3}, {"position": [[], [], [3, 2, 1]], "num_moves": 4}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0010.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 5 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["5", "4", "1", "2"], "answer": "4", "solution": {"start_position": [[], [], [5, 4, 3, 2, 1]], "end_position": [[3], [2, 1], [5, 4]], "moves": [{"position": [[], [], [5, 4, 3, 2, 1]], "num_moves": 0}, {"position": [[1], [], [5, 4, 3, 2]], "num_moves": 1}, {"position": [[1], [2], [5, 4, 3]], "num_moves": 2}, {"position": [[], [2, 1], [5, 4, 3]], "num_moves": 3}, {"position": [[3], [2, 1], [5, 4]], "num_moves": 4}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0011.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 4 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["3", "1", "2", "4"], "answer": "4", "solution": {"start_position": [[4, 3], [1], [2]], "end_position": [[4, 1], [3, 2], []], "moves": [{"position": [[4, 3], [1], [2]], "num_moves": 0}, {"position": [[4, 3], [], [2, 1]], "num_moves": 1}, {"position": [[4], [3], [2, 1]], "num_moves": 2}, {"position": [[4, 1], [3], [2]], "num_moves": 3}, {"position": [[4, 1], [3, 2], []], "num_moves": 4}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0012.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 5 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["3", "1", "6", "2"], "answer": "2", "solution": {"start_position": [[3], [2], [5, 4, 1]], "end_position": [[3, 2, 1], [], [5, 4]], "moves": [{"position": [[3], [2], [5, 4, 1]], "num_moves": 0}, {"position": [[3, 2], [], [5, 4, 1]], "num_moves": 1}, {"position": [[3, 2, 1], [], [5, 4]], "num_moves": 2}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0013.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 5 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["1", "2", "3", "6"], "answer": "1", "solution": {"start_position": [[5, 2, 1], [4], [3]], "end_position": [[5, 2], [4, 1], [3]], "moves": [{"position": [[5, 2, 1], [4], [3]], "num_moves": 0}, {"position": [[5, 2], [4, 1], [3]], "num_moves": 1}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0014.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 5 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["1", "5", "4", "3"], "answer": "5", "solution": {"start_position": [[5], [4, 1], [3, 2]], "end_position": [[5, 4], [2, 1], [3]], "moves": [{"position": [[5], [4, 1], [3, 2]], "num_moves": 0}, {"position": [[5], [4], [3, 2, 1]], "num_moves": 1}, {"position": [[5, 4], [], [3, 2, 1]], "num_moves": 2}, {"position": [[5, 4, 1], [], [3, 2]], "num_moves": 3}, {"position": [[5, 4, 1], [2], [3]], "num_moves": 4}, {"position": [[5, 4], [2, 1], [3]], "num_moves": 5}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0015.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 3 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["3", "6", "4", "1"], "answer": "4", "solution": {"start_position": [[], [2, 1], [3]], "end_position": [[3, 2, 1], [], []], "moves": [{"position": [[], [2, 1], [3]], "num_moves": 0}, {"position": [[3], [2, 1], []], "num_moves": 1}, {"position": [[3], [2], [1]], "num_moves": 2}, {"position": [[3, 2], [], [1]], "num_moves": 3}, {"position": [[3, 2, 1], [], []], "num_moves": 4}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0016.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 5 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["2", "4", "3", "1"], "answer": "1", "solution": {"start_position": [[3, 2, 1], [4], [5]], "end_position": [[3, 2], [4, 1], [5]], "moves": [{"position": [[3, 2, 1], [4], [5]], "num_moves": 0}, {"position": [[3, 2], [4, 1], [5]], "num_moves": 1}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0017.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 4 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["2", "6", "1", "5"], "answer": "6", "solution": {"start_position": [[4, 3], [1], [2]], "end_position": [[], [3, 2, 1], [4]], "moves": [{"position": [[4, 3], [1], [2]], "num_moves": 0}, {"position": [[4, 3], [], [2, 1]], "num_moves": 1}, {"position": [[4], [3], [2, 1]], "num_moves": 2}, {"position": [[4, 1], [3], [2]], "num_moves": 3}, {"position": [[4, 1], [3, 2], []], "num_moves": 4}, {"position": [[4], [3, 2, 1], []], "num_moves": 5}, {"position": [[], [3, 2, 1], [4]], "num_moves": 6}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0018.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 6 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["5", "1", "6", "2"], "answer": "6", "solution": {"start_position": [[2, 1], [5, 4, 3], [6]], "end_position": [[4, 1], [5], [6, 3, 2]], "moves": [{"position": [[2, 1], [5, 4, 3], [6]], "num_moves": 0}, {"position": [[2, 1], [5, 4], [6, 3]], "num_moves": 1}, {"position": [[2], [5, 4, 1], [6, 3]], "num_moves": 2}, {"position": [[], [5, 4, 1], [6, 3, 2]], "num_moves": 3}, {"position": [[], [5, 4], [6, 3, 2, 1]], "num_moves": 4}, {"position": [[4], [5], [6, 3, 2, 1]], "num_moves": 5}, {"position": [[4, 1], [5], [6, 3, 2]], "num_moves": 6}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0019.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 5 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["2", "5", "6", "1"], "answer": "1", "solution": {"start_position": [[5, 4, 1], [], [3, 2]], "end_position": [[5, 4, 1], [2], [3]], "moves": [{"position": [[5, 4, 1], [], [3, 2]], "num_moves": 0}, {"position": [[5, 4, 1], [2], [3]], "num_moves": 1}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0020.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 6 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["2", "3", "1", "5"], "answer": "5", "solution": {"start_position": [[2], [3], [6, 5, 4, 1]], "end_position": [[], [], [6, 5, 4, 3, 2, 1]], "moves": [{"position": [[2], [3], [6, 5, 4, 1]], "num_moves": 0}, {"position": [[2, 1], [3], [6, 5, 4]], "num_moves": 1}, {"position": [[2, 1], [], [6, 5, 4, 3]], "num_moves": 2}, {"position": [[2], [1], [6, 5, 4, 3]], "num_moves": 3}, {"position": [[], [1], [6, 5, 4, 3, 2]], "num_moves": 4}, {"position": [[], [], [6, 5, 4, 3, 2, 1]], "num_moves": 5}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0021.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 6 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["3", "4", "1", "5"], "answer": "5", "solution": {"start_position": [[6, 5, 2, 1], [], [4, 3]], "end_position": [[6, 5, 4], [3, 2, 1], []], "moves": [{"position": [[6, 5, 2, 1], [], [4, 3]], "num_moves": 0}, {"position": [[6, 5, 2, 1], [3], [4]], "num_moves": 1}, {"position": [[6, 5, 2], [3], [4, 1]], "num_moves": 2}, {"position": [[6, 5], [3, 2], [4, 1]], "num_moves": 3}, {"position": [[6, 5], [3, 2, 1], [4]], "num_moves": 4}, {"position": [[6, 5, 4], [3, 2, 1], []], "num_moves": 5}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0022.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 4 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["6", "4", "1", "2"], "answer": "6", "solution": {"start_position": [[2], [3], [4, 1]], "end_position": [[4], [3], [2, 1]], "moves": [{"position": [[2], [3], [4, 1]], "num_moves": 0}, {"position": [[], [3, 2], [4, 1]], "num_moves": 1}, {"position": [[], [3, 2, 1], [4]], "num_moves": 2}, {"position": [[4], [3, 2, 1], []], "num_moves": 3}, {"position": [[4, 1], [3, 2], []], "num_moves": 4}, {"position": [[4, 1], [3], [2]], "num_moves": 5}, {"position": [[4], [3], [2, 1]], "num_moves": 6}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0023.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 6 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["2", "6", "3", "4"], "answer": "2", "solution": {"start_position": [[6, 5, 4, 1], [3], [2]], "end_position": [[6, 5, 4], [3, 2, 1], []], "moves": [{"position": [[6, 5, 4, 1], [3], [2]], "num_moves": 0}, {"position": [[6, 5, 4, 1], [3, 2], []], "num_moves": 1}, {"position": [[6, 5, 4], [3, 2, 1], []], "num_moves": 2}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0024.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 6 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["6", "3", "2", "1"], "answer": "3", "solution": {"start_position": [[4], [5], [6, 3, 2, 1]], "end_position": [[4], [5, 2, 1], [6, 3]], "moves": [{"position": [[4], [5], [6, 3, 2, 1]], "num_moves": 0}, {"position": [[4, 1], [5], [6, 3, 2]], "num_moves": 1}, {"position": [[4, 1], [5, 2], [6, 3]], "num_moves": 2}, {"position": [[4], [5, 2, 1], [6, 3]], "num_moves": 3}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0025.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 6 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["4", "6", "5", "3"], "answer": "5", "solution": {"start_position": [[2], [5, 4, 1], [6, 3]], "end_position": [[4, 1], [5, 2], [6, 3]], "moves": [{"position": [[2], [5, 4, 1], [6, 3]], "num_moves": 0}, {"position": [[], [5, 4, 1], [6, 3, 2]], "num_moves": 1}, {"position": [[], [5, 4], [6, 3, 2, 1]], "num_moves": 2}, {"position": [[4], [5], [6, 3, 2, 1]], "num_moves": 3}, {"position": [[4, 1], [5], [6, 3, 2]], "num_moves": 4}, {"position": [[4, 1], [5, 2], [6, 3]], "num_moves": 5}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0026.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 4 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["5", "4", "2", "6"], "answer": "2", "solution": {"start_position": [[], [3, 2], [4, 1]], "end_position": [[2, 1], [3], [4]], "moves": [{"position": [[], [3, 2], [4, 1]], "num_moves": 0}, {"position": [[2], [3], [4, 1]], "num_moves": 1}, {"position": [[2, 1], [3], [4]], "num_moves": 2}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0027.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 6 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["5", "1", "6", "2"], "answer": "6", "solution": {"start_position": [[4, 1], [5, 2], [6, 3]], "end_position": [[4, 3, 2, 1], [], [6, 5]], "moves": [{"position": [[4, 1], [5, 2], [6, 3]], "num_moves": 0}, {"position": [[4], [5, 2, 1], [6, 3]], "num_moves": 1}, {"position": [[4, 3], [5, 2, 1], [6]], "num_moves": 2}, {"position": [[4, 3], [5, 2], [6, 1]], "num_moves": 3}, {"position": [[4, 3, 2], [5], [6, 1]], "num_moves": 4}, {"position": [[4, 3, 2, 1], [5], [6]], "num_moves": 5}, {"position": [[4, 3, 2, 1], [], [6, 5]], "num_moves": 6}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0028.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 3 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["5", "4", "6", "2"], "answer": "4", "solution": {"start_position": [[], [], [3, 2, 1]], "end_position": [[3], [2, 1], []], "moves": [{"position": [[], [], [3, 2, 1]], "num_moves": 0}, {"position": [[1], [], [3, 2]], "num_moves": 1}, {"position": [[1], [2], [3]], "num_moves": 2}, {"position": [[], [2, 1], [3]], "num_moves": 3}, {"position": [[3], [2, 1], []], "num_moves": 4}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0029.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 5 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["3", "2", "5", "6"], "answer": "5", "solution": {"start_position": [[5], [4, 1], [3, 2]], "end_position": [[5], [4, 3, 2], [1]], "moves": [{"position": [[5], [4, 1], [3, 2]], "num_moves": 0}, {"position": [[5, 2], [4, 1], [3]], "num_moves": 1}, {"position": [[5, 2, 1], [4], [3]], "num_moves": 2}, {"position": [[5, 2, 1], [4, 3], []], "num_moves": 3}, {"position": [[5, 2], [4, 3], [1]], "num_moves": 4}, {"position": [[5], [4, 3, 2], [1]], "num_moves": 5}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0030.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 5 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["4", "1", "2", "3"], "answer": "2", "solution": {"start_position": [[5, 4], [2, 1], [3]], "end_position": [[5, 4, 3], [2], [1]], "moves": [{"position": [[5, 4], [2, 1], [3]], "num_moves": 0}, {"position": [[5, 4, 3], [2, 1], []], "num_moves": 1}, {"position": [[5, 4, 3], [2], [1]], "num_moves": 2}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0031.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 6 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["6", "4", "5", "3"], "answer": "6", "solution": {"start_position": [[6, 5, 4], [3], [2, 1]], "end_position": [[6, 5, 2], [3], [4, 1]], "moves": [{"position": [[6, 5, 4], [3], [2, 1]], "num_moves": 0}, {"position": [[6, 5, 4, 1], [3], [2]], "num_moves": 1}, {"position": [[6, 5, 4, 1], [3, 2], []], "num_moves": 2}, {"position": [[6, 5, 4], [3, 2, 1], []], "num_moves": 3}, {"position": [[6, 5], [3, 2, 1], [4]], "num_moves": 4}, {"position": [[6, 5], [3, 2], [4, 1]], "num_moves": 5}, {"position": [[6, 5, 2], [3], [4, 1]], "num_moves": 6}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0032.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 6 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["1", "2", "6", "4"], "answer": "6", "solution": {"start_position": [[4, 1], [3, 2], [6, 5]], "end_position": [[4, 3, 2, 1], [], [6, 5]], "moves": [{"position": [[4, 1], [3, 2], [6, 5]], "num_moves": 0}, {"position": [[4, 1], [3], [6, 5, 2]], "num_moves": 1}, {"position": [[4], [3], [6, 5, 2, 1]], "num_moves": 2}, {"position": [[4, 3], [], [6, 5, 2, 1]], "num_moves": 3}, {"position": [[4, 3], [1], [6, 5, 2]], "num_moves": 4}, {"position": [[4, 3, 2], [1], [6, 5]], "num_moves": 5}, {"position": [[4, 3, 2, 1], [], [6, 5]], "num_moves": 6}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0033.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 4 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["6", "1", "5", "4"], "answer": "1", "solution": {"start_position": [[4, 1], [3, 2], []], "end_position": [[4, 1], [3], [2]], "moves": [{"position": [[4, 1], [3, 2], []], "num_moves": 0}, {"position": [[4, 1], [3], [2]], "num_moves": 1}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0034.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 6 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["6", "3", "1", "4"], "answer": "6", "solution": {"start_position": [[], [3, 2], [6, 5, 4, 1]], "end_position": [[4, 3], [], [6, 5, 2, 1]], "moves": [{"position": [[], [3, 2], [6, 5, 4, 1]], "num_moves": 0}, {"position": [[], [3, 2, 1], [6, 5, 4]], "num_moves": 1}, {"position": [[4], [3, 2, 1], [6, 5]], "num_moves": 2}, {"position": [[4, 1], [3, 2], [6, 5]], "num_moves": 3}, {"position": [[4, 1], [3], [6, 5, 2]], "num_moves": 4}, {"position": [[4], [3], [6, 5, 2, 1]], "num_moves": 5}, {"position": [[4, 3], [], [6, 5, 2, 1]], "num_moves": 6}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0035.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 5 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["2", "5", "1", "4"], "answer": "2", "solution": {"start_position": [[5, 2, 1], [4], [3]], "end_position": [[5], [4, 1], [3, 2]], "moves": [{"position": [[5, 2, 1], [4], [3]], "num_moves": 0}, {"position": [[5, 2], [4, 1], [3]], "num_moves": 1}, {"position": [[5], [4, 1], [3, 2]], "num_moves": 2}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0036.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 5 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["1", "3", "4", "6"], "answer": "3", "solution": {"start_position": [[5], [4, 1], [3, 2]], "end_position": [[5, 4, 1], [], [3, 2]], "moves": [{"position": [[5], [4, 1], [3, 2]], "num_moves": 0}, {"position": [[5], [4], [3, 2, 1]], "num_moves": 1}, {"position": [[5, 4], [], [3, 2, 1]], "num_moves": 2}, {"position": [[5, 4, 1], [], [3, 2]], "num_moves": 3}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0037.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 4 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["6", "3", "5", "4"], "answer": "5", "solution": {"start_position": [[], [3, 2], [4, 1]], "end_position": [[], [1], [4, 3, 2]], "moves": [{"position": [[], [3, 2], [4, 1]], "num_moves": 0}, {"position": [[2], [3], [4, 1]], "num_moves": 1}, {"position": [[2, 1], [3], [4]], "num_moves": 2}, {"position": [[2, 1], [], [4, 3]], "num_moves": 3}, {"position": [[2], [1], [4, 3]], "num_moves": 4}, {"position": [[], [1], [4, 3, 2]], "num_moves": 5}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0038.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 4 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["3", "1", "6", "2"], "answer": "3", "solution": {"start_position": [[2, 1], [], [4, 3]], "end_position": [[], [], [4, 3, 2, 1]], "moves": [{"position": [[2, 1], [], [4, 3]], "num_moves": 0}, {"position": [[2], [1], [4, 3]], "num_moves": 1}, {"position": [[], [1], [4, 3, 2]], "num_moves": 2}, {"position": [[], [], [4, 3, 2, 1]], "num_moves": 3}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0039.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 6 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["4", "1", "6", "2"], "answer": "1", "solution": {"start_position": [[6, 1], [5, 4, 3, 2], []], "end_position": [[6, 1], [5, 4, 3], [2]], "moves": [{"position": [[6, 1], [5, 4, 3, 2], []], "num_moves": 0}, {"position": [[6, 1], [5, 4, 3], [2]], "num_moves": 1}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0040.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 5 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["3", "6", "2", "1"], "answer": "6", "solution": {"start_position": [[5], [4, 3, 2, 1], []], "end_position": [[3], [4, 1], [5, 2]], "moves": [{"position": [[5], [4, 3, 2, 1], []], "num_moves": 0}, {"position": [[], [4, 3, 2, 1], [5]], "num_moves": 1}, {"position": [[1], [4, 3, 2], [5]], "num_moves": 2}, {"position": [[1], [4, 3], [5, 2]], "num_moves": 3}, {"position": [[], [4, 3], [5, 2, 1]], "num_moves": 4}, {"position": [[3], [4], [5, 2, 1]], "num_moves": 5}, {"position": [[3], [4, 1], [5, 2]], "num_moves": 6}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0041.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 4 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["3", "4", "1", "6"], "answer": "3", "solution": {"start_position": [[], [3, 2, 1], [4]], "end_position": [[2, 1], [3], [4]], "moves": [{"position": [[], [3, 2, 1], [4]], "num_moves": 0}, {"position": [[], [3, 2], [4, 1]], "num_moves": 1}, {"position": [[2], [3], [4, 1]], "num_moves": 2}, {"position": [[2, 1], [3], [4]], "num_moves": 3}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0042.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 5 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["6", "1", "2", "3"], "answer": "6", "solution": {"start_position": [[1], [4, 3], [5, 2]], "end_position": [[5, 2, 1], [4, 3], []], "moves": [{"position": [[1], [4, 3], [5, 2]], "num_moves": 0}, {"position": [[1], [4, 3, 2], [5]], "num_moves": 1}, {"position": [[], [4, 3, 2, 1], [5]], "num_moves": 2}, {"position": [[5], [4, 3, 2, 1], []], "num_moves": 3}, {"position": [[5], [4, 3, 2], [1]], "num_moves": 4}, {"position": [[5, 2], [4, 3], [1]], "num_moves": 5}, {"position": [[5, 2, 1], [4, 3], []], "num_moves": 6}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0043.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 6 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["5", "6", "3", "2"], "answer": "3", "solution": {"start_position": [[4], [3, 2, 1], [6, 5]], "end_position": [[4], [3], [6, 5, 2, 1]], "moves": [{"position": [[4], [3, 2, 1], [6, 5]], "num_moves": 0}, {"position": [[4, 1], [3, 2], [6, 5]], "num_moves": 1}, {"position": [[4, 1], [3], [6, 5, 2]], "num_moves": 2}, {"position": [[4], [3], [6, 5, 2, 1]], "num_moves": 3}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0044.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 3 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["5", "4", "2", "1"], "answer": "2", "solution": {"start_position": [[], [], [3, 2, 1]], "end_position": [[1], [2], [3]], "moves": [{"position": [[], [], [3, 2, 1]], "num_moves": 0}, {"position": [[1], [], [3, 2]], "num_moves": 1}, {"position": [[1], [2], [3]], "num_moves": 2}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0045.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 6 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["5", "1", "4", "6"], "answer": "1", "solution": {"start_position": [[2, 1], [5, 4, 3], [6]], "end_position": [[2], [5, 4, 3], [6, 1]], "moves": [{"position": [[2, 1], [5, 4, 3], [6]], "num_moves": 0}, {"position": [[2], [5, 4, 3], [6, 1]], "num_moves": 1}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0046.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 6 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["1", "6", "2", "3"], "answer": "3", "solution": {"start_position": [[6, 5, 2], [3], [4, 1]], "end_position": [[6, 5, 4], [3, 2, 1], []], "moves": [{"position": [[6, 5, 2], [3], [4, 1]], "num_moves": 0}, {"position": [[6, 5], [3, 2], [4, 1]], "num_moves": 1}, {"position": [[6, 5], [3, 2, 1], [4]], "num_moves": 2}, {"position": [[6, 5, 4], [3, 2, 1], []], "num_moves": 3}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0047.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 6 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["2", "5", "3", "4"], "answer": "2", "solution": {"start_position": [[], [3, 2, 1], [6, 5, 4]], "end_position": [[2], [3], [6, 5, 4, 1]], "moves": [{"position": [[], [3, 2, 1], [6, 5, 4]], "num_moves": 0}, {"position": [[], [3, 2], [6, 5, 4, 1]], "num_moves": 1}, {"position": [[2], [3], [6, 5, 4, 1]], "num_moves": 2}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0048.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 5 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["4", "3", "5", "2"], "answer": "5", "solution": {"start_position": [[5, 4, 1], [2], [3]], "end_position": [[5, 4, 3, 2, 1], [], []], "moves": [{"position": [[5, 4, 1], [2], [3]], "num_moves": 0}, {"position": [[5, 4], [2, 1], [3]], "num_moves": 1}, {"position": [[5, 4, 3], [2, 1], []], "num_moves": 2}, {"position": [[5, 4, 3], [2], [1]], "num_moves": 3}, {"position": [[5, 4, 3, 2], [], [1]], "num_moves": 4}, {"position": [[5, 4, 3, 2, 1], [], []], "num_moves": 5}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0049.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 3 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["2", "3", "5", "1"], "answer": "3", "solution": {"start_position": [[3], [2], [1]], "end_position": [[1], [2], [3]], "moves": [{"position": [[3], [2], [1]], "num_moves": 0}, {"position": [[3], [2, 1], []], "num_moves": 1}, {"position": [[], [2, 1], [3]], "num_moves": 2}, {"position": [[1], [2], [3]], "num_moves": 3}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0050.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 5 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["6", "1", "4", "5"], "answer": "1", "solution": {"start_position": [[4, 3], [1], [5, 2]], "end_position": [[4, 3, 2], [1], [5]], "moves": [{"position": [[4, 3], [1], [5, 2]], "num_moves": 0}, {"position": [[4, 3, 2], [1], [5]], "num_moves": 1}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0051.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 6 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["3", "1", "2", "6"], "answer": "1", "solution": {"start_position": [[3], [2, 1], [6, 5, 4]], "end_position": [[], [2, 1], [6, 5, 4, 3]], "moves": [{"position": [[3], [2, 1], [6, 5, 4]], "num_moves": 0}, {"position": [[], [2, 1], [6, 5, 4, 3]], "num_moves": 1}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0052.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 4 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["6", "4", "5", "3"], "answer": "4", "solution": {"start_position": [[3, 2], [1], [4]], "end_position": [[], [2, 1], [4, 3]], "moves": [{"position": [[3, 2], [1], [4]], "num_moves": 0}, {"position": [[3, 2], [], [4, 1]], "num_moves": 1}, {"position": [[3], [2], [4, 1]], "num_moves": 2}, {"position": [[3], [2, 1], [4]], "num_moves": 3}, {"position": [[], [2, 1], [4, 3]], "num_moves": 4}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0053.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 3 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["3", "6", "2", "4"], "answer": "6", "solution": {"start_position": [[1], [3, 2], []], "end_position": [[], [1], [3, 2]], "moves": [{"position": [[1], [3, 2], []], "num_moves": 0}, {"position": [[], [3, 2], [1]], "num_moves": 1}, {"position": [[2], [3], [1]], "num_moves": 2}, {"position": [[2, 1], [3], []], "num_moves": 3}, {"position": [[2, 1], [], [3]], "num_moves": 4}, {"position": [[2], [1], [3]], "num_moves": 5}, {"position": [[], [1], [3, 2]], "num_moves": 6}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0054.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 6 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["1", "3", "5", "6"], "answer": "6", "solution": {"start_position": [[5, 2], [6, 1], [4, 3]], "end_position": [[], [6, 5, 2, 1], [4, 3]], "moves": [{"position": [[5, 2], [6, 1], [4, 3]], "num_moves": 0}, {"position": [[5], [6, 1], [4, 3, 2]], "num_moves": 1}, {"position": [[5], [6], [4, 3, 2, 1]], "num_moves": 2}, {"position": [[], [6, 5], [4, 3, 2, 1]], "num_moves": 3}, {"position": [[1], [6, 5], [4, 3, 2]], "num_moves": 4}, {"position": [[1], [6, 5, 2], [4, 3]], "num_moves": 5}, {"position": [[], [6, 5, 2, 1], [4, 3]], "num_moves": 6}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0055.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 6 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["3", "1", "2", "5"], "answer": "2", "solution": {"start_position": [[4, 3], [], [6, 5, 2, 1]], "end_position": [[4, 1], [3], [6, 5, 2]], "moves": [{"position": [[4, 3], [], [6, 5, 2, 1]], "num_moves": 0}, {"position": [[4], [3], [6, 5, 2, 1]], "num_moves": 1}, {"position": [[4, 1], [3], [6, 5, 2]], "num_moves": 2}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0056.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 5 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["3", "1", "2", "6"], "answer": "1", "solution": {"start_position": [[4, 3, 2, 1], [], [5]], "end_position": [[4, 3, 2], [1], [5]], "moves": [{"position": [[4, 3, 2, 1], [], [5]], "num_moves": 0}, {"position": [[4, 3, 2], [1], [5]], "num_moves": 1}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0057.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 4 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["3", "6", "2", "1"], "answer": "3", "solution": {"start_position": [[2], [1], [4, 3]], "end_position": [[2], [3], [4, 1]], "moves": [{"position": [[2], [1], [4, 3]], "num_moves": 0}, {"position": [[2, 1], [], [4, 3]], "num_moves": 1}, {"position": [[2, 1], [3], [4]], "num_moves": 2}, {"position": [[2], [3], [4, 1]], "num_moves": 3}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0058.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 5 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["3", "4", "6", "5"], "answer": "6", "solution": {"start_position": [[4, 1], [3], [5, 2]], "end_position": [[2, 1], [3], [5, 4]], "moves": [{"position": [[4, 1], [3], [5, 2]], "num_moves": 0}, {"position": [[4, 1], [3, 2], [5]], "num_moves": 1}, {"position": [[4], [3, 2, 1], [5]], "num_moves": 2}, {"position": [[], [3, 2, 1], [5, 4]], "num_moves": 3}, {"position": [[], [3, 2], [5, 4, 1]], "num_moves": 4}, {"position": [[2], [3], [5, 4, 1]], "num_moves": 5}, {"position": [[2, 1], [3], [5, 4]], "num_moves": 6}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0059.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 3 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["1", "3", "2", "6"], "answer": "3", "solution": {"start_position": [[], [], [3, 2, 1]], "end_position": [[2, 1], [], [3]], "moves": [{"position": [[], [], [3, 2, 1]], "num_moves": 0}, {"position": [[], [1], [3, 2]], "num_moves": 1}, {"position": [[2], [1], [3]], "num_moves": 2}, {"position": [[2, 1], [], [3]], "num_moves": 3}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0060.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 4 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["3", "1", "5", "2"], "answer": "1", "solution": {"start_position": [[], [2, 1], [4, 3]], "end_position": [[3], [2, 1], [4]], "moves": [{"position": [[], [2, 1], [4, 3]], "num_moves": 0}, {"position": [[3], [2, 1], [4]], "num_moves": 1}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0061.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 6 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["1", "2", "4", "6"], "answer": "2", "solution": {"start_position": [[6, 1], [5, 2], [4, 3]], "end_position": [[6], [5], [4, 3, 2, 1]], "moves": [{"position": [[6, 1], [5, 2], [4, 3]], "num_moves": 0}, {"position": [[6, 1], [5], [4, 3, 2]], "num_moves": 1}, {"position": [[6], [5], [4, 3, 2, 1]], "num_moves": 2}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0062.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 4 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["3", "4", "1", "6"], "answer": "3", "solution": {"start_position": [[1], [], [4, 3, 2]], "end_position": [[3], [2, 1], [4]], "moves": [{"position": [[1], [], [4, 3, 2]], "num_moves": 0}, {"position": [[1], [2], [4, 3]], "num_moves": 1}, {"position": [[], [2, 1], [4, 3]], "num_moves": 2}, {"position": [[3], [2, 1], [4]], "num_moves": 3}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0063.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 5 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["4", "6", "5", "3"], "answer": "4", "solution": {"start_position": [[2], [1], [5, 4, 3]], "end_position": [[], [3, 2], [5, 4, 1]], "moves": [{"position": [[2], [1], [5, 4, 3]], "num_moves": 0}, {"position": [[2, 1], [], [5, 4, 3]], "num_moves": 1}, {"position": [[2, 1], [3], [5, 4]], "num_moves": 2}, {"position": [[2], [3], [5, 4, 1]], "num_moves": 3}, {"position": [[], [3, 2], [5, 4, 1]], "num_moves": 4}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0064.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 6 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["2", "6", "1", "4"], "answer": "2", "solution": {"start_position": [[4], [3, 2, 1], [6, 5]], "end_position": [[4, 1], [3], [6, 5, 2]], "moves": [{"position": [[4], [3, 2, 1], [6, 5]], "num_moves": 0}, {"position": [[4, 1], [3, 2], [6, 5]], "num_moves": 1}, {"position": [[4, 1], [3], [6, 5, 2]], "num_moves": 2}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0065.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 6 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["5", "4", "3", "6"], "answer": "6", "solution": {"start_position": [[], [5, 4], [6, 3, 2, 1]], "end_position": [[4, 3], [5, 2], [6, 1]], "moves": [{"position": [[], [5, 4], [6, 3, 2, 1]], "num_moves": 0}, {"position": [[4], [5], [6, 3, 2, 1]], "num_moves": 1}, {"position": [[4, 1], [5], [6, 3, 2]], "num_moves": 2}, {"position": [[4, 1], [5, 2], [6, 3]], "num_moves": 3}, {"position": [[4], [5, 2, 1], [6, 3]], "num_moves": 4}, {"position": [[4, 3], [5, 2, 1], [6]], "num_moves": 5}, {"position": [[4, 3], [5, 2], [6, 1]], "num_moves": 6}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0066.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 4 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["4", "6", "3", "1"], "answer": "1", "solution": {"start_position": [[4, 1], [3, 2], []], "end_position": [[4], [3, 2, 1], []], "moves": [{"position": [[4, 1], [3, 2], []], "num_moves": 0}, {"position": [[4], [3, 2, 1], []], "num_moves": 1}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0067.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 3 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["5", "1", "3", "6"], "answer": "1", "solution": {"start_position": [[], [], [3, 2, 1]], "end_position": [[1], [], [3, 2]], "moves": [{"position": [[], [], [3, 2, 1]], "num_moves": 0}, {"position": [[1], [], [3, 2]], "num_moves": 1}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0068.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 5 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["3", "5", "1", "6"], "answer": "6", "solution": {"start_position": [[3, 2, 1], [], [5, 4]], "end_position": [[1], [4, 3], [5, 2]], "moves": [{"position": [[3, 2, 1], [], [5, 4]], "num_moves": 0}, {"position": [[3, 2, 1], [4], [5]], "num_moves": 1}, {"position": [[3, 2], [4, 1], [5]], "num_moves": 2}, {"position": [[3], [4, 1], [5, 2]], "num_moves": 3}, {"position": [[3], [4], [5, 2, 1]], "num_moves": 4}, {"position": [[], [4, 3], [5, 2, 1]], "num_moves": 5}, {"position": [[1], [4, 3], [5, 2]], "num_moves": 6}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0069.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 5 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["1", "4", "3", "5"], "answer": "4", "solution": {"start_position": [[4, 3], [], [5, 2, 1]], "end_position": [[4], [3, 2, 1], [5]], "moves": [{"position": [[4, 3], [], [5, 2, 1]], "num_moves": 0}, {"position": [[4], [3], [5, 2, 1]], "num_moves": 1}, {"position": [[4, 1], [3], [5, 2]], "num_moves": 2}, {"position": [[4, 1], [3, 2], [5]], "num_moves": 3}, {"position": [[4], [3, 2, 1], [5]], "num_moves": 4}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0070.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 4 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["5", "6", "2", "4"], "answer": "5", "solution": {"start_position": [[4, 3], [], [2, 1]], "end_position": [[], [3, 2, 1], [4]], "moves": [{"position": [[4, 3], [], [2, 1]], "num_moves": 0}, {"position": [[4], [3], [2, 1]], "num_moves": 1}, {"position": [[4, 1], [3], [2]], "num_moves": 2}, {"position": [[4, 1], [3, 2], []], "num_moves": 3}, {"position": [[4], [3, 2, 1], []], "num_moves": 4}, {"position": [[], [3, 2, 1], [4]], "num_moves": 5}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0071.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 4 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["1", "5", "2", "3"], "answer": "2", "solution": {"start_position": [[1], [2], [4, 3]], "end_position": [[], [], [4, 3, 2, 1]], "moves": [{"position": [[1], [2], [4, 3]], "num_moves": 0}, {"position": [[1], [], [4, 3, 2]], "num_moves": 1}, {"position": [[], [], [4, 3, 2, 1]], "num_moves": 2}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0072.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 3 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["1", "4", "6", "2"], "answer": "1", "solution": {"start_position": [[1], [2], [3]], "end_position": [[1], [], [3, 2]], "moves": [{"position": [[1], [2], [3]], "num_moves": 0}, {"position": [[1], [], [3, 2]], "num_moves": 1}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0073.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 5 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["3", "6", "5", "4"], "answer": "6", "solution": {"start_position": [[4], [5], [3, 2, 1]], "end_position": [[4, 3, 2], [5], [1]], "moves": [{"position": [[4], [5], [3, 2, 1]], "num_moves": 0}, {"position": [[4, 1], [5], [3, 2]], "num_moves": 1}, {"position": [[4, 1], [5, 2], [3]], "num_moves": 2}, {"position": [[4], [5, 2, 1], [3]], "num_moves": 3}, {"position": [[4, 3], [5, 2, 1], []], "num_moves": 4}, {"position": [[4, 3], [5, 2], [1]], "num_moves": 5}, {"position": [[4, 3, 2], [5], [1]], "num_moves": 6}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0074.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 3 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["3", "6", "1", "5"], "answer": "1", "solution": {"start_position": [[], [], [3, 2, 1]], "end_position": [[], [1], [3, 2]], "moves": [{"position": [[], [], [3, 2, 1]], "num_moves": 0}, {"position": [[], [1], [3, 2]], "num_moves": 1}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0075.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 5 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["6", "3", "2", "5"], "answer": "3", "solution": {"start_position": [[4, 1], [5, 3, 2], []], "end_position": [[4, 3], [5], [2, 1]], "moves": [{"position": [[4, 1], [5, 3, 2], []], "num_moves": 0}, {"position": [[4, 1], [5, 3], [2]], "num_moves": 1}, {"position": [[4], [5, 3], [2, 1]], "num_moves": 2}, {"position": [[4, 3], [5], [2, 1]], "num_moves": 3}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0076.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 5 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["2", "1", "4", "6"], "answer": "4", "solution": {"start_position": [[2], [3], [5, 4, 1]], "end_position": [[4], [3, 2], [5, 1]], "moves": [{"position": [[2], [3], [5, 4, 1]], "num_moves": 0}, {"position": [[], [3, 2], [5, 4, 1]], "num_moves": 1}, {"position": [[], [3, 2, 1], [5, 4]], "num_moves": 2}, {"position": [[4], [3, 2, 1], [5]], "num_moves": 3}, {"position": [[4], [3, 2], [5, 1]], "num_moves": 4}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0077.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 6 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["3", "1", "4", "5"], "answer": "4", "solution": {"start_position": [[4], [5, 2, 1], [6, 3]], "end_position": [[4, 3, 2, 1], [5], [6]], "moves": [{"position": [[4], [5, 2, 1], [6, 3]], "num_moves": 0}, {"position": [[4, 3], [5, 2, 1], [6]], "num_moves": 1}, {"position": [[4, 3], [5, 2], [6, 1]], "num_moves": 2}, {"position": [[4, 3, 2], [5], [6, 1]], "num_moves": 3}, {"position": [[4, 3, 2, 1], [5], [6]], "num_moves": 4}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0078.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 6 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["6", "5", "3", "1"], "answer": "3", "solution": {"start_position": [[4, 1], [3, 2], [6, 5]], "end_position": [[4, 3], [], [6, 5, 2, 1]], "moves": [{"position": [[4, 1], [3, 2], [6, 5]], "num_moves": 0}, {"position": [[4, 1], [3], [6, 5, 2]], "num_moves": 1}, {"position": [[4], [3], [6, 5, 2, 1]], "num_moves": 2}, {"position": [[4, 3], [], [6, 5, 2, 1]], "num_moves": 3}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0079.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 5 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["5", "3", "4", "2"], "answer": "2", "solution": {"start_position": [[5, 4, 2], [3, 1], []], "end_position": [[5, 4, 2, 1], [], [3]], "moves": [{"position": [[5, 4, 2], [3, 1], []], "num_moves": 0}, {"position": [[5, 4, 2, 1], [3], []], "num_moves": 1}, {"position": [[5, 4, 2, 1], [], [3]], "num_moves": 2}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0080.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 6 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["2", "1", "5", "3"], "answer": "3", "solution": {"start_position": [[5], [4, 3, 2, 1], [6]], "end_position": [[1], [4, 3], [6, 5, 2]], "moves": [{"position": [[5], [4, 3, 2, 1], [6]], "num_moves": 0}, {"position": [[], [4, 3, 2, 1], [6, 5]], "num_moves": 1}, {"position": [[1], [4, 3, 2], [6, 5]], "num_moves": 2}, {"position": [[1], [4, 3], [6, 5, 2]], "num_moves": 3}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0081.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 6 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["1", "3", "4", "6"], "answer": "6", "solution": {"start_position": [[4, 1], [3, 2], [6, 5]], "end_position": [[2, 1], [], [6, 5, 4, 3]], "moves": [{"position": [[4, 1], [3, 2], [6, 5]], "num_moves": 0}, {"position": [[4], [3, 2, 1], [6, 5]], "num_moves": 1}, {"position": [[], [3, 2, 1], [6, 5, 4]], "num_moves": 2}, {"position": [[], [3, 2], [6, 5, 4, 1]], "num_moves": 3}, {"position": [[2], [3], [6, 5, 4, 1]], "num_moves": 4}, {"position": [[2, 1], [3], [6, 5, 4]], "num_moves": 5}, {"position": [[2, 1], [], [6, 5, 4, 3]], "num_moves": 6}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0082.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 6 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["1", "4", "5", "2"], "answer": "5", "solution": {"start_position": [[6, 4], [5, 2, 1], [3]], "end_position": [[6, 4, 3, 2, 1], [], [5]], "moves": [{"position": [[6, 4], [5, 2, 1], [3]], "num_moves": 0}, {"position": [[6, 4, 3], [5, 2, 1], []], "num_moves": 1}, {"position": [[6, 4, 3], [5, 2], [1]], "num_moves": 2}, {"position": [[6, 4, 3, 2], [5], [1]], "num_moves": 3}, {"position": [[6, 4, 3, 2, 1], [5], []], "num_moves": 4}, {"position": [[6, 4, 3, 2, 1], [], [5]], "num_moves": 5}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0083.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 6 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["1", "3", "6", "2"], "answer": "6", "solution": {"start_position": [[6, 1], [5], [4, 3, 2]], "end_position": [[6, 3, 2, 1], [5], [4]], "moves": [{"position": [[6, 1], [5], [4, 3, 2]], "num_moves": 0}, {"position": [[6, 1], [5, 2], [4, 3]], "num_moves": 1}, {"position": [[6], [5, 2, 1], [4, 3]], "num_moves": 2}, {"position": [[6, 3], [5, 2, 1], [4]], "num_moves": 3}, {"position": [[6, 3], [5, 2], [4, 1]], "num_moves": 4}, {"position": [[6, 3, 2], [5], [4, 1]], "num_moves": 5}, {"position": [[6, 3, 2, 1], [5], [4]], "num_moves": 6}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0084.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 6 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["1", "4", "6", "3"], "answer": "3", "solution": {"start_position": [[5, 4], [], [6, 3, 2, 1]], "end_position": [[5, 2], [4, 1], [6, 3]], "moves": [{"position": [[5, 4], [], [6, 3, 2, 1]], "num_moves": 0}, {"position": [[5], [4], [6, 3, 2, 1]], "num_moves": 1}, {"position": [[5], [4, 1], [6, 3, 2]], "num_moves": 2}, {"position": [[5, 2], [4, 1], [6, 3]], "num_moves": 3}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0085.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 5 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["2", "1", "3", "5"], "answer": "3", "solution": {"start_position": [[], [], [5, 4, 3, 2, 1]], "end_position": [[], [2, 1], [5, 4, 3]], "moves": [{"position": [[], [], [5, 4, 3, 2, 1]], "num_moves": 0}, {"position": [[1], [], [5, 4, 3, 2]], "num_moves": 1}, {"position": [[1], [2], [5, 4, 3]], "num_moves": 2}, {"position": [[], [2, 1], [5, 4, 3]], "num_moves": 3}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0086.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 4 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["3", "6", "2", "4"], "answer": "2", "solution": {"start_position": [[2, 1], [], [4, 3]], "end_position": [[2], [3], [4, 1]], "moves": [{"position": [[2, 1], [], [4, 3]], "num_moves": 0}, {"position": [[2, 1], [3], [4]], "num_moves": 1}, {"position": [[2], [3], [4, 1]], "num_moves": 2}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0087.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 6 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["5", "6", "1", "3"], "answer": "3", "solution": {"start_position": [[2], [5, 4, 3], [6, 1]], "end_position": [[6], [5, 4, 3, 2, 1], []], "moves": [{"position": [[2], [5, 4, 3], [6, 1]], "num_moves": 0}, {"position": [[], [5, 4, 3, 2], [6, 1]], "num_moves": 1}, {"position": [[], [5, 4, 3, 2, 1], [6]], "num_moves": 2}, {"position": [[6], [5, 4, 3, 2, 1], []], "num_moves": 3}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0088.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 5 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["6", "2", "4", "5"], "answer": "5", "solution": {"start_position": [[3, 2], [], [5, 4, 1]], "end_position": [[3], [4, 2, 1], [5]], "moves": [{"position": [[3, 2], [], [5, 4, 1]], "num_moves": 0}, {"position": [[3, 2, 1], [], [5, 4]], "num_moves": 1}, {"position": [[3, 2, 1], [4], [5]], "num_moves": 2}, {"position": [[3, 2], [4], [5, 1]], "num_moves": 3}, {"position": [[3], [4, 2], [5, 1]], "num_moves": 4}, {"position": [[3], [4, 2, 1], [5]], "num_moves": 5}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0089.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 5 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["4", "1", "6", "5"], "answer": "1", "solution": {"start_position": [[5], [4, 3, 2, 1], []], "end_position": [[], [4, 3, 2, 1], [5]], "moves": [{"position": [[5], [4, 3, 2, 1], []], "num_moves": 0}, {"position": [[], [4, 3, 2, 1], [5]], "num_moves": 1}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0090.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 5 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["1", "6", "5", "2"], "answer": "1", "solution": {"start_position": [[3, 2], [], [5, 4, 1]], "end_position": [[3], [2], [5, 4, 1]], "moves": [{"position": [[3, 2], [], [5, 4, 1]], "num_moves": 0}, {"position": [[3], [2], [5, 4, 1]], "num_moves": 1}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0091.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 5 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["2", "6", "4", "5"], "answer": "4", "solution": {"start_position": [[2], [3], [5, 4, 1]], "end_position": [[], [1], [5, 4, 3, 2]], "moves": [{"position": [[2], [3], [5, 4, 1]], "num_moves": 0}, {"position": [[2, 1], [3], [5, 4]], "num_moves": 1}, {"position": [[2, 1], [], [5, 4, 3]], "num_moves": 2}, {"position": [[2], [1], [5, 4, 3]], "num_moves": 3}, {"position": [[], [1], [5, 4, 3, 2]], "num_moves": 4}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0092.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 6 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["3", "4", "1", "2"], "answer": "3", "solution": {"start_position": [[6, 4], [5, 2, 1], [3]], "end_position": [[6, 4], [5], [3, 2, 1]], "moves": [{"position": [[6, 4], [5, 2, 1], [3]], "num_moves": 0}, {"position": [[6, 4, 1], [5, 2], [3]], "num_moves": 1}, {"position": [[6, 4, 1], [5], [3, 2]], "num_moves": 2}, {"position": [[6, 4], [5], [3, 2, 1]], "num_moves": 3}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0093.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 5 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["6", "2", "5", "3"], "answer": "3", "solution": {"start_position": [[3], [2, 1], [5, 4]], "end_position": [[1], [], [5, 4, 3, 2]], "moves": [{"position": [[3], [2, 1], [5, 4]], "num_moves": 0}, {"position": [[], [2, 1], [5, 4, 3]], "num_moves": 1}, {"position": [[1], [2], [5, 4, 3]], "num_moves": 2}, {"position": [[1], [], [5, 4, 3, 2]], "num_moves": 3}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0094.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 6 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["3", "5", "6", "1"], "answer": "6", "solution": {"start_position": [[5, 4, 3], [6, 2, 1], []], "end_position": [[5], [6, 4, 1], [3, 2]], "moves": [{"position": [[5, 4, 3], [6, 2, 1], []], "num_moves": 0}, {"position": [[5, 4], [6, 2, 1], [3]], "num_moves": 1}, {"position": [[5, 4, 1], [6, 2], [3]], "num_moves": 2}, {"position": [[5, 4, 1], [6], [3, 2]], "num_moves": 3}, {"position": [[5, 4], [6], [3, 2, 1]], "num_moves": 4}, {"position": [[5], [6, 4], [3, 2, 1]], "num_moves": 5}, {"position": [[5], [6, 4, 1], [3, 2]], "num_moves": 6}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0095.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 5 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["4", "2", "6", "5"], "answer": "6", "solution": {"start_position": [[4], [3, 2], [5, 1]], "end_position": [[2, 1], [], [5, 4, 3]], "moves": [{"position": [[4], [3, 2], [5, 1]], "num_moves": 0}, {"position": [[4], [3, 2, 1], [5]], "num_moves": 1}, {"position": [[], [3, 2, 1], [5, 4]], "num_moves": 2}, {"position": [[], [3, 2], [5, 4, 1]], "num_moves": 3}, {"position": [[2], [3], [5, 4, 1]], "num_moves": 4}, {"position": [[2, 1], [3], [5, 4]], "num_moves": 5}, {"position": [[2, 1], [], [5, 4, 3]], "num_moves": 6}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0096.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 6 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["3", "5", "6", "2"], "answer": "3", "solution": {"start_position": [[6], [5, 4, 3], [2, 1]], "end_position": [[6], [5, 4, 3, 2, 1], []], "moves": [{"position": [[6], [5, 4, 3], [2, 1]], "num_moves": 0}, {"position": [[6, 1], [5, 4, 3], [2]], "num_moves": 1}, {"position": [[6, 1], [5, 4, 3, 2], []], "num_moves": 2}, {"position": [[6], [5, 4, 3, 2, 1], []], "num_moves": 3}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0097.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 6 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["4", "1", "3", "2"], "answer": "4", "solution": {"start_position": [[5], [6, 4], [3, 2, 1]], "end_position": [[5, 4], [6, 2, 1], [3]], "moves": [{"position": [[5], [6, 4], [3, 2, 1]], "num_moves": 0}, {"position": [[5, 4], [6], [3, 2, 1]], "num_moves": 1}, {"position": [[5, 4, 1], [6], [3, 2]], "num_moves": 2}, {"position": [[5, 4, 1], [6, 2], [3]], "num_moves": 3}, {"position": [[5, 4], [6, 2, 1], [3]], "num_moves": 4}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0098.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 5 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["1", "2", "3", "4"], "answer": "2", "solution": {"start_position": [[4], [5, 2, 1], [3]], "end_position": [[4, 1], [5], [3, 2]], "moves": [{"position": [[4], [5, 2, 1], [3]], "num_moves": 0}, {"position": [[4, 1], [5, 2], [3]], "num_moves": 1}, {"position": [[4, 1], [5], [3, 2]], "num_moves": 2}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/tower_of_hanoi/tower_of_hanoi_0099.jpg", "question": "You are playing a Tower of Hanoi game with 3 rods and 6 disks of various diameters, which can slide onto any rod. You are given the starting and ending configuration of the game as shown in the top and the bottom of the image, respectively. The game has the following rules: i) Only one disk may be moved at a time; ii) Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or on an empty rod; and iii) No disk can be placed on top of a disk that is smaller than it. What is the minimum number of moves required to go from the starting to the ending configuration?", "options": ["1", "5", "2", "4"], "answer": "1", "solution": {"start_position": [[3], [4], [6, 5, 2, 1]], "end_position": [[], [4, 3], [6, 5, 2, 1]], "moves": [{"position": [[3], [4], [6, 5, 2, 1]], "num_moves": 0}, {"position": [[], [4, 3], [6, 5, 2, 1]], "num_moves": 1}]}, "source_file": "tower_of_hanoi.json"}
{"image": "images/wood_slide/wood_slide_0000.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["2", "1", "6", "5"], "answer": "1", "solution": {"start_position": "4722\n5733\n0611\n0611\n8899", "end_position": "4722\n0733\n5611\n0611\n8899", "moves": ["4722\n5733\n0611\n0611\n8899", "4722\n0733\n5611\n0611\n8899"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0001.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["5", "2", "4", "3"], "answer": "3", "solution": {"start_position": "3305\n6224\n6711\n0711\n8899", "end_position": "3354\n6022\n6711\n0711\n8899", "moves": ["3305\n6224\n6711\n0711\n8899", "3350\n6224\n6711\n0711\n8899", "3354\n6220\n6711\n0711\n8899", "3354\n6022\n6711\n0711\n8899"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0002.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["3", "5", "2", "1"], "answer": "5", "solution": {"start_position": "7633\n7622\n1154\n1100\n8899", "end_position": "0633\n0622\n7115\n7114\n8899", "moves": ["7633\n7622\n1154\n1100\n8899", "7633\n7622\n1150\n1104\n8899", "7633\n7622\n1105\n1104\n8899", "7633\n7622\n0115\n0114\n8899", "0633\n7622\n7115\n0114\n8899", "0633\n0622\n7115\n7114\n8899"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0003.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["4", "6", "1", "2"], "answer": "2", "solution": {"start_position": "0335\n6224\n6711\n0711\n8899", "end_position": "6335\n6224\n7011\n7011\n8899", "moves": ["0335\n6224\n6711\n0711\n8899", "6335\n6224\n0711\n0711\n8899", "6335\n6224\n7011\n7011\n8899"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0004.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["3", "6", "4", "5"], "answer": "4", "solution": {"start_position": "2233\n1140\n1105\n6788\n6799", "end_position": "2233\n6114\n6115\n0788\n0799", "moves": ["2233\n1140\n1105\n6788\n6799", "2233\n1104\n1105\n6788\n6799", "2233\n0114\n0115\n6788\n6799", "2233\n0114\n6115\n6788\n0799", "2233\n6114\n6115\n0788\n0799"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0005.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["6", "4", "3", "1"], "answer": "4", "solution": {"start_position": "2233\n7611\n7611\n4500\n8899", "end_position": "7220\n7633\n0611\n4511\n8899", "moves": ["2233\n7611\n7611\n4500\n8899", "2233\n7600\n7611\n4511\n8899", "2200\n7633\n7611\n4511\n8899", "0220\n7633\n7611\n4511\n8899", "7220\n7633\n0611\n4511\n8899"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0006.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["4", "2", "5", "6"], "answer": "5", "solution": {"start_position": "2233\n6110\n6114\n7880\n7995", "end_position": "2233\n6114\n6115\n7088\n7099", "moves": ["2233\n6110\n6114\n7880\n7995", "2233\n6110\n6114\n7885\n7990", "2233\n6110\n6114\n7885\n7099", "2233\n6114\n6110\n7885\n7099", "2233\n6114\n6115\n7880\n7099", "2233\n6114\n6115\n7088\n7099"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0007.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["6", "1", "2", "3"], "answer": "2", "solution": {"start_position": "7022\n7633\n4611\n5011\n8899", "end_position": "7022\n7633\n0611\n4511\n8899", "moves": ["7022\n7633\n4611\n5011\n8899", "7022\n7633\n4611\n0511\n8899", "7022\n7633\n0611\n4511\n8899"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0008.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["1", "2", "4", "5"], "answer": "1", "solution": {"start_position": "6033\n6022\n7115\n7114\n8899", "end_position": "0633\n0622\n7115\n7114\n8899", "moves": ["6033\n6022\n7115\n7114\n8899", "0633\n0622\n7115\n7114\n8899"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0009.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["4", "5", "1", "2"], "answer": "1", "solution": {"start_position": "2233\n6114\n6110\n7885\n7099", "end_position": "2233\n6114\n6115\n7880\n7099", "moves": ["2233\n6114\n6110\n7885\n7099", "2233\n6114\n6115\n7880\n7099"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0010.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["5", "2", "1", "3"], "answer": "2", "solution": {"start_position": "2233\n7611\n7611\n8845\n0099", "end_position": "2233\n7611\n7611\n8840\n0995", "moves": ["2233\n7611\n7611\n8845\n0099", "2233\n7611\n7611\n8845\n0990", "2233\n7611\n7611\n8840\n0995"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0011.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["4", "1", "3", "2"], "answer": "2", "solution": {"start_position": "4722\n0733\n5611\n0611\n8899", "end_position": "0722\n4733\n0611\n5611\n8899", "moves": ["4722\n0733\n5611\n0611\n8899", "4722\n0733\n0611\n5611\n8899", "0722\n4733\n0611\n5611\n8899"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0012.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["2", "1", "6", "3"], "answer": "3", "solution": {"start_position": "7022\n7633\n4611\n5011\n8899", "end_position": "0722\n4733\n0611\n5611\n8899", "moves": ["7022\n7633\n4611\n5011\n8899", "7022\n7033\n4611\n5611\n8899", "0722\n0733\n4611\n5611\n8899", "0722\n4733\n0611\n5611\n8899"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0013.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["4", "1", "2", "6"], "answer": "4", "solution": {"start_position": "2233\n0114\n6115\n6788\n0799", "end_position": "2233\n1100\n1145\n6788\n6799", "moves": ["2233\n0114\n6115\n6788\n0799", "2233\n0114\n0115\n6788\n6799", "2233\n1104\n1105\n6788\n6799", "2233\n1140\n1105\n6788\n6799", "2233\n1100\n1145\n6788\n6799"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0014.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["1", "5", "4", "3"], "answer": "5", "solution": {"start_position": "0054\n3322\n6711\n6711\n8899", "end_position": "5422\n3300\n6711\n6711\n8899", "moves": ["0054\n3322\n6711\n6711\n8899", "0504\n3322\n6711\n6711\n8899", "0540\n3322\n6711\n6711\n8899", "5040\n3322\n6711\n6711\n8899", "5400\n3322\n6711\n6711\n8899", "5422\n3300\n6711\n6711\n8899"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0015.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["3", "6", "5", "1"], "answer": "5", "solution": {"start_position": "6033\n6220\n7115\n7114\n8899", "end_position": "7633\n7622\n1105\n1104\n8899", "moves": ["6033\n6220\n7115\n7114\n8899", "6033\n6022\n7115\n7114\n8899", "0633\n0622\n7115\n7114\n8899", "0633\n7622\n7115\n0114\n8899", "7633\n7622\n0115\n0114\n8899", "7633\n7622\n1105\n1104\n8899"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0016.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["1", "3", "2", "4"], "answer": "4", "solution": {"start_position": "5422\n0733\n6711\n6011\n8899", "end_position": "5400\n3322\n6711\n6711\n8899", "moves": ["5422\n0733\n6711\n6011\n8899", "5422\n0033\n6711\n6711\n8899", "5422\n0330\n6711\n6711\n8899", "5422\n3300\n6711\n6711\n8899", "5400\n3322\n6711\n6711\n8899"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0017.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["3", "1", "2", "6"], "answer": "1", "solution": {"start_position": "2233\n0114\n6115\n6788\n0799", "end_position": "2233\n0114\n0115\n6788\n6799", "moves": ["2233\n0114\n6115\n6788\n0799", "2233\n0114\n0115\n6788\n6799"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0018.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["6", "1", "5", "2"], "answer": "5", "solution": {"start_position": "7220\n7633\n0611\n4511\n8899", "end_position": "0722\n0733\n4611\n5611\n8899", "moves": ["7220\n7633\n0611\n4511\n8899", "7022\n7633\n0611\n4511\n8899", "7022\n7633\n4611\n0511\n8899", "7022\n7633\n4611\n5011\n8899", "7022\n7033\n4611\n5611\n8899", "0722\n0733\n4611\n5611\n8899"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0019.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["1", "5", "6", "2"], "answer": "2", "solution": {"start_position": "1122\n1133\n0405\n6788\n6799", "end_position": "1122\n1133\n4050\n6788\n6799", "moves": ["1122\n1133\n0405\n6788\n6799", "1122\n1133\n0450\n6788\n6799", "1122\n1133\n4050\n6788\n6799"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0020.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["2", "3", "1", "4"], "answer": "4", "solution": {"start_position": "3354\n6220\n6711\n0711\n8899", "end_position": "6335\n6224\n0711\n0711\n8899", "moves": ["3354\n6220\n6711\n0711\n8899", "3350\n6224\n6711\n0711\n8899", "3305\n6224\n6711\n0711\n8899", "0335\n6224\n6711\n0711\n8899", "6335\n6224\n0711\n0711\n8899"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0021.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["4", "5", "2", "1"], "answer": "1", "solution": {"start_position": "5422\n0033\n6711\n6711\n8899", "end_position": "5422\n0733\n6711\n6011\n8899", "moves": ["5422\n0033\n6711\n6711\n8899", "5422\n0733\n6711\n6011\n8899"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0022.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["1", "5", "2", "3"], "answer": "1", "solution": {"start_position": "2233\n7611\n7611\n4500\n8899", "end_position": "2233\n7611\n7611\n4050\n8899", "moves": ["2233\n7611\n7611\n4500\n8899", "2233\n7611\n7611\n4050\n8899"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0023.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["3", "6", "2", "4"], "answer": "3", "solution": {"start_position": "0335\n6224\n6711\n0711\n8899", "end_position": "6335\n6224\n7110\n7110\n8899", "moves": ["0335\n6224\n6711\n0711\n8899", "6335\n6224\n0711\n0711\n8899", "6335\n6224\n7011\n7011\n8899", "6335\n6224\n7110\n7110\n8899"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0024.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["6", "5", "2", "1"], "answer": "5", "solution": {"start_position": "7633\n7622\n0115\n0114\n8899", "end_position": "6033\n6225\n7110\n7114\n8899", "moves": ["7633\n7622\n0115\n0114\n8899", "0633\n7622\n7115\n0114\n8899", "0633\n0622\n7115\n7114\n8899", "6033\n6022\n7115\n7114\n8899", "6033\n6220\n7115\n7114\n8899", "6033\n6225\n7110\n7114\n8899"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0025.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["5", "6", "1", "4"], "answer": "1", "solution": {"start_position": "2233\n7611\n7611\n8804\n0995", "end_position": "2233\n7611\n7611\n8840\n0995", "moves": ["2233\n7611\n7611\n8804\n0995", "2233\n7611\n7611\n8840\n0995"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0026.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["4", "3", "5", "6"], "answer": "5", "solution": {"start_position": "5400\n3322\n6711\n6711\n8899", "end_position": "3354\n0022\n6711\n6711\n8899", "moves": ["5400\n3322\n6711\n6711\n8899", "5040\n3322\n6711\n6711\n8899", "0540\n3322\n6711\n6711\n8899", "0504\n3322\n6711\n6711\n8899", "0054\n3322\n6711\n6711\n8899", "3354\n0022\n6711\n6711\n8899"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0027.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["6", "1", "4", "2"], "answer": "4", "solution": {"start_position": "2200\n1133\n1145\n6788\n6799", "end_position": "2233\n0114\n0115\n6788\n6799", "moves": ["2200\n1133\n1145\n6788\n6799", "2233\n1100\n1145\n6788\n6799", "2233\n1140\n1105\n6788\n6799", "2233\n1104\n1105\n6788\n6799", "2233\n0114\n0115\n6788\n6799"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0028.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["4", "5", "6", "2"], "answer": "5", "solution": {"start_position": "2233\n7611\n7611\n8845\n0099", "end_position": "2233\n7611\n7611\n4500\n8899", "moves": ["2233\n7611\n7611\n8845\n0099", "2233\n7611\n7611\n0045\n8899", "2233\n7611\n7611\n0405\n8899", "2233\n7611\n7611\n4005\n8899", "2233\n7611\n7611\n4050\n8899", "2233\n7611\n7611\n4500\n8899"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0029.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["4", "2", "3", "6"], "answer": "3", "solution": {"start_position": "2233\n7611\n7611\n0405\n8899", "end_position": "2233\n7611\n7611\n4500\n8899", "moves": ["2233\n7611\n7611\n0405\n8899", "2233\n7611\n7611\n4005\n8899", "2233\n7611\n7611\n4050\n8899", "2233\n7611\n7611\n4500\n8899"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0030.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["3", "1", "4", "2"], "answer": "4", "solution": {"start_position": "1122\n1133\n4500\n6788\n6799", "end_position": "1122\n1133\n0045\n6788\n6799", "moves": ["1122\n1133\n4500\n6788\n6799", "1122\n1133\n4050\n6788\n6799", "1122\n1133\n0450\n6788\n6799", "1122\n1133\n0405\n6788\n6799", "1122\n1133\n0045\n6788\n6799"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0031.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["4", "5", "6", "3"], "answer": "4", "solution": {"start_position": "2233\n6110\n6114\n7880\n7995", "end_position": "2233\n0611\n7611\n7884\n0995", "moves": ["2233\n6110\n6114\n7880\n7995", "2233\n6110\n6110\n7884\n7995", "2233\n6011\n6011\n7884\n7995", "2233\n0611\n0611\n7884\n7995", "2233\n0611\n7611\n7884\n0995"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0032.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["2", "3", "1", "5"], "answer": "1", "solution": {"start_position": "0220\n1133\n1145\n6788\n6799", "end_position": "2200\n1133\n1145\n6788\n6799", "moves": ["0220\n1133\n1145\n6788\n6799", "2200\n1133\n1145\n6788\n6799"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0033.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["6", "1", "5", "4"], "answer": "1", "solution": {"start_position": "7633\n7622\n1150\n1104\n8899", "end_position": "7633\n7622\n1105\n1104\n8899", "moves": ["7633\n7622\n1150\n1104\n8899", "7633\n7622\n1105\n1104\n8899"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0034.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["5", "3", "1", "4"], "answer": "5", "solution": {"start_position": "7633\n7622\n1154\n1199\n0880", "end_position": "7633\n7622\n0115\n0114\n8899", "moves": ["7633\n7622\n1154\n1199\n0880", "7633\n7622\n1154\n1199\n8800", "7633\n7622\n1154\n1100\n8899", "7633\n7622\n1150\n1104\n8899", "7633\n7622\n1105\n1104\n8899", "7633\n7622\n0115\n0114\n8899"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0035.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["5", "4", "1", "3"], "answer": "5", "solution": {"start_position": "3354\n0022\n6711\n6711\n8899", "end_position": "5400\n3322\n6711\n6711\n8899", "moves": ["3354\n0022\n6711\n6711\n8899", "0054\n3322\n6711\n6711\n8899", "0504\n3322\n6711\n6711\n8899", "0540\n3322\n6711\n6711\n8899", "5040\n3322\n6711\n6711\n8899", "5400\n3322\n6711\n6711\n8899"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0036.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["1", "3", "4", "6"], "answer": "3", "solution": {"start_position": "5400\n3322\n6711\n6711\n8899", "end_position": "5422\n0033\n6711\n6711\n8899", "moves": ["5400\n3322\n6711\n6711\n8899", "5422\n3300\n6711\n6711\n8899", "5422\n0330\n6711\n6711\n8899", "5422\n0033\n6711\n6711\n8899"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0037.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["6", "4", "1", "5"], "answer": "1", "solution": {"start_position": "2233\n6114\n6115\n7880\n7099", "end_position": "2233\n6114\n6115\n7088\n7099", "moves": ["2233\n6114\n6115\n7880\n7099", "2233\n6114\n6115\n7088\n7099"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0038.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["4", "1", "6", "2"], "answer": "4", "solution": {"start_position": "7633\n7622\n1154\n1199\n8800", "end_position": "7633\n7622\n0115\n0114\n8899", "moves": ["7633\n7622\n1154\n1199\n8800", "7633\n7622\n1154\n1100\n8899", "7633\n7622\n1150\n1104\n8899", "7633\n7622\n1105\n1104\n8899", "7633\n7622\n0115\n0114\n8899"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0039.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["4", "3", "6", "1"], "answer": "3", "solution": {"start_position": "2233\n6114\n6115\n7088\n7099", "end_position": "2233\n6110\n6114\n7885\n7099", "moves": ["2233\n6114\n6115\n7088\n7099", "2233\n6114\n6115\n7880\n7099", "2233\n6114\n6110\n7885\n7099", "2233\n6110\n6114\n7885\n7099"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0040.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["4", "3", "2", "1"], "answer": "3", "solution": {"start_position": "2233\n6110\n6114\n7880\n7995", "end_position": "2233\n6114\n6110\n7885\n7099", "moves": ["2233\n6110\n6114\n7880\n7995", "2233\n6110\n6114\n7885\n7990", "2233\n6110\n6114\n7885\n7099", "2233\n6114\n6110\n7885\n7099"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0041.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["4", "3", "1", "6"], "answer": "4", "solution": {"start_position": "7633\n7622\n1150\n1104\n8899", "end_position": "7633\n7622\n1154\n1199\n0088", "moves": ["7633\n7622\n1150\n1104\n8899", "7633\n7622\n1154\n1100\n8899", "7633\n7622\n1154\n1199\n8800", "7633\n7622\n1154\n1199\n0880", "7633\n7622\n1154\n1199\n0088"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0042.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["2", "1", "3", "4"], "answer": "2", "solution": {"start_position": "0633\n0622\n7115\n7114\n8899", "end_position": "7633\n7622\n0115\n0114\n8899", "moves": ["0633\n0622\n7115\n7114\n8899", "0633\n7622\n7115\n0114\n8899", "7633\n7622\n0115\n0114\n8899"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0043.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["5", "6", "2", "3"], "answer": "2", "solution": {"start_position": "2233\n7611\n7611\n0045\n8899", "end_position": "2233\n7611\n7611\n4005\n8899", "moves": ["2233\n7611\n7611\n0045\n8899", "2233\n7611\n7611\n0405\n8899", "2233\n7611\n7611\n4005\n8899"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0044.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["4", "3", "5", "1"], "answer": "5", "solution": {"start_position": "4722\n5733\n6011\n6011\n8899", "end_position": "0722\n0733\n4611\n5611\n8899", "moves": ["4722\n5733\n6011\n6011\n8899", "4722\n5733\n0611\n0611\n8899", "4722\n0733\n5611\n0611\n8899", "4722\n0733\n0611\n5611\n8899", "0722\n4733\n0611\n5611\n8899", "0722\n0733\n4611\n5611\n8899"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0045.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["5", "2", "4", "6"], "answer": "2", "solution": {"start_position": "2200\n7633\n7611\n4511\n8899", "end_position": "2233\n7611\n7611\n4500\n8899", "moves": ["2200\n7633\n7611\n4511\n8899", "2233\n7600\n7611\n4511\n8899", "2233\n7611\n7611\n4500\n8899"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0046.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["2", "6", "3", "1"], "answer": "1", "solution": {"start_position": "6335\n6224\n7110\n7110\n8899", "end_position": "6335\n6224\n7011\n7011\n8899", "moves": ["6335\n6224\n7110\n7110\n8899", "6335\n6224\n7011\n7011\n8899"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0047.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["2", "5", "3", "4"], "answer": "2", "solution": {"start_position": "7633\n7622\n1154\n1199\n0088", "end_position": "7633\n7622\n1154\n1199\n8800", "moves": ["7633\n7622\n1154\n1199\n0088", "7633\n7622\n1154\n1199\n0880", "7633\n7622\n1154\n1199\n8800"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0048.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["5", "4", "3", "2"], "answer": "3", "solution": {"start_position": "2233\n0114\n0115\n6788\n6799", "end_position": "2233\n6114\n6115\n7088\n7099", "moves": ["2233\n0114\n0115\n6788\n6799", "2233\n0114\n6115\n6788\n0799", "2233\n6114\n6115\n0788\n0799", "2233\n6114\n6115\n7088\n7099"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0049.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["3", "1", "5", "2"], "answer": "1", "solution": {"start_position": "6033\n6225\n7114\n7110\n8899", "end_position": "6330\n6225\n7114\n7110\n8899", "moves": ["6033\n6225\n7114\n7110\n8899", "6330\n6225\n7114\n7110\n8899"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0050.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["6", "1", "4", "5"], "answer": "1", "solution": {"start_position": "6335\n6224\n0711\n0711\n8899", "end_position": "6335\n6224\n7011\n7011\n8899", "moves": ["6335\n6224\n0711\n0711\n8899", "6335\n6224\n7011\n7011\n8899"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0051.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["3", "2", "1", "6"], "answer": "2", "solution": {"start_position": "2233\n0611\n0611\n7884\n7995", "end_position": "2233\n7611\n7611\n0884\n0995", "moves": ["2233\n0611\n0611\n7884\n7995", "2233\n0611\n7611\n7884\n0995", "2233\n7611\n7611\n0884\n0995"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0052.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["6", "1", "5", "4"], "answer": "1", "solution": {"start_position": "1122\n1133\n0405\n6788\n6799", "end_position": "1122\n1133\n0045\n6788\n6799", "moves": ["1122\n1133\n0405\n6788\n6799", "1122\n1133\n0045\n6788\n6799"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0053.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["4", "3", "2", "5"], "answer": "3", "solution": {"start_position": "0540\n3322\n6711\n6711\n8899", "end_position": "3354\n0022\n6711\n6711\n8899", "moves": ["0540\n3322\n6711\n6711\n8899", "0504\n3322\n6711\n6711\n8899", "0054\n3322\n6711\n6711\n8899", "3354\n0022\n6711\n6711\n8899"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0054.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["2", "4", "6", "1"], "answer": "1", "solution": {"start_position": "0022\n1133\n1145\n6788\n6799", "end_position": "0220\n1133\n1145\n6788\n6799", "moves": ["0022\n1133\n1145\n6788\n6799", "0220\n1133\n1145\n6788\n6799"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0055.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["2", "1", "4", "5"], "answer": "4", "solution": {"start_position": "4722\n0733\n0611\n5611\n8899", "end_position": "4022\n5733\n6711\n6011\n8899", "moves": ["4722\n0733\n0611\n5611\n8899", "4722\n0733\n5611\n0611\n8899", "4722\n5733\n0611\n0611\n8899", "4722\n5733\n6011\n6011\n8899", "4022\n5733\n6711\n6011\n8899"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0056.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["2", "4", "1", "6"], "answer": "4", "solution": {"start_position": "2233\n7611\n7611\n4500\n8899", "end_position": "2233\n7611\n7611\n0045\n8899", "moves": ["2233\n7611\n7611\n4500\n8899", "2233\n7611\n7611\n4050\n8899", "2233\n7611\n7611\n4005\n8899", "2233\n7611\n7611\n0405\n8899", "2233\n7611\n7611\n0045\n8899"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0057.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["1", "6", "3", "2"], "answer": "1", "solution": {"start_position": "2233\n7611\n7611\n4005\n8899", "end_position": "2233\n7611\n7611\n4050\n8899", "moves": ["2233\n7611\n7611\n4005\n8899", "2233\n7611\n7611\n4050\n8899"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0058.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["4", "5", "2", "6"], "answer": "2", "solution": {"start_position": "0022\n1133\n1145\n6788\n6799", "end_position": "2200\n1133\n1145\n6788\n6799", "moves": ["0022\n1133\n1145\n6788\n6799", "0220\n1133\n1145\n6788\n6799", "2200\n1133\n1145\n6788\n6799"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0059.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["1", "2", "3", "6"], "answer": "2", "solution": {"start_position": "2233\n0611\n7611\n7884\n0995", "end_position": "2233\n6011\n6011\n7884\n7995", "moves": ["2233\n0611\n7611\n7884\n0995", "2233\n0611\n0611\n7884\n7995", "2233\n6011\n6011\n7884\n7995"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0060.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["2", "5", "4", "1"], "answer": "5", "solution": {"start_position": "5422\n0330\n6711\n6711\n8899", "end_position": "4722\n5733\n6011\n6011\n8899", "moves": ["5422\n0330\n6711\n6711\n8899", "5422\n0033\n6711\n6711\n8899", "5422\n0733\n6711\n6011\n8899", "0422\n5733\n6711\n6011\n8899", "4022\n5733\n6711\n6011\n8899", "4722\n5733\n6011\n6011\n8899"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0061.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["1", "3", "4", "6"], "answer": "3", "solution": {"start_position": "0504\n3322\n6711\n6711\n8899", "end_position": "5400\n3322\n6711\n6711\n8899", "moves": ["0504\n3322\n6711\n6711\n8899", "0540\n3322\n6711\n6711\n8899", "5040\n3322\n6711\n6711\n8899", "5400\n3322\n6711\n6711\n8899"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0062.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["3", "4", "1", "6"], "answer": "3", "solution": {"start_position": "1122\n1133\n0045\n6788\n6799", "end_position": "1122\n1133\n4050\n6788\n6799", "moves": ["1122\n1133\n0045\n6788\n6799", "1122\n1133\n0405\n6788\n6799", "1122\n1133\n0450\n6788\n6799", "1122\n1133\n4050\n6788\n6799"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0063.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["1", "6", "5", "4"], "answer": "1", "solution": {"start_position": "2233\n6110\n6110\n7884\n7995", "end_position": "2233\n6011\n6011\n7884\n7995", "moves": ["2233\n6110\n6110\n7884\n7995", "2233\n6011\n6011\n7884\n7995"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0064.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["2", "6", "1", "4"], "answer": "2", "solution": {"start_position": "2233\n7611\n7611\n8845\n0990", "end_position": "2233\n7611\n7611\n0045\n8899", "moves": ["2233\n7611\n7611\n8845\n0990", "2233\n7611\n7611\n8845\n0099", "2233\n7611\n7611\n0045\n8899"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0065.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["6", "4", "3", "5"], "answer": "5", "solution": {"start_position": "2233\n6114\n6115\n7880\n7099", "end_position": "2233\n1104\n1105\n6788\n6799", "moves": ["2233\n6114\n6115\n7880\n7099", "2233\n6114\n6115\n7088\n7099", "2233\n6114\n6115\n0788\n0799", "2233\n0114\n6115\n6788\n0799", "2233\n0114\n0115\n6788\n6799", "2233\n1104\n1105\n6788\n6799"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0066.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["4", "6", "3", "2"], "answer": "2", "solution": {"start_position": "6033\n6225\n7114\n7110\n8899", "end_position": "6033\n6220\n7115\n7114\n8899", "moves": ["6033\n6225\n7114\n7110\n8899", "6033\n6225\n7110\n7114\n8899", "6033\n6220\n7115\n7114\n8899"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0067.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["5", "1", "3", "6"], "answer": "1", "solution": {"start_position": "3354\n6022\n6711\n0711\n8899", "end_position": "3354\n6220\n6711\n0711\n8899", "moves": ["3354\n6022\n6711\n0711\n8899", "3354\n6220\n6711\n0711\n8899"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0068.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["4", "6", "1", "3"], "answer": "3", "solution": {"start_position": "6033\n6220\n7115\n7114\n8899", "end_position": "0633\n7622\n7115\n0114\n8899", "moves": ["6033\n6220\n7115\n7114\n8899", "6033\n6022\n7115\n7114\n8899", "0633\n0622\n7115\n7114\n8899", "0633\n7622\n7115\n0114\n8899"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0069.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["1", "3", "4", "5"], "answer": "3", "solution": {"start_position": "4722\n0733\n0611\n5611\n8899", "end_position": "4722\n5733\n6011\n6011\n8899", "moves": ["4722\n0733\n0611\n5611\n8899", "4722\n0733\n5611\n0611\n8899", "4722\n5733\n0611\n0611\n8899", "4722\n5733\n6011\n6011\n8899"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0070.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["2", "6", "3", "5"], "answer": "2", "solution": {"start_position": "3354\n6022\n6711\n0711\n8899", "end_position": "3350\n6224\n6711\n0711\n8899", "moves": ["3354\n6022\n6711\n0711\n8899", "3354\n6220\n6711\n0711\n8899", "3350\n6224\n6711\n0711\n8899"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0071.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["1", "4", "5", "2"], "answer": "5", "solution": {"start_position": "2233\n6110\n6114\n7885\n7990", "end_position": "2233\n0611\n7611\n7884\n0995", "moves": ["2233\n6110\n6114\n7885\n7990", "2233\n6110\n6114\n7880\n7995", "2233\n6110\n6110\n7884\n7995", "2233\n6011\n6011\n7884\n7995", "2233\n0611\n0611\n7884\n7995", "2233\n0611\n7611\n7884\n0995"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0072.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["2", "4", "6", "1"], "answer": "2", "solution": {"start_position": "7022\n7633\n0611\n4511\n8899", "end_position": "0220\n7633\n7611\n4511\n8899", "moves": ["7022\n7633\n0611\n4511\n8899", "7220\n7633\n0611\n4511\n8899", "0220\n7633\n7611\n4511\n8899"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0073.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["3", "4", "6", "5"], "answer": "4", "solution": {"start_position": "5422\n0033\n6711\n6711\n8899", "end_position": "4722\n5733\n6011\n6011\n8899", "moves": ["5422\n0033\n6711\n6711\n8899", "5422\n0733\n6711\n6011\n8899", "0422\n5733\n6711\n6011\n8899", "4022\n5733\n6711\n6011\n8899", "4722\n5733\n6011\n6011\n8899"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0074.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["2", "6", "5", "4"], "answer": "5", "solution": {"start_position": "5040\n3322\n6711\n6711\n8899", "end_position": "3354\n6022\n6711\n0711\n8899", "moves": ["5040\n3322\n6711\n6711\n8899", "0540\n3322\n6711\n6711\n8899", "0504\n3322\n6711\n6711\n8899", "0054\n3322\n6711\n6711\n8899", "3354\n0022\n6711\n6711\n8899", "3354\n6022\n6711\n0711\n8899"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0075.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["6", "1", "3", "5"], "answer": "1", "solution": {"start_position": "7633\n7622\n1154\n1100\n8899", "end_position": "7633\n7622\n1150\n1104\n8899", "moves": ["7633\n7622\n1154\n1100\n8899", "7633\n7622\n1150\n1104\n8899"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0076.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["3", "1", "2", "6"], "answer": "2", "solution": {"start_position": "7022\n7633\n4611\n0511\n8899", "end_position": "7220\n7633\n0611\n4511\n8899", "moves": ["7022\n7633\n4611\n0511\n8899", "7022\n7633\n0611\n4511\n8899", "7220\n7633\n0611\n4511\n8899"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0077.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["3", "1", "4", "5"], "answer": "4", "solution": {"start_position": "2233\n6114\n6110\n7885\n7099", "end_position": "2233\n6110\n6110\n7884\n7995", "moves": ["2233\n6114\n6110\n7885\n7099", "2233\n6110\n6114\n7885\n7099", "2233\n6110\n6114\n7885\n7990", "2233\n6110\n6114\n7880\n7995", "2233\n6110\n6110\n7884\n7995"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0078.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["6", "5", "2", "1"], "answer": "2", "solution": {"start_position": "2233\n6110\n6114\n7885\n7990", "end_position": "2233\n6114\n6110\n7885\n7099", "moves": ["2233\n6110\n6114\n7885\n7990", "2233\n6110\n6114\n7885\n7099", "2233\n6114\n6110\n7885\n7099"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0079.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["5", "2", "4", "3"], "answer": "3", "solution": {"start_position": "2233\n0611\n0611\n7884\n7995", "end_position": "2233\n6110\n6114\n7880\n7995", "moves": ["2233\n0611\n0611\n7884\n7995", "2233\n6011\n6011\n7884\n7995", "2233\n6110\n6110\n7884\n7995", "2233\n6110\n6114\n7880\n7995"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0080.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["2", "1", "5", "4"], "answer": "4", "solution": {"start_position": "0633\n0622\n7115\n7114\n8899", "end_position": "6033\n6225\n7114\n7110\n8899", "moves": ["0633\n0622\n7115\n7114\n8899", "6033\n6022\n7115\n7114\n8899", "6033\n6220\n7115\n7114\n8899", "6033\n6225\n7110\n7114\n8899", "6033\n6225\n7114\n7110\n8899"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0081.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["1", "4", "5", "3"], "answer": "3", "solution": {"start_position": "2233\n7611\n7611\n8804\n0995", "end_position": "2233\n0611\n0611\n7884\n7995", "moves": ["2233\n7611\n7611\n8804\n0995", "2233\n7611\n7611\n0884\n0995", "2233\n0611\n7611\n7884\n0995", "2233\n0611\n0611\n7884\n7995"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0082.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["1", "5", "2", "3"], "answer": "2", "solution": {"start_position": "5422\n0733\n6711\n6011\n8899", "end_position": "4022\n5733\n6711\n6011\n8899", "moves": ["5422\n0733\n6711\n6011\n8899", "0422\n5733\n6711\n6011\n8899", "4022\n5733\n6711\n6011\n8899"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0083.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["1", "4", "3", "2"], "answer": "3", "solution": {"start_position": "6033\n6220\n7115\n7114\n8899", "end_position": "6330\n6225\n7114\n7110\n8899", "moves": ["6033\n6220\n7115\n7114\n8899", "6033\n6225\n7110\n7114\n8899", "6033\n6225\n7114\n7110\n8899", "6330\n6225\n7114\n7110\n8899"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0084.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["1", "4", "6", "3"], "answer": "3", "solution": {"start_position": "2200\n1133\n1145\n6788\n6799", "end_position": "2233\n1104\n1105\n6788\n6799", "moves": ["2200\n1133\n1145\n6788\n6799", "2233\n1100\n1145\n6788\n6799", "2233\n1140\n1105\n6788\n6799", "2233\n1104\n1105\n6788\n6799"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0085.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["2", "1", "5", "4"], "answer": "5", "solution": {"start_position": "2233\n6114\n6115\n0788\n0799", "end_position": "2233\n6110\n6114\n7885\n7990", "moves": ["2233\n6114\n6115\n0788\n0799", "2233\n6114\n6115\n7088\n7099", "2233\n6114\n6115\n7880\n7099", "2233\n6114\n6110\n7885\n7099", "2233\n6110\n6114\n7885\n7099", "2233\n6110\n6114\n7885\n7990"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0086.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["2", "6", "4", "3"], "answer": "4", "solution": {"start_position": "2200\n1133\n1145\n6788\n6799", "end_position": "1122\n1133\n0405\n6788\n6799", "moves": ["2200\n1133\n1145\n6788\n6799", "0220\n1133\n1145\n6788\n6799", "0022\n1133\n1145\n6788\n6799", "1122\n1133\n0045\n6788\n6799", "1122\n1133\n0405\n6788\n6799"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0087.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["4", "6", "1", "5"], "answer": "5", "solution": {"start_position": "0722\n4733\n0611\n5611\n8899", "end_position": "4022\n5733\n6711\n6011\n8899", "moves": ["0722\n4733\n0611\n5611\n8899", "4722\n0733\n0611\n5611\n8899", "4722\n0733\n5611\n0611\n8899", "4722\n5733\n0611\n0611\n8899", "4722\n5733\n6011\n6011\n8899", "4022\n5733\n6711\n6011\n8899"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0088.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["6", "3", "5", "1"], "answer": "1", "solution": {"start_position": "2200\n1133\n1145\n6788\n6799", "end_position": "2233\n1100\n1145\n6788\n6799", "moves": ["2200\n1133\n1145\n6788\n6799", "2233\n1100\n1145\n6788\n6799"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0089.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["4", "1", "6", "5"], "answer": "1", "solution": {"start_position": "2233\n7611\n7611\n0045\n8899", "end_position": "2233\n7611\n7611\n8845\n0099", "moves": ["2233\n7611\n7611\n0045\n8899", "2233\n7611\n7611\n8845\n0099"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0090.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["5", "6", "4", "1"], "answer": "5", "solution": {"start_position": "6033\n6022\n7115\n7114\n8899", "end_position": "6335\n6220\n7114\n7110\n8899", "moves": ["6033\n6022\n7115\n7114\n8899", "6033\n6220\n7115\n7114\n8899", "6033\n6225\n7110\n7114\n8899", "6033\n6225\n7114\n7110\n8899", "6330\n6225\n7114\n7110\n8899", "6335\n6220\n7114\n7110\n8899"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0091.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["2", "6", "3", "5"], "answer": "3", "solution": {"start_position": "2233\n7611\n7611\n0405\n8899", "end_position": "2233\n7611\n7611\n8845\n0990", "moves": ["2233\n7611\n7611\n0405\n8899", "2233\n7611\n7611\n0045\n8899", "2233\n7611\n7611\n8845\n0099", "2233\n7611\n7611\n8845\n0990"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0092.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["3", "4", "1", "2"], "answer": "3", "solution": {"start_position": "7633\n7622\n1154\n1199\n0088", "end_position": "7633\n7622\n1154\n1100\n8899", "moves": ["7633\n7622\n1154\n1199\n0088", "7633\n7622\n1154\n1199\n0880", "7633\n7622\n1154\n1199\n8800", "7633\n7622\n1154\n1100\n8899"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0093.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["6", "2", "4", "5"], "answer": "5", "solution": {"start_position": "6330\n6225\n7114\n7110\n8899", "end_position": "0633\n0622\n7115\n7114\n8899", "moves": ["6330\n6225\n7114\n7110\n8899", "6033\n6225\n7114\n7110\n8899", "6033\n6225\n7110\n7114\n8899", "6033\n6220\n7115\n7114\n8899", "6033\n6022\n7115\n7114\n8899", "0633\n0622\n7115\n7114\n8899"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0094.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["4", "6", "2", "1"], "answer": "2", "solution": {"start_position": "7022\n7033\n4611\n5611\n8899", "end_position": "7022\n7633\n4611\n0511\n8899", "moves": ["7022\n7033\n4611\n5611\n8899", "7022\n7633\n4611\n5011\n8899", "7022\n7633\n4611\n0511\n8899"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0095.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["5", "3", "2", "6"], "answer": "2", "solution": {"start_position": "2200\n1133\n1145\n6788\n6799", "end_position": "0022\n1133\n1145\n6788\n6799", "moves": ["2200\n1133\n1145\n6788\n6799", "0220\n1133\n1145\n6788\n6799", "0022\n1133\n1145\n6788\n6799"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0096.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["5", "4", "6", "2"], "answer": "5", "solution": {"start_position": "0722\n0733\n4611\n5611\n8899", "end_position": "7220\n7633\n0611\n4511\n8899", "moves": ["0722\n0733\n4611\n5611\n8899", "7022\n7033\n4611\n5611\n8899", "7022\n7633\n4611\n5011\n8899", "7022\n7633\n4611\n0511\n8899", "7022\n7633\n0611\n4511\n8899", "7220\n7633\n0611\n4511\n8899"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0097.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["4", "1", "3", "2"], "answer": "4", "solution": {"start_position": "3305\n6224\n6711\n0711\n8899", "end_position": "6335\n6224\n7110\n7110\n8899", "moves": ["3305\n6224\n6711\n0711\n8899", "0335\n6224\n6711\n0711\n8899", "6335\n6224\n0711\n0711\n8899", "6335\n6224\n7011\n7011\n8899", "6335\n6224\n7110\n7110\n8899"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0098.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["1", "2", "3", "4"], "answer": "2", "solution": {"start_position": "0722\n4733\n0611\n5611\n8899", "end_position": "4722\n0733\n5611\n0611\n8899", "moves": ["0722\n4733\n0611\n5611\n8899", "4722\n0733\n0611\n5611\n8899", "4722\n0733\n5611\n0611\n8899"]}, "source_file": "wood_slide.json"}
{"image": "images/wood_slide/wood_slide_0099.jpg", "question": "Consider a sliding block puzzle of grid size 5 * 4 units. It has 9 wooden blocks of varying sizes: one 2 * 2, four 1 * 2, two 2 * 1, and two 1 * 1. The gird also has two empty 1 * 1 spaces. The blocks cannot be removed from the grid, and may only be slid horizontally and vertically within its boundary. A move is defined as selecting a block that is slideable, and moving it by 1 unit either horizontally or vertically, whichever is possible. The image shows the starting and ending configurations of the puzzle grid. The wooden blocks are shown in various shades of brown and the empty spaces are shown in white. What is the minimum number of moves required to reach the ending configuration from the starting configuration?", "options": ["3", "5", "1", "4"], "answer": "3", "solution": {"start_position": "0633\n0622\n7115\n7114\n8899", "end_position": "7633\n7622\n1105\n1104\n8899", "moves": ["0633\n0622\n7115\n7114\n8899", "0633\n7622\n7115\n0114\n8899", "7633\n7622\n0115\n0114\n8899", "7633\n7622\n1105\n1104\n8899"]}, "source_file": "wood_slide.json"}
{"image": "images/move_box/move_box_0000.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["1", "4", "2", "5"], "answer": "4", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", "#", "#", ".", ".", "#"], ["#", ".", "B", ".", ".", "#"], ["#", ".", ".", ".", "S", "#"], ["#", ".", ".", ".", "T", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", "#", "#", ".", ".", "#"], ["#", ".", "S", "B", ".", "#"], ["#", ".", ".", ".", "", "#"], ["#", ".", ".", ".", "T", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", "#", "#", ".", ".", "#"], ["#", ".", "", "S", ".", "#"], ["#", ".", ".", "B", "", "#"], ["#", ".", ".", ".", "T", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_3": [["#", "#", "#", "#", "#", "#"], ["#", "#", "#", ".", ".", "#"], ["#", ".", "", ".", ".", "#"], ["#", ".", ".", "S", "", "#"], ["#", ".", ".", "B", "T", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_4": [["#", "#", "#", "#", "#", "#"], ["#", "#", "#", ".", ".", "#"], ["#", ".", "", ".", ".", "#"], ["#", ".", ".", ".", "", "#"], ["#", ".", ".", "S", "B", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [4, 4], "box_location": [[2, 2], [2, 3], [3, 3], [4, 3], [4, 4]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0001.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["2", "4", "3", "5"], "answer": "5", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", ".", "S", ".", "T", "#"], ["#", ".", ".", "#", ".", "#"], ["#", ".", ".", "B", ".", "#"], ["#", ".", ".", ".", "#", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", ".", "", ".", "T", "#"], ["#", ".", ".", "#", ".", "#"], ["#", ".", "B", "S", ".", "#"], ["#", ".", ".", ".", "#", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", ".", "", ".", "T", "#"], ["#", ".", "B", "#", ".", "#"], ["#", ".", "S", "", ".", "#"], ["#", ".", ".", ".", "#", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_3": [["#", "#", "#", "#", "#", "#"], ["#", ".", "B", ".", "T", "#"], ["#", ".", "S", "#", ".", "#"], ["#", ".", ".", "", ".", "#"], ["#", ".", ".", ".", "#", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_4": [["#", "#", "#", "#", "#", "#"], ["#", ".", "S", "B", "T", "#"], ["#", ".", ".", "#", ".", "#"], ["#", ".", ".", "", ".", "#"], ["#", ".", ".", ".", "#", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_5": [["#", "#", "#", "#", "#", "#"], ["#", ".", "", "S", "B", "#"], ["#", ".", ".", "#", ".", "#"], ["#", ".", ".", "", ".", "#"], ["#", ".", ".", ".", "#", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [1, 4], "box_location": [[3, 3], [3, 2], [2, 2], [1, 2], [1, 3], [1, 4]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0002.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["1", "2", "3", "5"], "answer": "2", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", "S", ".", ".", ".", "#"], ["#", ".", ".", "B", ".", "#"], ["#", ".", ".", ".", "T", "#"], ["#", ".", ".", "#", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", "", ".", ".", ".", "#"], ["#", ".", ".", "S", ".", "#"], ["#", ".", ".", "B", "T", "#"], ["#", ".", ".", "#", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", "", ".", ".", ".", "#"], ["#", ".", ".", "", ".", "#"], ["#", ".", ".", "S", "B", "#"], ["#", ".", ".", "#", ".", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [3, 4], "box_location": [[2, 3], [3, 3], [3, 4]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0003.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["1", "3", "2", "4"], "answer": "2", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", ".", "B", ".", "T", "#"], ["#", ".", "S", ".", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", ".", "S", "B", "T", "#"], ["#", ".", "", ".", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", ".", "", "S", "B", "#"], ["#", ".", "", ".", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [1, 4], "box_location": [[1, 2], [1, 3], [1, 4]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0004.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["5", "4", "2", "3"], "answer": "2", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "S", ".", "#"], ["#", "#", ".", ".", "B", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", ".", ".", "T", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "", ".", "#"], ["#", "#", ".", ".", "S", "#"], ["#", ".", ".", ".", "B", "#"], ["#", "#", ".", ".", "T", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "", ".", "#"], ["#", "#", ".", ".", "", "#"], ["#", ".", ".", ".", "S", "#"], ["#", "#", ".", ".", "B", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [4, 4], "box_location": [[2, 4], [3, 4], [4, 4]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0005.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["5", "3", "4", "1"], "answer": "5", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", "T", "#"], ["#", "#", "B", ".", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "S", ".", ".", "#", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", "T", "#"], ["#", "#", "S", ".", ".", "#"], ["#", ".", "B", ".", ".", "#"], ["#", "", ".", ".", "#", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", "T", "#"], ["#", "#", "", ".", ".", "#"], ["#", ".", "S", "B", ".", "#"], ["#", "", ".", ".", "#", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_3": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", "T", "#"], ["#", "#", "", "B", ".", "#"], ["#", ".", ".", "S", ".", "#"], ["#", "", ".", ".", "#", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_4": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "B", "T", "#"], ["#", "#", "", "S", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "", ".", ".", "#", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_5": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "S", "B", "#"], ["#", "#", "", ".", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "", ".", ".", "#", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [1, 4], "box_location": [[2, 2], [3, 2], [3, 3], [2, 3], [1, 3], [1, 4]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0006.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["4", "1", "5", "3"], "answer": "5", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "#", ".", "#"], ["#", ".", ".", "B", ".", "#"], ["#", ".", "S", ".", ".", "#"], ["#", ".", ".", ".", "T", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "#", ".", "#"], ["#", ".", "B", "S", ".", "#"], ["#", ".", "", ".", ".", "#"], ["#", ".", ".", ".", "T", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "#", ".", "#"], ["#", ".", "S", "", ".", "#"], ["#", ".", "B", ".", ".", "#"], ["#", ".", ".", ".", "T", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_3": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "#", ".", "#"], ["#", ".", ".", "", ".", "#"], ["#", ".", "S", ".", ".", "#"], ["#", ".", "B", ".", "T", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_4": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "#", ".", "#"], ["#", ".", ".", "", ".", "#"], ["#", ".", "", ".", ".", "#"], ["#", ".", "S", "B", "T", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_5": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "#", ".", "#"], ["#", ".", ".", "", ".", "#"], ["#", ".", "", ".", ".", "#"], ["#", ".", ".", "S", "B", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [4, 4], "box_location": [[2, 3], [2, 2], [3, 2], [4, 2], [4, 3], [4, 4]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0007.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["1", "2", "3", "4"], "answer": "4", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", "B", ".", "#", "#"], ["#", ".", "#", ".", ".", "#"], ["#", ".", "S", ".", "T", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", "S", "B", "#", "#"], ["#", ".", "#", ".", ".", "#"], ["#", ".", "", ".", "T", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", "", "S", "#", "#"], ["#", ".", "#", "B", ".", "#"], ["#", ".", "", ".", "T", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_3": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", "", ".", "#", "#"], ["#", ".", "#", "S", ".", "#"], ["#", ".", "", "B", "T", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_4": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", "", ".", "#", "#"], ["#", ".", "#", ".", ".", "#"], ["#", ".", "", "S", "B", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [4, 4], "box_location": [[2, 2], [2, 3], [3, 3], [4, 3], [4, 4]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0008.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["1", "4", "3", "5"], "answer": "5", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "#", "#", "#"], ["#", ".", ".", "B", ".", "#"], ["#", "S", ".", ".", ".", "#"], ["#", ".", ".", "#", "T", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "#", "#", "#"], ["#", ".", "B", "S", ".", "#"], ["#", "", ".", ".", ".", "#"], ["#", ".", ".", "#", "T", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "#", "#", "#"], ["#", ".", "S", "", ".", "#"], ["#", "", "B", ".", ".", "#"], ["#", ".", ".", "#", "T", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_3": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "#", "#", "#"], ["#", ".", ".", "", ".", "#"], ["#", "", "S", "B", ".", "#"], ["#", ".", ".", "#", "T", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_4": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "#", "#", "#"], ["#", ".", ".", "", ".", "#"], ["#", "", ".", "S", "B", "#"], ["#", ".", ".", "#", "T", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_5": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "#", "#", "#"], ["#", ".", ".", "", ".", "#"], ["#", "", ".", ".", "S", "#"], ["#", ".", ".", "#", "B", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [4, 4], "box_location": [[2, 3], [2, 2], [3, 2], [3, 3], [3, 4], [4, 4]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0009.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["2", "4", "1", "5"], "answer": "1", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", ".", "#", ".", ".", "#"], ["#", ".", "B", "T", ".", "#"], ["#", ".", ".", "#", ".", "#"], ["#", ".", "S", ".", "#", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", ".", "#", ".", ".", "#"], ["#", ".", "S", "B", ".", "#"], ["#", ".", ".", "#", ".", "#"], ["#", ".", "", ".", "#", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [2, 3], "box_location": [[2, 2], [2, 3]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0010.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["3", "1", "2", "4"], "answer": "3", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "T", ".", "#"], ["#", "S", ".", "#", ".", "#"], ["#", ".", "B", ".", "#", "#"], ["#", ".", ".", "#", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "T", ".", "#"], ["#", "", "B", "#", ".", "#"], ["#", ".", "S", ".", "#", "#"], ["#", ".", ".", "#", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", ".", "B", "T", ".", "#"], ["#", "", "S", "#", ".", "#"], ["#", ".", "", ".", "#", "#"], ["#", ".", ".", "#", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_3": [["#", "#", "#", "#", "#", "#"], ["#", ".", "S", "B", ".", "#"], ["#", "", ".", "#", ".", "#"], ["#", ".", "", ".", "#", "#"], ["#", ".", ".", "#", ".", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [1, 3], "box_location": [[3, 2], [2, 2], [1, 2], [1, 3]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0011.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["1", "4", "2", "3"], "answer": "1", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "#", "#", "#"], ["#", "#", "S", ".", ".", "#"], ["#", "T", "B", ".", ".", "#"], ["#", ".", "#", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "#", "#", "#"], ["#", "#", "", ".", ".", "#"], ["#", "B", "S", ".", ".", "#"], ["#", ".", "#", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [3, 1], "box_location": [[3, 2], [3, 1]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0012.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["5", "3", "4", "2"], "answer": "4", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", ".", "S", ".", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", ".", "B", "#", "#"], ["#", ".", "T", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", ".", "", ".", ".", "#"], ["#", ".", ".", "B", ".", "#"], ["#", ".", ".", "S", "#", "#"], ["#", ".", "T", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", ".", "", ".", ".", "#"], ["#", ".", "B", "S", ".", "#"], ["#", ".", ".", "", "#", "#"], ["#", ".", "T", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_3": [["#", "#", "#", "#", "#", "#"], ["#", ".", "", ".", ".", "#"], ["#", ".", "S", ".", ".", "#"], ["#", ".", "B", "", "#", "#"], ["#", ".", "T", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_4": [["#", "#", "#", "#", "#", "#"], ["#", ".", "", ".", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", "S", "", "#", "#"], ["#", ".", "B", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [4, 2], "box_location": [[3, 3], [2, 3], [2, 2], [3, 2], [4, 2]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0013.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["2", "5", "3", "1"], "answer": "2", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "T", ".", "B", "S", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "T", "B", "S", "", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "B", "S", "", "", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [4, 1], "box_location": [[4, 3], [4, 2], [4, 1]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0014.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["2", "4", "5", "1"], "answer": "5", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", "T", ".", "S", ".", "#"], ["#", ".", ".", "B", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", "T", ".", "", ".", "#"], ["#", ".", ".", "S", "#", "#"], ["#", ".", ".", "B", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", "T", ".", "", ".", "#"], ["#", ".", ".", "", "#", "#"], ["#", ".", "B", "S", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_3": [["#", "#", "#", "#", "#", "#"], ["#", "T", ".", "", ".", "#"], ["#", ".", "B", "", "#", "#"], ["#", ".", "S", ".", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_4": [["#", "#", "#", "#", "#", "#"], ["#", "T", "B", "", ".", "#"], ["#", ".", "S", "", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_5": [["#", "#", "#", "#", "#", "#"], ["#", "B", "S", "", ".", "#"], ["#", ".", ".", "", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [1, 1], "box_location": [[2, 3], [3, 3], [3, 2], [2, 2], [1, 2], [1, 1]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0015.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["3", "1", "4", "5"], "answer": "1", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", "#", ".", ".", ".", "#"], ["#", "#", "T", "B", ".", "#"], ["#", ".", "S", ".", ".", "#"], ["#", ".", ".", ".", "#", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", "#", ".", ".", ".", "#"], ["#", "#", "B", "S", ".", "#"], ["#", ".", "", ".", ".", "#"], ["#", ".", ".", ".", "#", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [2, 2], "box_location": [[2, 3], [2, 2]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0016.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["1", "2", "5", "4"], "answer": "2", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", ".", ".", "#", "#"], ["#", ".", ".", "B", "S", "#"], ["#", ".", "T", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", ".", ".", "#", "#"], ["#", ".", ".", "S", "", "#"], ["#", ".", "T", "B", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", ".", ".", "#", "#"], ["#", ".", ".", "", "", "#"], ["#", ".", "B", "S", ".", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [4, 2], "box_location": [[3, 3], [4, 3], [4, 2]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0017.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["4", "5", "2", "1"], "answer": "5", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", "#", ".", ".", ".", "#"], ["#", "S", ".", ".", ".", "#"], ["#", ".", ".", "B", "#", "#"], ["#", "T", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", "#", ".", ".", ".", "#"], ["#", "", ".", "B", ".", "#"], ["#", ".", ".", "S", "#", "#"], ["#", "T", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", "#", ".", ".", ".", "#"], ["#", "", "B", "S", ".", "#"], ["#", ".", ".", "", "#", "#"], ["#", "T", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_3": [["#", "#", "#", "#", "#", "#"], ["#", "#", ".", ".", ".", "#"], ["#", "", "S", ".", ".", "#"], ["#", ".", "B", "", "#", "#"], ["#", "T", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_4": [["#", "#", "#", "#", "#", "#"], ["#", "#", ".", ".", ".", "#"], ["#", "", ".", ".", ".", "#"], ["#", ".", "S", "", "#", "#"], ["#", "T", "B", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_5": [["#", "#", "#", "#", "#", "#"], ["#", "#", ".", ".", ".", "#"], ["#", "", ".", ".", ".", "#"], ["#", ".", ".", "", "#", "#"], ["#", "B", "S", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [4, 1], "box_location": [[3, 3], [2, 3], [2, 2], [3, 2], [4, 2], [4, 1]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0018.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["1", "3", "2", "4"], "answer": "1", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", "#", ".", ".", ".", "#"], ["#", ".", ".", "#", "#", "#"], ["#", ".", "#", ".", ".", "#"], ["#", "T", "B", "S", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", "#", ".", ".", ".", "#"], ["#", ".", ".", "#", "#", "#"], ["#", ".", "#", ".", ".", "#"], ["#", "B", "S", "", ".", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [4, 1], "box_location": [[4, 2], [4, 1]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0019.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["1", "5", "4", "3"], "answer": "4", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", "B", ".", "S", "#"], ["#", ".", ".", "#", ".", "#"], ["#", ".", ".", ".", "T", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", "S", ".", "", "#"], ["#", ".", "B", "#", ".", "#"], ["#", ".", ".", ".", "T", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", "", ".", "", "#"], ["#", ".", "S", "#", ".", "#"], ["#", ".", "B", ".", "T", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_3": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", "", ".", "", "#"], ["#", ".", ".", "#", ".", "#"], ["#", ".", "S", "B", "T", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_4": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", "", ".", "", "#"], ["#", ".", ".", "#", ".", "#"], ["#", ".", ".", "S", "B", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [4, 4], "box_location": [[2, 2], [3, 2], [4, 2], [4, 3], [4, 4]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0020.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["2", "3", "4", "5"], "answer": "4", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", "S", ".", ".", "T", "#"], ["#", "#", ".", ".", ".", "#"], ["#", ".", "B", ".", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", "", ".", ".", "T", "#"], ["#", "#", ".", ".", ".", "#"], ["#", ".", "S", "B", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", "", ".", ".", "T", "#"], ["#", "#", ".", "B", ".", "#"], ["#", ".", "", "S", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_3": [["#", "#", "#", "#", "#", "#"], ["#", "", ".", "B", "T", "#"], ["#", "#", ".", "S", ".", "#"], ["#", ".", "", ".", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_4": [["#", "#", "#", "#", "#", "#"], ["#", "", ".", "S", "B", "#"], ["#", "#", ".", ".", ".", "#"], ["#", ".", "", ".", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [1, 4], "box_location": [[3, 2], [3, 3], [2, 3], [1, 3], [1, 4]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0021.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["3", "4", "2", "1"], "answer": "4", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "#", ".", "#"], ["#", ".", ".", "B", ".", "#"], ["#", ".", ".", ".", "T", "#"], ["#", ".", ".", ".", "S", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "#", ".", "#"], ["#", ".", "B", "S", ".", "#"], ["#", ".", ".", ".", "T", "#"], ["#", ".", ".", ".", "", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "#", ".", "#"], ["#", ".", "S", "", ".", "#"], ["#", ".", "B", ".", "T", "#"], ["#", ".", ".", ".", "", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_3": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "#", ".", "#"], ["#", ".", ".", "", ".", "#"], ["#", ".", "S", "B", "T", "#"], ["#", ".", ".", ".", "", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_4": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "#", ".", "#"], ["#", ".", ".", "", ".", "#"], ["#", ".", ".", "S", "B", "#"], ["#", ".", ".", ".", "", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [3, 4], "box_location": [[2, 3], [2, 2], [3, 2], [3, 3], [3, 4]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0022.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["3", "1", "2", "4"], "answer": "2", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "B", ".", "#", ".", "#"], ["#", ".", ".", ".", "S", "#"], ["#", "T", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "S", ".", "#", ".", "#"], ["#", "B", ".", ".", "", "#"], ["#", "T", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "", ".", "#", ".", "#"], ["#", "S", ".", ".", "", "#"], ["#", "B", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [4, 1], "box_location": [[2, 1], [3, 1], [4, 1]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0023.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["3", "2", "4", "5"], "answer": "5", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", ".", "#", ".", ".", "#"], ["#", "S", "B", ".", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "T", "#", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", ".", "#", ".", ".", "#"], ["#", "", "S", "B", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "T", "#", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", ".", "#", ".", ".", "#"], ["#", "", "", "S", ".", "#"], ["#", ".", ".", "B", ".", "#"], ["#", "T", "#", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_3": [["#", "#", "#", "#", "#", "#"], ["#", ".", "#", ".", ".", "#"], ["#", "", "", ".", ".", "#"], ["#", ".", "B", "S", ".", "#"], ["#", "T", "#", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_4": [["#", "#", "#", "#", "#", "#"], ["#", ".", "#", ".", ".", "#"], ["#", "", "", ".", ".", "#"], ["#", "B", "S", ".", ".", "#"], ["#", "T", "#", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_5": [["#", "#", "#", "#", "#", "#"], ["#", ".", "#", ".", ".", "#"], ["#", "", "", ".", ".", "#"], ["#", "S", ".", ".", ".", "#"], ["#", "B", "#", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [4, 1], "box_location": [[2, 2], [2, 3], [3, 3], [3, 2], [3, 1], [4, 1]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0024.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["4", "3", "2", "1"], "answer": "3", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", "S", "#"], ["#", ".", ".", ".", "T", "#"], ["#", ".", "B", "#", ".", "#"], ["#", "#", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", "", "#"], ["#", ".", "B", ".", "T", "#"], ["#", ".", "S", "#", ".", "#"], ["#", "#", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", "", "#"], ["#", ".", "S", "B", "T", "#"], ["#", ".", "", "#", ".", "#"], ["#", "#", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_3": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", "", "#"], ["#", ".", ".", "S", "B", "#"], ["#", ".", "", "#", ".", "#"], ["#", "#", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [2, 4], "box_location": [[3, 2], [2, 2], [2, 3], [2, 4]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0025.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["5", "4", "3", "1"], "answer": "5", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", "T", ".", ".", ".", "#"], ["#", "#", ".", ".", ".", "#"], ["#", "S", "B", ".", ".", "#"], ["#", "#", "#", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", "T", ".", ".", ".", "#"], ["#", "#", ".", ".", ".", "#"], ["#", "", "S", "B", ".", "#"], ["#", "#", "#", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", "T", ".", ".", ".", "#"], ["#", "#", ".", "B", ".", "#"], ["#", "", "", "S", ".", "#"], ["#", "#", "#", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_3": [["#", "#", "#", "#", "#", "#"], ["#", "T", ".", "B", ".", "#"], ["#", "#", ".", "S", ".", "#"], ["#", "", "", ".", ".", "#"], ["#", "#", "#", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_4": [["#", "#", "#", "#", "#", "#"], ["#", "T", "B", "S", ".", "#"], ["#", "#", ".", ".", ".", "#"], ["#", "", "", ".", ".", "#"], ["#", "#", "#", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_5": [["#", "#", "#", "#", "#", "#"], ["#", "B", "S", ".", ".", "#"], ["#", "#", ".", ".", ".", "#"], ["#", "", "", ".", ".", "#"], ["#", "#", "#", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [1, 1], "box_location": [[3, 2], [3, 3], [2, 3], [1, 3], [1, 2], [1, 1]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0026.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["4", "1", "3", "2"], "answer": "3", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", "T", "#"], ["#", ".", "B", ".", "S", "#"], ["#", ".", ".", "#", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", ".", "B", ".", "T", "#"], ["#", ".", "S", ".", "", "#"], ["#", ".", ".", "#", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", ".", "S", "B", "T", "#"], ["#", ".", "", ".", "", "#"], ["#", ".", ".", "#", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_3": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "S", "B", "#"], ["#", ".", "", ".", "", "#"], ["#", ".", ".", "#", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [1, 4], "box_location": [[2, 2], [1, 2], [1, 3], [1, 4]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0027.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["5", "3", "2", "4"], "answer": "2", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", ".", "#", ".", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "S", "#", "B", ".", "#"], ["#", ".", "T", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", ".", "#", ".", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "", "#", "S", ".", "#"], ["#", ".", "T", "B", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", ".", "#", ".", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "", "#", "", ".", "#"], ["#", ".", "B", "S", ".", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [4, 2], "box_location": [[3, 3], [4, 3], [4, 2]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0028.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["4", "1", "5", "3"], "answer": "5", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", ".", ".", ".", "#"], ["#", ".", ".", "B", "#", "#"], ["#", "T", "S", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", ".", "B", ".", "#"], ["#", ".", ".", "S", "#", "#"], ["#", "T", "", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "B", "S", ".", "#"], ["#", ".", ".", "", "#", "#"], ["#", "T", "", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_3": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "S", ".", ".", "#"], ["#", ".", "B", "", "#", "#"], ["#", "T", "", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_4": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", ".", ".", ".", "#"], ["#", ".", "S", "", "#", "#"], ["#", "T", "B", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_5": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", ".", ".", ".", "#"], ["#", ".", ".", "", "#", "#"], ["#", "B", "S", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [4, 1], "box_location": [[3, 3], [2, 3], [2, 2], [3, 2], [4, 2], [4, 1]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0029.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["3", "1", "4", "2"], "answer": "3", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", "T", ".", ".", "#", "#"], ["#", "#", ".", ".", ".", "#"], ["#", ".", "B", ".", ".", "#"], ["#", "S", ".", "#", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", "T", ".", ".", "#", "#"], ["#", "#", "B", ".", ".", "#"], ["#", ".", "S", ".", ".", "#"], ["#", "", ".", "#", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", "T", "B", ".", "#", "#"], ["#", "#", "S", ".", ".", "#"], ["#", ".", "", ".", ".", "#"], ["#", "", ".", "#", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_3": [["#", "#", "#", "#", "#", "#"], ["#", "B", "S", ".", "#", "#"], ["#", "#", ".", ".", ".", "#"], ["#", ".", "", ".", ".", "#"], ["#", "", ".", "#", ".", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [1, 1], "box_location": [[3, 2], [2, 2], [1, 2], [1, 1]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0030.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["5", "1", "4", "3"], "answer": "1", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "#", "#", "#"], ["#", ".", ".", "B", "T", "#"], ["#", ".", "S", ".", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "#", "#", "#"], ["#", ".", ".", "S", "B", "#"], ["#", ".", "", ".", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [2, 4], "box_location": [[2, 3], [2, 4]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0031.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["1", "2", "5", "4"], "answer": "1", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", "T", ".", ".", ".", "#"], ["#", "B", ".", ".", ".", "#"], ["#", ".", ".", "#", ".", "#"], ["#", ".", ".", "S", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", "B", ".", ".", ".", "#"], ["#", "S", ".", ".", ".", "#"], ["#", ".", ".", "#", ".", "#"], ["#", ".", ".", "", ".", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [1, 1], "box_location": [[2, 1], [1, 1]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0032.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["3", "2", "1", "5"], "answer": "5", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "S", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", "#", "B", "#", "#"], ["#", "T", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "", ".", "#"], ["#", ".", ".", "B", ".", "#"], ["#", ".", "#", "S", "#", "#"], ["#", "T", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "", ".", "#"], ["#", ".", "B", "S", ".", "#"], ["#", ".", "#", "", "#", "#"], ["#", "T", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_3": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "", ".", "#"], ["#", "B", "S", ".", ".", "#"], ["#", ".", "#", "", "#", "#"], ["#", "T", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_4": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "", ".", "#"], ["#", "S", ".", ".", ".", "#"], ["#", "B", "#", "", "#", "#"], ["#", "T", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_5": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "S", "#", "", "#", "#"], ["#", "B", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [4, 1], "box_location": [[3, 3], [2, 3], [2, 2], [2, 1], [3, 1], [4, 1]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0033.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["4", "2", "3", "1"], "answer": "3", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", "#", ".", "#", "T", "#"], ["#", ".", "B", ".", ".", "#"], ["#", ".", ".", "S", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", "#", ".", "#", "T", "#"], ["#", ".", "S", "B", ".", "#"], ["#", ".", ".", "", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", "#", ".", "#", "T", "#"], ["#", ".", "", "S", "B", "#"], ["#", ".", ".", "", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_3": [["#", "#", "#", "#", "#", "#"], ["#", "#", ".", "#", "B", "#"], ["#", ".", "", ".", "S", "#"], ["#", ".", ".", "", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [1, 4], "box_location": [[2, 2], [2, 3], [2, 4], [1, 4]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0034.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["4", "5", "1", "2"], "answer": "1", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", "#", ".", ".", ".", "#"], ["#", "#", ".", "T", "#", "#"], ["#", "#", "#", "B", "#", "#"], ["#", ".", "S", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", "#", ".", ".", ".", "#"], ["#", "#", ".", "B", "#", "#"], ["#", "#", "#", "S", "#", "#"], ["#", ".", "", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [2, 3], "box_location": [[3, 3], [2, 3]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0035.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["3", "1", "2", "5"], "answer": "5", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", ".", "B", ".", "#"], ["#", ".", ".", "#", "#", "#"], ["#", ".", "S", ".", "T", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", "B", "S", ".", "#"], ["#", ".", ".", "#", "#", "#"], ["#", ".", "", ".", "T", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", "S", "", ".", "#"], ["#", ".", "B", "#", "#", "#"], ["#", ".", "", ".", "T", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_3": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", ".", "", ".", "#"], ["#", ".", "S", "#", "#", "#"], ["#", ".", "B", ".", "T", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_4": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", ".", "", ".", "#"], ["#", ".", ".", "#", "#", "#"], ["#", ".", "S", "B", "T", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_5": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", ".", "", ".", "#"], ["#", ".", ".", "#", "#", "#"], ["#", ".", "", "S", "B", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [4, 4], "box_location": [[2, 3], [2, 2], [3, 2], [4, 2], [4, 3], [4, 4]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0036.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["4", "2", "1", "5"], "answer": "5", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", "T", "#"], ["#", "#", "B", ".", "S", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", ".", ".", "#", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", "T", "#"], ["#", "#", "S", ".", "", "#"], ["#", ".", "B", ".", ".", "#"], ["#", ".", ".", ".", "#", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", "T", "#"], ["#", "#", "", ".", "", "#"], ["#", ".", "S", "B", ".", "#"], ["#", ".", ".", ".", "#", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_3": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", "T", "#"], ["#", "#", "", "B", "", "#"], ["#", ".", ".", "S", ".", "#"], ["#", ".", ".", ".", "#", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_4": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "B", "T", "#"], ["#", "#", "", "S", "", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", ".", ".", "#", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_5": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "S", "B", "#"], ["#", "#", "", ".", "", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", ".", ".", "#", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [1, 4], "box_location": [[2, 2], [3, 2], [3, 3], [2, 3], [1, 3], [1, 4]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0037.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["4", "2", "1", "3"], "answer": "2", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", ".", "T", ".", ".", "#"], ["#", ".", ".", "B", ".", "#"], ["#", ".", "#", ".", ".", "#"], ["#", ".", "#", "S", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", ".", "T", "B", ".", "#"], ["#", ".", ".", "S", ".", "#"], ["#", ".", "#", ".", ".", "#"], ["#", ".", "#", "", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", ".", "B", "S", ".", "#"], ["#", ".", ".", "", ".", "#"], ["#", ".", "#", ".", ".", "#"], ["#", ".", "#", "", ".", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [1, 2], "box_location": [[2, 3], [1, 3], [1, 2]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0038.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["4", "1", "5", "2"], "answer": "1", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", ".", "#", ".", "#", "#"], ["#", "S", "T", "B", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", ".", "#", ".", "#", "#"], ["#", "", "B", "S", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [2, 2], "box_location": [[2, 3], [2, 2]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0039.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["4", "2", "3", "1"], "answer": "4", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", "T", "#"], ["#", "#", ".", ".", ".", "#"], ["#", ".", "B", "S", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", "T", "#"], ["#", "#", ".", ".", ".", "#"], ["#", ".", "S", "B", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", "T", "#"], ["#", "#", ".", "B", ".", "#"], ["#", ".", "", "S", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_3": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "B", "T", "#"], ["#", "#", ".", "S", ".", "#"], ["#", ".", "", "", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_4": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "S", "B", "#"], ["#", "#", ".", ".", ".", "#"], ["#", ".", "", "", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [1, 4], "box_location": [[3, 2], [3, 3], [2, 3], [1, 3], [1, 4]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0040.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["5", "3", "2", "1"], "answer": "2", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", "B", ".", "S", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", "T", ".", "#", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", "S", ".", "", "#"], ["#", ".", "B", ".", ".", "#"], ["#", ".", "T", ".", "#", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", "", ".", "", "#"], ["#", ".", "S", ".", ".", "#"], ["#", ".", "B", ".", "#", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [4, 2], "box_location": [[2, 2], [3, 2], [4, 2]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0041.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["5", "3", "4", "2"], "answer": "3", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", "B", ".", ".", "#"], ["#", ".", "#", ".", ".", "#"], ["#", "T", ".", ".", "S", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "B", "S", ".", ".", "#"], ["#", ".", "#", ".", ".", "#"], ["#", "T", ".", ".", "", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "S", "", ".", ".", "#"], ["#", "B", "#", ".", ".", "#"], ["#", "T", ".", ".", "", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_3": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", "", ".", ".", "#"], ["#", "S", "#", ".", ".", "#"], ["#", "B", ".", ".", "", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [4, 1], "box_location": [[2, 2], [2, 1], [3, 1], [4, 1]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0042.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["5", "1", "2", "3"], "answer": "2", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", "T", ".", ".", ".", "#"], ["#", "S", "B", ".", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", "T", "B", ".", ".", "#"], ["#", "", "S", ".", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", "B", "S", ".", ".", "#"], ["#", "", "", ".", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [1, 1], "box_location": [[2, 2], [1, 2], [1, 1]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0043.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["1", "5", "4", "3"], "answer": "3", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", "S", ".", "#", "#", "#"], ["#", ".", ".", ".", "T", "#"], ["#", ".", "B", ".", "#", "#"], ["#", "#", ".", ".", "#", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", "", ".", "#", "#", "#"], ["#", ".", "B", ".", "T", "#"], ["#", ".", "S", ".", "#", "#"], ["#", "#", ".", ".", "#", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", "", ".", "#", "#", "#"], ["#", ".", "S", "B", "T", "#"], ["#", ".", "", ".", "#", "#"], ["#", "#", ".", ".", "#", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_3": [["#", "#", "#", "#", "#", "#"], ["#", "", ".", "#", "#", "#"], ["#", ".", ".", "S", "B", "#"], ["#", ".", "", ".", "#", "#"], ["#", "#", ".", ".", "#", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [2, 4], "box_location": [[3, 2], [2, 2], [2, 3], [2, 4]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0044.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["1", "3", "5", "2"], "answer": "2", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", "S", "T", ".", ".", "#"], ["#", "#", "#", "B", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", ".", ".", "#", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", "", "T", "B", ".", "#"], ["#", "#", "#", "S", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", ".", ".", "#", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", "", "B", "S", ".", "#"], ["#", "#", "#", "", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", ".", ".", "#", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [1, 2], "box_location": [[2, 3], [1, 3], [1, 2]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0045.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["3", "1", "2", "5"], "answer": "5", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", "T", ".", ".", ".", "#"], ["#", "S", ".", ".", ".", "#"], ["#", ".", "B", ".", ".", "#"], ["#", ".", "#", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", "T", ".", ".", ".", "#"], ["#", "", ".", ".", ".", "#"], ["#", ".", "S", "B", ".", "#"], ["#", ".", "#", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", "T", ".", ".", ".", "#"], ["#", "", ".", "B", ".", "#"], ["#", ".", "", "S", ".", "#"], ["#", ".", "#", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_3": [["#", "#", "#", "#", "#", "#"], ["#", "T", ".", "B", ".", "#"], ["#", "", ".", "S", ".", "#"], ["#", ".", "", ".", ".", "#"], ["#", ".", "#", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_4": [["#", "#", "#", "#", "#", "#"], ["#", "T", "B", "S", ".", "#"], ["#", "", ".", ".", ".", "#"], ["#", ".", "", ".", ".", "#"], ["#", ".", "#", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_5": [["#", "#", "#", "#", "#", "#"], ["#", "B", "S", ".", ".", "#"], ["#", "", ".", ".", ".", "#"], ["#", ".", "", ".", ".", "#"], ["#", ".", "#", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [1, 1], "box_location": [[3, 2], [3, 3], [2, 3], [1, 3], [1, 2], [1, 1]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0046.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["3", "4", "2", "1"], "answer": "3", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "#", ".", "#"], ["#", ".", "S", "#", "#", "#"], ["#", ".", ".", "B", ".", "#"], ["#", "T", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "#", ".", "#"], ["#", ".", "", "#", "#", "#"], ["#", ".", "B", "S", ".", "#"], ["#", "T", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "#", ".", "#"], ["#", ".", "", "#", "#", "#"], ["#", ".", "S", "", ".", "#"], ["#", "T", "B", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_3": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "#", ".", "#"], ["#", ".", "", "#", "#", "#"], ["#", ".", ".", "", ".", "#"], ["#", "B", "S", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [4, 1], "box_location": [[3, 3], [3, 2], [4, 2], [4, 1]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0047.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["3", "2", "1", "4"], "answer": "1", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", ".", ".", ".", "#"], ["#", ".", ".", "B", "S", "#"], ["#", ".", ".", "T", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", ".", ".", ".", "#"], ["#", ".", ".", "S", "", "#"], ["#", ".", ".", "B", ".", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [4, 3], "box_location": [[3, 3], [4, 3]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0048.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["5", "1", "4", "3"], "answer": "4", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", ".", "#", ".", "S", "#"], ["#", ".", "B", ".", ".", "#"], ["#", "T", ".", ".", ".", "#"], ["#", ".", "#", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", ".", "#", ".", "", "#"], ["#", ".", "S", "B", ".", "#"], ["#", "T", ".", ".", ".", "#"], ["#", ".", "#", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", ".", "#", ".", "", "#"], ["#", ".", "", "S", ".", "#"], ["#", "T", ".", "B", ".", "#"], ["#", ".", "#", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_3": [["#", "#", "#", "#", "#", "#"], ["#", ".", "#", ".", "", "#"], ["#", ".", "", ".", ".", "#"], ["#", "T", "B", "S", ".", "#"], ["#", ".", "#", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_4": [["#", "#", "#", "#", "#", "#"], ["#", ".", "#", ".", "", "#"], ["#", ".", "", ".", ".", "#"], ["#", "B", "S", ".", ".", "#"], ["#", ".", "#", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [3, 1], "box_location": [[2, 2], [2, 3], [3, 3], [3, 2], [3, 1]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0049.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["2", "3", "1", "4"], "answer": "2", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", "T", "#"], ["#", ".", ".", "B", "#", "#"], ["#", "S", "#", ".", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "B", "T", "#"], ["#", ".", ".", "S", "#", "#"], ["#", "", "#", ".", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "S", "B", "#"], ["#", ".", ".", "", "#", "#"], ["#", "", "#", ".", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [1, 4], "box_location": [[2, 3], [1, 3], [1, 4]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0050.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["4", "5", "1", "2"], "answer": "5", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "#", ".", "#"], ["#", ".", ".", "B", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", "S", ".", "T", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "#", ".", "#"], ["#", ".", "B", "S", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", "", ".", "T", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "#", ".", "#"], ["#", ".", "S", "", ".", "#"], ["#", ".", "B", ".", ".", "#"], ["#", ".", "", ".", "T", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_3": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "#", ".", "#"], ["#", ".", ".", "", ".", "#"], ["#", ".", "S", ".", ".", "#"], ["#", ".", "B", ".", "T", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_4": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "#", ".", "#"], ["#", ".", ".", "", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", "S", "B", "T", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_5": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "#", ".", "#"], ["#", ".", ".", "", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", "", "S", "B", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [4, 4], "box_location": [[2, 3], [2, 2], [3, 2], [4, 2], [4, 3], [4, 4]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0051.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["2", "1", "3", "5"], "answer": "3", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", "T", ".", ".", ".", "#"], ["#", "S", ".", "#", ".", "#"], ["#", ".", "B", "#", ".", "#"], ["#", "#", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", "T", ".", ".", ".", "#"], ["#", "", "B", "#", ".", "#"], ["#", ".", "S", "#", ".", "#"], ["#", "#", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", "T", "B", ".", ".", "#"], ["#", "", "S", "#", ".", "#"], ["#", ".", "", "#", ".", "#"], ["#", "#", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_3": [["#", "#", "#", "#", "#", "#"], ["#", "B", "S", ".", ".", "#"], ["#", "", ".", "#", ".", "#"], ["#", ".", "", "#", ".", "#"], ["#", "#", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [1, 1], "box_location": [[3, 2], [2, 2], [1, 2], [1, 1]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0052.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["1", "2", "3", "5"], "answer": "1", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "B", "T", "#"], ["#", ".", ".", "#", "#", "#"], ["#", ".", ".", "S", "#", "#"], ["#", ".", "#", ".", "#", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "S", "B", "#"], ["#", ".", ".", "#", "#", "#"], ["#", ".", ".", "", "#", "#"], ["#", ".", "#", ".", "#", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [1, 4], "box_location": [[1, 3], [1, 4]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0053.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["2", "3", "4", "1"], "answer": "3", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", ".", "B", ".", "#"], ["#", "T", ".", ".", "#", "#"], ["#", ".", "S", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", "B", "S", ".", "#"], ["#", "T", ".", ".", "#", "#"], ["#", ".", "", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", "S", "", ".", "#"], ["#", "T", "B", ".", "#", "#"], ["#", ".", "", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_3": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", ".", "", ".", "#"], ["#", "B", "S", ".", "#", "#"], ["#", ".", "", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [3, 1], "box_location": [[2, 3], [2, 2], [3, 2], [3, 1]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0054.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["4", "1", "5", "3"], "answer": "3", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", "S", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", "T", "B", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", "", "#"], ["#", ".", ".", "B", ".", "#"], ["#", ".", "T", "S", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", "", "#"], ["#", ".", "B", "S", ".", "#"], ["#", ".", "T", "", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_3": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", "", "#"], ["#", ".", "S", ".", ".", "#"], ["#", ".", "B", "", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [3, 2], "box_location": [[3, 3], [2, 3], [2, 2], [3, 2]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0055.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["4", "2", "3", "5"], "answer": "4", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "#", ".", "#"], ["#", ".", ".", "B", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "T", "S", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "#", ".", "#"], ["#", ".", "B", "S", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "T", "", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "#", ".", "#"], ["#", ".", "S", "", ".", "#"], ["#", ".", "B", ".", ".", "#"], ["#", "T", "", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_3": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "#", ".", "#"], ["#", ".", ".", "", ".", "#"], ["#", ".", "S", ".", ".", "#"], ["#", "T", "B", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_4": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "#", ".", "#"], ["#", ".", ".", "", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "B", "S", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [4, 1], "box_location": [[2, 3], [2, 2], [3, 2], [4, 2], [4, 1]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0056.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["4", "5", "3", "1"], "answer": "3", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", ".", "S", ".", ".", "#"], ["#", ".", ".", "B", ".", "#"], ["#", "T", ".", ".", ".", "#"], ["#", "#", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", ".", "", ".", ".", "#"], ["#", ".", ".", "S", ".", "#"], ["#", "T", ".", "B", ".", "#"], ["#", "#", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", ".", "", ".", ".", "#"], ["#", ".", ".", "", ".", "#"], ["#", "T", "B", "S", ".", "#"], ["#", "#", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_3": [["#", "#", "#", "#", "#", "#"], ["#", ".", "", ".", ".", "#"], ["#", ".", ".", "", ".", "#"], ["#", "B", "S", ".", ".", "#"], ["#", "#", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [3, 1], "box_location": [[2, 3], [3, 3], [3, 2], [3, 1]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0057.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["5", "4", "3", "1"], "answer": "4", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", "B", ".", "S", "#"], ["#", "#", ".", ".", ".", "#"], ["#", ".", ".", ".", "T", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", "S", "B", "", "#"], ["#", "#", ".", ".", ".", "#"], ["#", ".", ".", ".", "T", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", "", "S", "", "#"], ["#", "#", ".", "B", ".", "#"], ["#", ".", ".", ".", "T", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_3": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", "", ".", "", "#"], ["#", "#", ".", "S", ".", "#"], ["#", ".", ".", "B", "T", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_4": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", "", ".", "", "#"], ["#", "#", ".", ".", ".", "#"], ["#", ".", ".", "S", "B", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [4, 4], "box_location": [[2, 2], [2, 3], [3, 3], [4, 3], [4, 4]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0058.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["4", "2", "3", "5"], "answer": "2", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "T", ".", "#"], ["#", ".", "#", "S", ".", "#"], ["#", "#", "#", "B", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "T", ".", "#"], ["#", ".", "#", "B", ".", "#"], ["#", "#", "#", "S", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "B", ".", "#"], ["#", ".", "#", "S", ".", "#"], ["#", "#", "#", "", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [1, 3], "box_location": [[3, 3], [2, 3], [1, 3]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0059.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["3", "2", "1", "4"], "answer": "4", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", ".", "S", "#", ".", "#"], ["#", ".", ".", "B", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "T", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", ".", "", "#", ".", "#"], ["#", ".", "B", "S", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "T", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", ".", "", "#", ".", "#"], ["#", ".", "S", "", ".", "#"], ["#", ".", "B", ".", ".", "#"], ["#", "T", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_3": [["#", "#", "#", "#", "#", "#"], ["#", ".", "", "#", ".", "#"], ["#", ".", ".", "", ".", "#"], ["#", ".", "S", ".", ".", "#"], ["#", "T", "B", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_4": [["#", "#", "#", "#", "#", "#"], ["#", ".", "", "#", ".", "#"], ["#", ".", ".", "", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "B", "S", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [4, 1], "box_location": [[2, 3], [2, 2], [3, 2], [4, 2], [4, 1]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0060.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["4", "5", "1", "2"], "answer": "5", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", "T", "#", ".", "S", "#"], ["#", ".", "#", "B", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", "T", "#", ".", "", "#"], ["#", ".", "#", "S", ".", "#"], ["#", ".", ".", "B", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", "T", "#", ".", "", "#"], ["#", ".", "#", "", ".", "#"], ["#", ".", "B", "S", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_3": [["#", "#", "#", "#", "#", "#"], ["#", "T", "#", ".", "", "#"], ["#", ".", "#", "", ".", "#"], ["#", "B", "S", ".", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_4": [["#", "#", "#", "#", "#", "#"], ["#", "T", "#", ".", "", "#"], ["#", "B", "#", "", ".", "#"], ["#", "S", ".", ".", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_5": [["#", "#", "#", "#", "#", "#"], ["#", "B", "#", ".", "", "#"], ["#", "S", "#", "", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [1, 1], "box_location": [[2, 3], [3, 3], [3, 2], [3, 1], [2, 1], [1, 1]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0061.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["4", "1", "3", "5"], "answer": "4", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", "B", ".", ".", "#"], ["#", "S", ".", ".", ".", "#"], ["#", ".", ".", "#", "T", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", "S", ".", ".", "#"], ["#", "", "B", ".", ".", "#"], ["#", ".", ".", "#", "T", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", "", ".", ".", "#"], ["#", "", "S", "B", ".", "#"], ["#", ".", ".", "#", "T", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_3": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", "", ".", ".", "#"], ["#", "", ".", "S", "B", "#"], ["#", ".", ".", "#", "T", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_4": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", "", ".", ".", "#"], ["#", "", ".", ".", "S", "#"], ["#", ".", ".", "#", "B", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [4, 4], "box_location": [[2, 2], [3, 2], [3, 3], [3, 4], [4, 4]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0062.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["5", "2", "1", "3"], "answer": "1", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", ".", "T", "B", "S", "#"], ["#", ".", "#", ".", ".", "#"], ["#", "#", "#", ".", ".", "#"], ["#", "#", "#", ".", "#", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", ".", "B", "S", "", "#"], ["#", ".", "#", ".", ".", "#"], ["#", "#", "#", ".", ".", "#"], ["#", "#", "#", ".", "#", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [1, 2], "box_location": [[1, 3], [1, 2]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0063.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["3", "4", "5", "1"], "answer": "1", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", "T", "#"], ["#", "#", ".", "#", "B", "#"], ["#", ".", "#", ".", "S", "#"], ["#", ".", "#", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", "B", "#"], ["#", "#", ".", "#", "S", "#"], ["#", ".", "#", ".", "", "#"], ["#", ".", "#", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [1, 4], "box_location": [[2, 4], [1, 4]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0064.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["2", "4", "5", "3"], "answer": "2", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "T", ".", "#"], ["#", ".", ".", ".", "S", "#"], ["#", ".", ".", "B", ".", "#"], ["#", "#", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "T", ".", "#"], ["#", ".", ".", "B", "", "#"], ["#", ".", ".", "S", ".", "#"], ["#", "#", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "B", ".", "#"], ["#", ".", ".", "S", "", "#"], ["#", ".", ".", "", ".", "#"], ["#", "#", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [1, 3], "box_location": [[3, 3], [2, 3], [1, 3]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0065.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["3", "2", "5", "4"], "answer": "2", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", "#", ".", "#", ".", "#"], ["#", ".", "#", ".", ".", "#"], ["#", ".", "B", ".", "T", "#"], ["#", ".", ".", ".", "S", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", "#", ".", "#", ".", "#"], ["#", ".", "#", ".", ".", "#"], ["#", ".", "S", "B", "T", "#"], ["#", ".", ".", ".", "", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", "#", ".", "#", ".", "#"], ["#", ".", "#", ".", ".", "#"], ["#", ".", "", "S", "B", "#"], ["#", ".", ".", ".", "", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [3, 4], "box_location": [[3, 2], [3, 3], [3, 4]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0066.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["5", "1", "2", "3"], "answer": "1", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "S", ".", "#"], ["#", ".", "B", ".", ".", "#"], ["#", ".", "T", ".", "#", "#"], ["#", ".", ".", "#", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "", ".", "#"], ["#", ".", "S", ".", ".", "#"], ["#", ".", "B", ".", "#", "#"], ["#", ".", ".", "#", ".", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [3, 2], "box_location": [[2, 2], [3, 2]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0067.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["5", "4", "2", "3"], "answer": "4", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", ".", "T", ".", ".", "#"], ["#", ".", ".", "B", "#", "#"], ["#", ".", "S", ".", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", ".", "T", ".", ".", "#"], ["#", ".", ".", "S", "#", "#"], ["#", ".", "", "B", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", ".", "T", ".", ".", "#"], ["#", ".", ".", "", "#", "#"], ["#", ".", "B", "S", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_3": [["#", "#", "#", "#", "#", "#"], ["#", ".", "T", ".", ".", "#"], ["#", ".", "B", "", "#", "#"], ["#", ".", "S", ".", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_4": [["#", "#", "#", "#", "#", "#"], ["#", ".", "B", ".", ".", "#"], ["#", ".", "S", "", "#", "#"], ["#", ".", "", ".", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [1, 2], "box_location": [[2, 3], [3, 3], [3, 2], [2, 2], [1, 2]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0068.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["4", "2", "5", "1"], "answer": "1", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", "#", "#", ".", ".", "#"], ["#", "#", "S", "B", "T", "#"], ["#", "#", ".", ".", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", "#", "#", ".", ".", "#"], ["#", "#", "", "S", "B", "#"], ["#", "#", ".", ".", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [2, 4], "box_location": [[2, 3], [2, 4]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0069.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["4", "1", "2", "5"], "answer": "5", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "S", ".", "#"], ["#", "#", ".", ".", ".", "#"], ["#", ".", ".", "B", "#", "#"], ["#", "T", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "", ".", "#"], ["#", "#", ".", "B", ".", "#"], ["#", ".", ".", "S", "#", "#"], ["#", "T", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "", ".", "#"], ["#", "#", "B", "S", ".", "#"], ["#", ".", ".", "", "#", "#"], ["#", "T", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_3": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "", ".", "#"], ["#", "#", "S", ".", ".", "#"], ["#", ".", "B", "", "#", "#"], ["#", "T", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_4": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "", ".", "#"], ["#", "#", ".", ".", ".", "#"], ["#", ".", "S", "", "#", "#"], ["#", "T", "B", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_5": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "", ".", "#"], ["#", "#", ".", ".", ".", "#"], ["#", ".", ".", "", "#", "#"], ["#", "B", "S", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [4, 1], "box_location": [[3, 3], [2, 3], [2, 2], [3, 2], [4, 2], [4, 1]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0070.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["4", "1", "3", "2"], "answer": "1", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", ".", "S", ".", "#", "#"], ["#", ".", ".", "T", ".", "#"], ["#", ".", ".", "B", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", ".", "", ".", "#", "#"], ["#", ".", ".", "B", ".", "#"], ["#", ".", ".", "S", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [2, 3], "box_location": [[3, 3], [2, 3]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0071.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["3", "1", "2", "5"], "answer": "3", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "S", ".", "#"], ["#", ".", ".", "#", ".", "#"], ["#", ".", ".", "B", ".", "#"], ["#", ".", ".", "T", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "", ".", "#"], ["#", ".", ".", "#", ".", "#"], ["#", ".", "B", "S", ".", "#"], ["#", ".", ".", "T", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "", ".", "#"], ["#", ".", ".", "#", ".", "#"], ["#", ".", "S", "", ".", "#"], ["#", ".", "B", "T", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_3": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "", ".", "#"], ["#", ".", ".", "#", ".", "#"], ["#", ".", ".", "", ".", "#"], ["#", ".", "S", "B", ".", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [4, 3], "box_location": [[3, 3], [3, 2], [4, 2], [4, 3]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0072.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["3", "5", "4", "1"], "answer": "5", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", "T", "#"], ["#", ".", "S", "#", ".", "#"], ["#", ".", ".", "B", ".", "#"], ["#", ".", ".", ".", "#", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", "T", "#"], ["#", ".", "", "#", ".", "#"], ["#", ".", "B", "S", ".", "#"], ["#", ".", ".", ".", "#", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", "T", "#"], ["#", ".", "B", "#", ".", "#"], ["#", ".", "S", "", ".", "#"], ["#", ".", ".", ".", "#", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_3": [["#", "#", "#", "#", "#", "#"], ["#", ".", "B", ".", "T", "#"], ["#", ".", "S", "#", ".", "#"], ["#", ".", ".", "", ".", "#"], ["#", ".", ".", ".", "#", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_4": [["#", "#", "#", "#", "#", "#"], ["#", ".", "S", "B", "T", "#"], ["#", ".", "", "#", ".", "#"], ["#", ".", ".", "", ".", "#"], ["#", ".", ".", ".", "#", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_5": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "S", "B", "#"], ["#", ".", "", "#", ".", "#"], ["#", ".", ".", "", ".", "#"], ["#", ".", ".", ".", "#", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [1, 4], "box_location": [[3, 3], [3, 2], [2, 2], [1, 2], [1, 3], [1, 4]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0073.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["4", "2", "1", "5"], "answer": "1", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "S", ".", ".", "#"], ["#", ".", "T", "B", ".", "#"], ["#", "#", ".", "#", "#", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "", ".", ".", "#"], ["#", ".", "B", "S", ".", "#"], ["#", "#", ".", "#", "#", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [3, 2], "box_location": [[3, 3], [3, 2]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0074.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["1", "2", "3", "5"], "answer": "1", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "T", "#", ".", "S", "#"], ["#", "B", "#", ".", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "B", "#", ".", "", "#"], ["#", "S", "#", ".", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [2, 1], "box_location": [[3, 1], [2, 1]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0075.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["5", "2", "1", "3"], "answer": "3", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", "T", ".", ".", ".", "#"], ["#", ".", ".", "B", ".", "#"], ["#", ".", ".", ".", "S", "#"], ["#", ".", ".", ".", "#", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", "T", ".", "B", ".", "#"], ["#", ".", ".", "S", ".", "#"], ["#", ".", ".", ".", "", "#"], ["#", ".", ".", ".", "#", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", "T", "B", "S", ".", "#"], ["#", ".", ".", "", ".", "#"], ["#", ".", ".", ".", "", "#"], ["#", ".", ".", ".", "#", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_3": [["#", "#", "#", "#", "#", "#"], ["#", "B", "S", ".", ".", "#"], ["#", ".", ".", "", ".", "#"], ["#", ".", ".", ".", "", "#"], ["#", ".", ".", ".", "#", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [1, 1], "box_location": [[2, 3], [1, 3], [1, 2], [1, 1]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0076.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["5", "4", "3", "2"], "answer": "2", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", "B", ".", ".", "#"], ["#", ".", ".", "T", "S", "#"], ["#", "#", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", "S", ".", ".", "#"], ["#", ".", "B", "T", "", "#"], ["#", "#", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", "", ".", ".", "#"], ["#", ".", "S", "B", "", "#"], ["#", "#", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [3, 3], "box_location": [[2, 2], [3, 2], [3, 3]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0077.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["1", "3", "2", "5"], "answer": "2", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", ".", ".", "T", "#"], ["#", "S", "#", "B", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", ".", "B", "T", "#"], ["#", "", "#", "S", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", ".", "S", "B", "#"], ["#", "", "#", "", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [2, 4], "box_location": [[3, 3], [2, 3], [2, 4]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0078.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["1", "4", "3", "5"], "answer": "4", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", "B", "S", "#", "#"], ["#", ".", ".", "#", ".", "#"], ["#", ".", ".", ".", "T", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", "S", "", "#", "#"], ["#", ".", "B", "#", ".", "#"], ["#", ".", ".", ".", "T", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", "", "", "#", "#"], ["#", ".", "S", "#", ".", "#"], ["#", ".", "B", ".", "T", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_3": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", "", "", "#", "#"], ["#", ".", ".", "#", ".", "#"], ["#", ".", "S", "B", "T", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_4": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", "", "", "#", "#"], ["#", ".", ".", "#", ".", "#"], ["#", ".", ".", "S", "B", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [4, 4], "box_location": [[2, 2], [3, 2], [4, 2], [4, 3], [4, 4]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0079.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["2", "4", "3", "1"], "answer": "3", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", ".", "#", ".", "#", "#"], ["#", "T", ".", ".", ".", "#"], ["#", ".", ".", "B", ".", "#"], ["#", "S", ".", "#", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", ".", "#", ".", "#", "#"], ["#", "T", ".", ".", ".", "#"], ["#", ".", "B", "S", ".", "#"], ["#", "", ".", "#", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", ".", "#", ".", "#", "#"], ["#", "T", "B", ".", ".", "#"], ["#", ".", "S", "", ".", "#"], ["#", "", ".", "#", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_3": [["#", "#", "#", "#", "#", "#"], ["#", ".", "#", ".", "#", "#"], ["#", "B", "S", ".", ".", "#"], ["#", ".", ".", "", ".", "#"], ["#", "", ".", "#", ".", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [2, 1], "box_location": [[3, 3], [3, 2], [2, 2], [2, 1]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0080.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["5", "4", "2", "1"], "answer": "1", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "#", ".", "#"], ["#", ".", "#", ".", ".", "#"], ["#", ".", ".", "B", "T", "#"], ["#", ".", "S", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "#", ".", "#"], ["#", ".", "#", ".", ".", "#"], ["#", ".", ".", "S", "B", "#"], ["#", ".", "", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [3, 4], "box_location": [[3, 3], [3, 4]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0081.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["3", "1", "4", "2"], "answer": "4", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", "T", ".", ".", ".", "#"], ["#", ".", ".", ".", "#", "#"], ["#", "#", ".", "B", "S", "#"], ["#", ".", ".", ".", "#", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", "T", ".", ".", ".", "#"], ["#", ".", ".", ".", "#", "#"], ["#", "#", "B", "S", "", "#"], ["#", ".", ".", ".", "#", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", "T", ".", ".", ".", "#"], ["#", ".", "B", ".", "#", "#"], ["#", "#", "S", "", "", "#"], ["#", ".", ".", ".", "#", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_3": [["#", "#", "#", "#", "#", "#"], ["#", "T", "B", ".", ".", "#"], ["#", ".", "S", ".", "#", "#"], ["#", "#", ".", "", "", "#"], ["#", ".", ".", ".", "#", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_4": [["#", "#", "#", "#", "#", "#"], ["#", "B", "S", ".", ".", "#"], ["#", ".", ".", ".", "#", "#"], ["#", "#", ".", "", "", "#"], ["#", ".", ".", ".", "#", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [1, 1], "box_location": [[3, 3], [3, 2], [2, 2], [1, 2], [1, 1]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0082.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["5", "2", "3", "4"], "answer": "3", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", "#", ".", ".", ".", "#"], ["#", "#", "#", "B", "T", "#"], ["#", "S", ".", ".", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", "#", ".", ".", ".", "#"], ["#", "#", "#", "S", "T", "#"], ["#", "", ".", "B", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", "#", ".", ".", ".", "#"], ["#", "#", "#", "", "T", "#"], ["#", "", ".", "S", "B", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_3": [["#", "#", "#", "#", "#", "#"], ["#", "#", ".", ".", ".", "#"], ["#", "#", "#", "", "B", "#"], ["#", "", ".", ".", "S", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [2, 4], "box_location": [[2, 3], [3, 3], [3, 4], [2, 4]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0083.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["5", "4", "1", "2"], "answer": "4", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "S", ".", "#"], ["#", ".", ".", "B", ".", "#"], ["#", ".", ".", "#", "#", "#"], ["#", "T", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "", ".", "#"], ["#", ".", "B", "S", ".", "#"], ["#", ".", ".", "#", "#", "#"], ["#", "T", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "", ".", "#"], ["#", "B", "S", "", ".", "#"], ["#", ".", ".", "#", "#", "#"], ["#", "T", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_3": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "", ".", "#"], ["#", "S", ".", "", ".", "#"], ["#", "B", ".", "#", "#", "#"], ["#", "T", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_4": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "", ".", "#"], ["#", ".", ".", "", ".", "#"], ["#", "S", ".", "#", "#", "#"], ["#", "B", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [4, 1], "box_location": [[2, 3], [2, 2], [2, 1], [3, 1], [4, 1]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0084.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["4", "2", "5", "1"], "answer": "5", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", "T", ".", ".", ".", "#"], ["#", "#", ".", "B", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "S", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", "T", ".", ".", ".", "#"], ["#", "#", ".", "S", "#", "#"], ["#", ".", ".", "B", ".", "#"], ["#", "", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", "T", ".", ".", ".", "#"], ["#", "#", ".", "", "#", "#"], ["#", ".", "B", "S", ".", "#"], ["#", "", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_3": [["#", "#", "#", "#", "#", "#"], ["#", "T", ".", ".", ".", "#"], ["#", "#", "B", "", "#", "#"], ["#", ".", "S", ".", ".", "#"], ["#", "", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_4": [["#", "#", "#", "#", "#", "#"], ["#", "T", "B", ".", ".", "#"], ["#", "#", "S", "", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_5": [["#", "#", "#", "#", "#", "#"], ["#", "B", "S", ".", ".", "#"], ["#", "#", ".", "", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [1, 1], "box_location": [[2, 3], [3, 3], [3, 2], [2, 2], [1, 2], [1, 1]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0085.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["4", "1", "5", "2"], "answer": "2", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", "S", ".", "B", "#"], ["#", ".", ".", "#", ".", "#"], ["#", ".", ".", ".", "T", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", "", ".", "S", "#"], ["#", ".", ".", "#", "B", "#"], ["#", ".", ".", ".", "T", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", "", ".", "", "#"], ["#", ".", ".", "#", "S", "#"], ["#", ".", ".", ".", "B", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [4, 4], "box_location": [[2, 4], [3, 4], [4, 4]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0086.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["3", "4", "5", "1"], "answer": "4", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", "S", ".", ".", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", "B", "#", "T", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", "", ".", ".", ".", "#"], ["#", ".", "B", ".", ".", "#"], ["#", ".", "S", "#", "T", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", "", ".", ".", ".", "#"], ["#", ".", "S", "B", ".", "#"], ["#", ".", "", "#", "T", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_3": [["#", "#", "#", "#", "#", "#"], ["#", "", ".", ".", ".", "#"], ["#", ".", ".", "S", "B", "#"], ["#", ".", "", "#", "T", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_4": [["#", "#", "#", "#", "#", "#"], ["#", "", ".", ".", ".", "#"], ["#", ".", ".", ".", "S", "#"], ["#", ".", "", "#", "B", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [3, 4], "box_location": [[3, 2], [2, 2], [2, 3], [2, 4], [3, 4]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0087.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["5", "1", "4", "3"], "answer": "1", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", ".", "#", "#", "S", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", "B", "T", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", ".", "#", "#", "", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", "S", "B", ".", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [4, 3], "box_location": [[4, 2], [4, 3]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0088.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["2", "4", "3", "5"], "answer": "5", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "#", ".", "#"], ["#", ".", "S", "B", ".", "#"], ["#", ".", ".", "#", ".", "#"], ["#", ".", ".", ".", "T", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "#", ".", "#"], ["#", ".", "B", "S", ".", "#"], ["#", ".", ".", "#", ".", "#"], ["#", ".", ".", ".", "T", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "#", ".", "#"], ["#", ".", "S", "", ".", "#"], ["#", ".", "B", "#", ".", "#"], ["#", ".", ".", ".", "T", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_3": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "#", ".", "#"], ["#", ".", "", "", ".", "#"], ["#", ".", "S", "#", ".", "#"], ["#", ".", "B", ".", "T", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_4": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "#", ".", "#"], ["#", ".", "", "", ".", "#"], ["#", ".", ".", "#", ".", "#"], ["#", ".", "S", "B", "T", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_5": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "#", ".", "#"], ["#", ".", "", "", ".", "#"], ["#", ".", ".", "#", ".", "#"], ["#", ".", ".", "S", "B", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [4, 4], "box_location": [[2, 3], [2, 2], [3, 2], [4, 2], [4, 3], [4, 4]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0089.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["4", "5", "3", "2"], "answer": "4", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", "T", "S", ".", ".", "#"], ["#", ".", "#", ".", ".", "#"], ["#", "#", ".", "B", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", "T", "", ".", ".", "#"], ["#", ".", "#", "B", ".", "#"], ["#", "#", ".", "S", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", "T", "", "B", ".", "#"], ["#", ".", "#", "S", ".", "#"], ["#", "#", ".", "", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_3": [["#", "#", "#", "#", "#", "#"], ["#", "T", "B", "S", ".", "#"], ["#", ".", "#", ".", ".", "#"], ["#", "#", ".", "", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_4": [["#", "#", "#", "#", "#", "#"], ["#", "B", "S", ".", ".", "#"], ["#", ".", "#", ".", ".", "#"], ["#", "#", ".", "", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [1, 1], "box_location": [[3, 3], [2, 3], [1, 3], [1, 2], [1, 1]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0090.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["4", "1", "5", "3"], "answer": "5", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", "#", "#"], ["#", "#", ".", "B", ".", "#"], ["#", ".", "S", "#", ".", "#"], ["#", ".", ".", ".", "T", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", "#", "#"], ["#", "#", "B", "S", ".", "#"], ["#", ".", "", "#", ".", "#"], ["#", ".", ".", ".", "T", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", "#", "#"], ["#", "#", "S", "", ".", "#"], ["#", ".", "B", "#", ".", "#"], ["#", ".", ".", ".", "T", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_3": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", "#", "#"], ["#", "#", ".", "", ".", "#"], ["#", ".", "S", "#", ".", "#"], ["#", ".", "B", ".", "T", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_4": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", "#", "#"], ["#", "#", ".", "", ".", "#"], ["#", ".", "", "#", ".", "#"], ["#", ".", "S", "B", "T", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_5": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", "#", "#"], ["#", "#", ".", "", ".", "#"], ["#", ".", "", "#", ".", "#"], ["#", ".", ".", "S", "B", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [4, 4], "box_location": [[2, 3], [2, 2], [3, 2], [4, 2], [4, 3], [4, 4]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0091.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["4", "2", "5", "1"], "answer": "4", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", "T", ".", "#", "#", "#"], ["#", ".", ".", ".", "#", "#"], ["#", ".", ".", "B", "S", "#"], ["#", ".", ".", "#", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", "T", ".", "#", "#", "#"], ["#", ".", ".", ".", "#", "#"], ["#", ".", "B", "S", "", "#"], ["#", ".", ".", "#", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", "T", ".", "#", "#", "#"], ["#", ".", "B", ".", "#", "#"], ["#", ".", "S", "", "", "#"], ["#", ".", ".", "#", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_3": [["#", "#", "#", "#", "#", "#"], ["#", "T", ".", "#", "#", "#"], ["#", "B", "S", ".", "#", "#"], ["#", ".", ".", "", "", "#"], ["#", ".", ".", "#", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_4": [["#", "#", "#", "#", "#", "#"], ["#", "B", ".", "#", "#", "#"], ["#", "S", ".", ".", "#", "#"], ["#", ".", ".", "", "", "#"], ["#", ".", ".", "#", ".", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [1, 1], "box_location": [[3, 3], [3, 2], [2, 2], [2, 1], [1, 1]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0092.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["2", "3", "5", "1"], "answer": "1", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", "#", "#"], ["#", ".", ".", ".", "#", "#"], ["#", "#", "T", "B", ".", "#"], ["#", ".", ".", "S", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", "#", "#"], ["#", ".", ".", ".", "#", "#"], ["#", "#", "B", "S", ".", "#"], ["#", ".", ".", "", ".", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [3, 2], "box_location": [[3, 3], [3, 2]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0093.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["5", "1", "4", "2"], "answer": "5", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", "#", ".", ".", "S", "#"], ["#", ".", ".", "B", ".", "#"], ["#", ".", ".", "#", "#", "#"], ["#", ".", ".", ".", "T", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", "#", ".", ".", "", "#"], ["#", ".", "B", "S", ".", "#"], ["#", ".", ".", "#", "#", "#"], ["#", ".", ".", ".", "T", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", "#", ".", ".", "", "#"], ["#", ".", "S", "", ".", "#"], ["#", ".", "B", "#", "#", "#"], ["#", ".", ".", ".", "T", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_3": [["#", "#", "#", "#", "#", "#"], ["#", "#", ".", ".", "", "#"], ["#", ".", ".", "", ".", "#"], ["#", ".", "S", "#", "#", "#"], ["#", ".", "B", ".", "T", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_4": [["#", "#", "#", "#", "#", "#"], ["#", "#", ".", ".", "", "#"], ["#", ".", ".", "", ".", "#"], ["#", ".", ".", "#", "#", "#"], ["#", ".", "S", "B", "T", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_5": [["#", "#", "#", "#", "#", "#"], ["#", "#", ".", ".", "", "#"], ["#", ".", ".", "", ".", "#"], ["#", ".", ".", "#", "#", "#"], ["#", ".", ".", "S", "B", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [4, 4], "box_location": [[2, 3], [2, 2], [3, 2], [4, 2], [4, 3], [4, 4]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0094.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["1", "2", "3", "5"], "answer": "2", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", "#", ".", ".", ".", "#"], ["#", ".", ".", ".", "T", "#"], ["#", ".", ".", "B", "S", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", "#", ".", ".", ".", "#"], ["#", ".", ".", "B", "T", "#"], ["#", ".", ".", "S", "", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", "#", ".", ".", ".", "#"], ["#", ".", ".", "S", "B", "#"], ["#", ".", ".", "", "", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [2, 4], "box_location": [[3, 3], [2, 3], [2, 4]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0095.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["2", "3", "1", "5"], "answer": "1", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", ".", "B", "T", "#", "#"], ["#", ".", ".", ".", "S", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", ".", "S", "B", "#", "#"], ["#", ".", ".", ".", "", "#"], ["#", ".", ".", ".", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [1, 3], "box_location": [[1, 2], [1, 3]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0096.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["1", "4", "5", "2"], "answer": "4", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", "#", ".", ".", ".", "#"], ["#", ".", "B", ".", ".", "#"], ["#", "S", ".", "#", ".", "#"], ["#", ".", ".", ".", "T", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", "#", ".", ".", ".", "#"], ["#", ".", "S", ".", ".", "#"], ["#", "", "B", "#", ".", "#"], ["#", ".", ".", ".", "T", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", "#", ".", ".", ".", "#"], ["#", ".", "", ".", ".", "#"], ["#", "", "S", "#", ".", "#"], ["#", ".", "B", ".", "T", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_3": [["#", "#", "#", "#", "#", "#"], ["#", "#", ".", ".", ".", "#"], ["#", ".", "", ".", ".", "#"], ["#", "", ".", "#", ".", "#"], ["#", ".", "S", "B", "T", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_4": [["#", "#", "#", "#", "#", "#"], ["#", "#", ".", ".", ".", "#"], ["#", ".", "", ".", ".", "#"], ["#", "", ".", "#", ".", "#"], ["#", ".", ".", "S", "B", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [4, 4], "box_location": [[2, 2], [3, 2], [4, 2], [4, 3], [4, 4]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0097.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["1", "2", "5", "4"], "answer": "5", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", "#", ".", ".", "#", "#"], ["#", "#", ".", "B", "S", "#"], ["#", ".", ".", "#", "#", "#"], ["#", ".", ".", ".", "T", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", "#", ".", ".", "#", "#"], ["#", "#", "B", "S", "", "#"], ["#", ".", ".", "#", "#", "#"], ["#", ".", ".", ".", "T", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", "#", ".", ".", "#", "#"], ["#", "#", "S", "", "", "#"], ["#", ".", "B", "#", "#", "#"], ["#", ".", ".", ".", "T", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_3": [["#", "#", "#", "#", "#", "#"], ["#", "#", ".", ".", "#", "#"], ["#", "#", ".", "", "", "#"], ["#", ".", "S", "#", "#", "#"], ["#", ".", "B", ".", "T", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_4": [["#", "#", "#", "#", "#", "#"], ["#", "#", ".", ".", "#", "#"], ["#", "#", ".", "", "", "#"], ["#", ".", ".", "#", "#", "#"], ["#", ".", "S", "B", "T", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_5": [["#", "#", "#", "#", "#", "#"], ["#", "#", ".", ".", "#", "#"], ["#", "#", ".", "", "", "#"], ["#", ".", ".", "#", "#", "#"], ["#", ".", ".", "S", "B", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [4, 4], "box_location": [[2, 3], [2, 2], [3, 2], [4, 2], [4, 3], [4, 4]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0098.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["3", "4", "5", "1"], "answer": "5", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", "T", "#"], ["#", "#", "B", ".", ".", "#"], ["#", ".", ".", "S", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", "T", "#"], ["#", "#", "S", ".", ".", "#"], ["#", ".", "B", "", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_2": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", "T", "#"], ["#", "#", "", ".", ".", "#"], ["#", ".", "S", "B", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_3": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", ".", "T", "#"], ["#", "#", "", "B", ".", "#"], ["#", ".", ".", "S", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_4": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "B", "T", "#"], ["#", "#", "", "S", ".", "#"], ["#", ".", ".", "", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_5": [["#", "#", "#", "#", "#", "#"], ["#", ".", ".", "S", "B", "#"], ["#", "#", "", ".", ".", "#"], ["#", ".", ".", "", ".", "#"], ["#", ".", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [1, 4], "box_location": [[2, 2], [3, 2], [3, 3], [2, 3], [1, 3], [1, 4]]}, "source_file": "move_box.json"}
{"image": "images/move_box/move_box_0099.jpg", "question": "A storekeeper is a puzzle in which the player pushes boxes around in a warehouse trying to get them to target locations. The game is represented by an 6 x 6 grid of characters grid where each element is a wall, floor, or box. Your task is to move the box to the end flag under the following rules:\n\n1. The box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box by 1 grid. This is a push.\n2. The player cannot walk through the box.\n\nWhat is the minimum number of pushes to move the box to the end flag.", "options": ["1", "2", "4", "3"], "answer": "1", "solution": {"ids": {"empty": ".", "brick": "#", "box": "B", "person": "S", "target": "T"}, "timestep": {"grid_0": [["#", "#", "#", "#", "#", "#"], ["#", "S", ".", "B", "T", "#"], ["#", "#", "#", ".", ".", "#"], ["#", ".", "#", "#", ".", "#"], ["#", "#", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]], "grid_1": [["#", "#", "#", "#", "#", "#"], ["#", "", ".", "S", "B", "#"], ["#", "#", "#", ".", ".", "#"], ["#", ".", "#", "#", ".", "#"], ["#", "#", ".", ".", ".", "#"], ["#", "#", "#", "#", "#", "#"]]}, "target": [1, 4], "box_location": [[1, 3], [1, 4]]}, "source_file": "move_box.json"}
{"image": "images/board_tile/board_tile_0000.jpg", "question": "The checkerboard shown in the image was originally of 7 * 8 in dimension having a total of 56 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. Two of the squares have been removed from the board in the position of the white coloured cells, as shown in the image. You have 27 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 27 dominoes in the checkerboard to exactly cover all the remaining 54 squares? Answer Yes or No.", "options": ["Yes", "No"], "answer": "No", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 1.0, 1.0]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 1.0, 1.0], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]]], "rows": 7, "columns": 8, "removed_positions": [[0, 7], [3, 2]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 28, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 26}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0001.jpg", "question": "The checkerboard shown in the image was originally of 7 * 6 in dimension having a total of 42 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. Two of the squares have been removed from the board in the position of the white coloured cells, as shown in the image. You have 20 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 20 dominoes in the checkerboard to exactly cover all the remaining 40 squares? Answer Yes or No.", "options": ["Yes", "No"], "answer": "No", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 1.0, 1.0], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 1.0, 1.0], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]]], "rows": 7, "columns": 6, "removed_positions": [[2, 4], [5, 1]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 19, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 21}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0002.jpg", "question": "The checkerboard shown in the image was originally of 5 * 7 in dimension having a total of 35 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. One of the squares have been removed from the board in the position of the white coloured cell, as shown in the image. You have 17 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 17 dominoes in the checkerboard to exactly cover all the remaining 34 squares? Answer Yes or No.", "options": ["No", "Yes"], "answer": "No", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 1.0, 1.0], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]]], "rows": 5, "columns": 7, "removed_positions": [[4, 3]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 18, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 16}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0003.jpg", "question": "The checkerboard shown in the image was originally of 6 * 9 in dimension having a total of 54 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. Two of the squares have been removed from the board in the position of the white coloured cells, as shown in the image. You have 26 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 26 dominoes in the checkerboard to exactly cover all the remaining 52 squares? Answer Yes or No.", "options": ["Yes", "No"], "answer": "Yes", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 1.0, 1.0], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 1.0, 1.0], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]]], "rows": 6, "columns": 9, "removed_positions": [[2, 3], [4, 2]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 26, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 26}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0004.jpg", "question": "The checkerboard shown in the image was originally of 4 * 9 in dimension having a total of 36 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. Two of the squares have been removed from the board in the position of the white coloured cells, as shown in the image. You have 17 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 17 dominoes in the checkerboard to exactly cover all the remaining 34 squares? Answer Yes or No.", "options": ["Yes", "No"], "answer": "Yes", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 1.0, 1.0], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 1.0, 1.0], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]]], "rows": 4, "columns": 9, "removed_positions": [[1, 1], [1, 4]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 17, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 17}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0005.jpg", "question": "The checkerboard shown in the image was originally of 9 * 7 in dimension having a total of 63 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. One of the squares have been removed from the board in the position of the white coloured cell, as shown in the image. You have 31 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 31 dominoes in the checkerboard to exactly cover all the remaining 62 squares? Answer Yes or No.", "options": ["No", "Yes"], "answer": "No", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 1.0, 1.0], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]]], "rows": 9, "columns": 7, "removed_positions": [[8, 1]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 32, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 30}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0006.jpg", "question": "The checkerboard shown in the image was originally of 6 * 7 in dimension having a total of 42 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. Two of the squares have been removed from the board in the position of the white coloured cells, as shown in the image. You have 20 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 20 dominoes in the checkerboard to exactly cover all the remaining 40 squares? Answer Yes or No.", "options": ["Yes", "No"], "answer": "No", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 1.0, 1.0], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 1.0, 1.0], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]]], "rows": 6, "columns": 7, "removed_positions": [[1, 1], [4, 4]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 19, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 21}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0007.jpg", "question": "The checkerboard shown in the image was originally of 7 * 7 in dimension having a total of 49 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. One of the squares have been removed from the board in the position of the white coloured cell, as shown in the image. You have 24 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 24 dominoes in the checkerboard to exactly cover all the remaining 48 squares? Answer Yes or No.", "options": ["Yes", "No"], "answer": "Yes", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 1.0, 1.0], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]]], "rows": 7, "columns": 7, "removed_positions": [[6, 0]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 24, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 24}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0008.jpg", "question": "The checkerboard shown in the image was originally of 5 * 6 in dimension having a total of 30 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. Two of the squares have been removed from the board in the position of the white coloured cells, as shown in the image. You have 14 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 14 dominoes in the checkerboard to exactly cover all the remaining 28 squares? Answer Yes or No.", "options": ["Yes", "No"], "answer": "Yes", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 1.0, 1.0], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 1.0, 1.0], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]]], "rows": 5, "columns": 6, "removed_positions": [[0, 2], [2, 1]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 14, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 14}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0009.jpg", "question": "The checkerboard shown in the image was originally of 8 * 7 in dimension having a total of 56 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. Two of the squares have been removed from the board in the position of the white coloured cells, as shown in the image. You have 27 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 27 dominoes in the checkerboard to exactly cover all the remaining 54 squares? Answer Yes or No.", "options": ["Yes", "No"], "answer": "No", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 1.0, 1.0], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 1.0, 1.0], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]]], "rows": 8, "columns": 7, "removed_positions": [[5, 4], [7, 0]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 28, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 26}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0010.jpg", "question": "The checkerboard shown in the image was originally of 6 * 8 in dimension having a total of 48 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. Two of the squares have been removed from the board in the position of the white coloured cells, as shown in the image. You have 23 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 23 dominoes in the checkerboard to exactly cover all the remaining 46 squares? Answer Yes or No.", "options": ["Yes", "No"], "answer": "No", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 1.0, 1.0], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 1.0, 1.0], [1.0, 0.7647, 0.2235]]], "rows": 6, "columns": 8, "removed_positions": [[5, 0], [5, 6]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 24, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 22}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0011.jpg", "question": "The checkerboard shown in the image was originally of 6 * 9 in dimension having a total of 54 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. Two of the squares have been removed from the board in the position of the white coloured cells, as shown in the image. You have 26 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 26 dominoes in the checkerboard to exactly cover all the remaining 52 squares? Answer Yes or No.", "options": ["No", "Yes"], "answer": "Yes", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 1.0, 1.0], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 1.0, 1.0], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]]], "rows": 6, "columns": 9, "removed_positions": [[0, 1], [5, 3]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 26, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 26}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0012.jpg", "question": "The checkerboard shown in the image was originally of 8 * 8 in dimension having a total of 64 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. Two of the squares have been removed from the board in the position of the white coloured cells, as shown in the image. You have 31 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 31 dominoes in the checkerboard to exactly cover all the remaining 62 squares? Answer Yes or No.", "options": ["Yes", "No"], "answer": "Yes", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 1.0, 1.0], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 1.0, 1.0]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]]], "rows": 8, "columns": 8, "removed_positions": [[2, 1], [3, 7]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 31, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 31}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0013.jpg", "question": "The checkerboard shown in the image was originally of 9 * 9 in dimension having a total of 81 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. One of the squares have been removed from the board in the position of the white coloured cell, as shown in the image. You have 40 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 40 dominoes in the checkerboard to exactly cover all the remaining 80 squares? Answer Yes or No.", "options": ["Yes", "No"], "answer": "No", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 1.0, 1.0], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]]], "rows": 9, "columns": 9, "removed_positions": [[0, 3]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 41, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 39}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0014.jpg", "question": "The checkerboard shown in the image was originally of 7 * 9 in dimension having a total of 63 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. One of the squares have been removed from the board in the position of the white coloured cell, as shown in the image. You have 31 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 31 dominoes in the checkerboard to exactly cover all the remaining 62 squares? Answer Yes or No.", "options": ["Yes", "No"], "answer": "Yes", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 1.0, 1.0], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]]], "rows": 7, "columns": 9, "removed_positions": [[6, 0]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 31, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 31}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0015.jpg", "question": "The checkerboard shown in the image was originally of 4 * 5 in dimension having a total of 20 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. Two of the squares have been removed from the board in the position of the white coloured cells, as shown in the image. You have 9 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 9 dominoes in the checkerboard to exactly cover all the remaining 18 squares? Answer Yes or No.", "options": ["Yes", "No"], "answer": "Yes", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 1.0, 1.0], [1.0, 1.0, 1.0], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]]], "rows": 4, "columns": 5, "removed_positions": [[1, 1], [1, 2]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 9, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 9}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0016.jpg", "question": "The checkerboard shown in the image was originally of 7 * 7 in dimension having a total of 49 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. One of the squares have been removed from the board in the position of the white coloured cell, as shown in the image. You have 24 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 24 dominoes in the checkerboard to exactly cover all the remaining 48 squares? Answer Yes or No.", "options": ["No", "Yes"], "answer": "No", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 1.0, 1.0], [1.0, 0.7647, 0.2235]]], "rows": 7, "columns": 7, "removed_positions": [[6, 5]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 25, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 23}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0017.jpg", "question": "The checkerboard shown in the image was originally of 5 * 5 in dimension having a total of 25 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. One of the squares have been removed from the board in the position of the white coloured cell, as shown in the image. You have 12 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 12 dominoes in the checkerboard to exactly cover all the remaining 24 squares? Answer Yes or No.", "options": ["Yes", "No"], "answer": "No", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 1.0, 1.0]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]]], "rows": 5, "columns": 5, "removed_positions": [[1, 4]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 13, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 11}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0018.jpg", "question": "The checkerboard shown in the image was originally of 4 * 5 in dimension having a total of 20 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. Two of the squares have been removed from the board in the position of the white coloured cells, as shown in the image. You have 9 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 9 dominoes in the checkerboard to exactly cover all the remaining 18 squares? Answer Yes or No.", "options": ["Yes", "No"], "answer": "Yes", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 1.0, 1.0], [1.0, 1.0, 1.0]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]]], "rows": 4, "columns": 5, "removed_positions": [[2, 3], [2, 4]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 9, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 9}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0019.jpg", "question": "The checkerboard shown in the image was originally of 6 * 6 in dimension having a total of 36 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. Two of the squares have been removed from the board in the position of the white coloured cells, as shown in the image. You have 17 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 17 dominoes in the checkerboard to exactly cover all the remaining 34 squares? Answer Yes or No.", "options": ["Yes", "No"], "answer": "Yes", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 1.0, 1.0], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 1.0, 1.0], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]]], "rows": 6, "columns": 6, "removed_positions": [[3, 1], [4, 3]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 17, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 17}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0020.jpg", "question": "The checkerboard shown in the image was originally of 5 * 7 in dimension having a total of 35 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. One of the squares have been removed from the board in the position of the white coloured cell, as shown in the image. You have 17 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 17 dominoes in the checkerboard to exactly cover all the remaining 34 squares? Answer Yes or No.", "options": ["No", "Yes"], "answer": "No", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 1.0, 1.0], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]]], "rows": 5, "columns": 7, "removed_positions": [[3, 4]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 18, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 16}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0021.jpg", "question": "The checkerboard shown in the image was originally of 8 * 6 in dimension having a total of 48 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. Two of the squares have been removed from the board in the position of the white coloured cells, as shown in the image. You have 23 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 23 dominoes in the checkerboard to exactly cover all the remaining 46 squares? Answer Yes or No.", "options": ["Yes", "No"], "answer": "Yes", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 1.0, 1.0]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 1.0, 1.0], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]]], "rows": 8, "columns": 6, "removed_positions": [[0, 5], [3, 1]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 23, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 23}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0022.jpg", "question": "The checkerboard shown in the image was originally of 5 * 6 in dimension having a total of 30 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. Two of the squares have been removed from the board in the position of the white coloured cells, as shown in the image. You have 14 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 14 dominoes in the checkerboard to exactly cover all the remaining 28 squares? Answer Yes or No.", "options": ["No", "Yes"], "answer": "No", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 1.0, 1.0]], [[1.0, 1.0, 1.0], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]]], "rows": 5, "columns": 6, "removed_positions": [[3, 5], [4, 0]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 13, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 15}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0023.jpg", "question": "The checkerboard shown in the image was originally of 8 * 6 in dimension having a total of 48 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. Two of the squares have been removed from the board in the position of the white coloured cells, as shown in the image. You have 23 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 23 dominoes in the checkerboard to exactly cover all the remaining 46 squares? Answer Yes or No.", "options": ["Yes", "No"], "answer": "No", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 1.0, 1.0], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 1.0, 1.0], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]]], "rows": 8, "columns": 6, "removed_positions": [[0, 3], [3, 2]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 24, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 22}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0024.jpg", "question": "The checkerboard shown in the image was originally of 6 * 8 in dimension having a total of 48 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. Two of the squares have been removed from the board in the position of the white coloured cells, as shown in the image. You have 23 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 23 dominoes in the checkerboard to exactly cover all the remaining 46 squares? Answer Yes or No.", "options": ["No", "Yes"], "answer": "Yes", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 1.0, 1.0], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 1.0, 1.0], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]]], "rows": 6, "columns": 8, "removed_positions": [[1, 0], [3, 3]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 23, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 23}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0025.jpg", "question": "The checkerboard shown in the image was originally of 5 * 9 in dimension having a total of 45 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. One of the squares have been removed from the board in the position of the white coloured cell, as shown in the image. You have 22 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 22 dominoes in the checkerboard to exactly cover all the remaining 44 squares? Answer Yes or No.", "options": ["No", "Yes"], "answer": "No", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 1.0, 1.0], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]]], "rows": 5, "columns": 9, "removed_positions": [[0, 3]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 23, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 21}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0026.jpg", "question": "The checkerboard shown in the image was originally of 6 * 6 in dimension having a total of 36 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. Two of the squares have been removed from the board in the position of the white coloured cells, as shown in the image. You have 17 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 17 dominoes in the checkerboard to exactly cover all the remaining 34 squares? Answer Yes or No.", "options": ["No", "Yes"], "answer": "No", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 1.0, 1.0], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 1.0, 1.0], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]]], "rows": 6, "columns": 6, "removed_positions": [[0, 4], [3, 3]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 16, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 18}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0027.jpg", "question": "The checkerboard shown in the image was originally of 8 * 6 in dimension having a total of 48 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. Two of the squares have been removed from the board in the position of the white coloured cells, as shown in the image. You have 23 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 23 dominoes in the checkerboard to exactly cover all the remaining 46 squares? Answer Yes or No.", "options": ["Yes", "No"], "answer": "No", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 1.0, 1.0], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 1.0, 1.0], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]]], "rows": 8, "columns": 6, "removed_positions": [[1, 2], [2, 1]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 24, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 22}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0028.jpg", "question": "The checkerboard shown in the image was originally of 7 * 6 in dimension having a total of 42 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. Two of the squares have been removed from the board in the position of the white coloured cells, as shown in the image. You have 20 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 20 dominoes in the checkerboard to exactly cover all the remaining 40 squares? Answer Yes or No.", "options": ["Yes", "No"], "answer": "No", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 1.0, 1.0], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 1.0, 1.0], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]]], "rows": 7, "columns": 6, "removed_positions": [[4, 4], [5, 1]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 19, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 21}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0029.jpg", "question": "The checkerboard shown in the image was originally of 8 * 5 in dimension having a total of 40 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. Two of the squares have been removed from the board in the position of the white coloured cells, as shown in the image. You have 19 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 19 dominoes in the checkerboard to exactly cover all the remaining 38 squares? Answer Yes or No.", "options": ["Yes", "No"], "answer": "No", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 1.0, 1.0], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 1.0, 1.0], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]]], "rows": 8, "columns": 5, "removed_positions": [[4, 1], [6, 3]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 20, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 18}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0030.jpg", "question": "The checkerboard shown in the image was originally of 5 * 9 in dimension having a total of 45 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. One of the squares have been removed from the board in the position of the white coloured cell, as shown in the image. You have 22 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 22 dominoes in the checkerboard to exactly cover all the remaining 44 squares? Answer Yes or No.", "options": ["Yes", "No"], "answer": "No", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 1.0, 1.0], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]]], "rows": 5, "columns": 9, "removed_positions": [[3, 4]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 23, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 21}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0031.jpg", "question": "The checkerboard shown in the image was originally of 5 * 8 in dimension having a total of 40 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. Two of the squares have been removed from the board in the position of the white coloured cells, as shown in the image. You have 19 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 19 dominoes in the checkerboard to exactly cover all the remaining 38 squares? Answer Yes or No.", "options": ["No", "Yes"], "answer": "Yes", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 1.0, 1.0], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 1.0, 1.0], [1.0, 0.902, 0.702]]], "rows": 5, "columns": 8, "removed_positions": [[0, 5], [4, 6]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 19, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 19}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0032.jpg", "question": "The checkerboard shown in the image was originally of 7 * 5 in dimension having a total of 35 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. One of the squares have been removed from the board in the position of the white coloured cell, as shown in the image. You have 17 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 17 dominoes in the checkerboard to exactly cover all the remaining 34 squares? Answer Yes or No.", "options": ["No", "Yes"], "answer": "Yes", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 1.0, 1.0]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]]], "rows": 7, "columns": 5, "removed_positions": [[0, 4]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 17, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 17}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0033.jpg", "question": "The checkerboard shown in the image was originally of 6 * 8 in dimension having a total of 48 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. Two of the squares have been removed from the board in the position of the white coloured cells, as shown in the image. You have 23 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 23 dominoes in the checkerboard to exactly cover all the remaining 46 squares? Answer Yes or No.", "options": ["No", "Yes"], "answer": "No", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 1.0, 1.0], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 1.0, 1.0], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]]], "rows": 6, "columns": 8, "removed_positions": [[1, 2], [2, 1]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 24, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 22}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0034.jpg", "question": "The checkerboard shown in the image was originally of 4 * 5 in dimension having a total of 20 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. Two of the squares have been removed from the board in the position of the white coloured cells, as shown in the image. You have 9 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 9 dominoes in the checkerboard to exactly cover all the remaining 18 squares? Answer Yes or No.", "options": ["Yes", "No"], "answer": "No", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 1.0, 1.0], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 1.0, 1.0], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]]], "rows": 4, "columns": 5, "removed_positions": [[1, 2], [3, 0]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 10, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 8}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0035.jpg", "question": "The checkerboard shown in the image was originally of 8 * 6 in dimension having a total of 48 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. Two of the squares have been removed from the board in the position of the white coloured cells, as shown in the image. You have 23 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 23 dominoes in the checkerboard to exactly cover all the remaining 46 squares? Answer Yes or No.", "options": ["No", "Yes"], "answer": "No", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 1.0, 1.0], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 1.0, 1.0], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]]], "rows": 8, "columns": 6, "removed_positions": [[0, 4], [6, 0]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 22, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 24}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0036.jpg", "question": "The checkerboard shown in the image was originally of 6 * 6 in dimension having a total of 36 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. Two of the squares have been removed from the board in the position of the white coloured cells, as shown in the image. You have 17 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 17 dominoes in the checkerboard to exactly cover all the remaining 34 squares? Answer Yes or No.", "options": ["Yes", "No"], "answer": "No", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 1.0, 1.0], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 1.0, 1.0]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]]], "rows": 6, "columns": 6, "removed_positions": [[0, 4], [1, 5]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 16, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 18}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0037.jpg", "question": "The checkerboard shown in the image was originally of 4 * 9 in dimension having a total of 36 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. Two of the squares have been removed from the board in the position of the white coloured cells, as shown in the image. You have 17 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 17 dominoes in the checkerboard to exactly cover all the remaining 34 squares? Answer Yes or No.", "options": ["No", "Yes"], "answer": "Yes", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 1.0, 1.0], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 1.0, 1.0], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]]], "rows": 4, "columns": 9, "removed_positions": [[1, 2], [2, 6]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 17, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 17}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0038.jpg", "question": "The checkerboard shown in the image was originally of 9 * 9 in dimension having a total of 81 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. One of the squares have been removed from the board in the position of the white coloured cell, as shown in the image. You have 40 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 40 dominoes in the checkerboard to exactly cover all the remaining 80 squares? Answer Yes or No.", "options": ["Yes", "No"], "answer": "Yes", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 1.0, 1.0], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]]], "rows": 9, "columns": 9, "removed_positions": [[0, 6]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 40, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 40}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0039.jpg", "question": "The checkerboard shown in the image was originally of 7 * 7 in dimension having a total of 49 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. One of the squares have been removed from the board in the position of the white coloured cell, as shown in the image. You have 24 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 24 dominoes in the checkerboard to exactly cover all the remaining 48 squares? Answer Yes or No.", "options": ["No", "Yes"], "answer": "Yes", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 1.0, 1.0], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]]], "rows": 7, "columns": 7, "removed_positions": [[5, 3]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 24, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 24}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0040.jpg", "question": "The checkerboard shown in the image was originally of 5 * 6 in dimension having a total of 30 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. Two of the squares have been removed from the board in the position of the white coloured cells, as shown in the image. You have 14 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 14 dominoes in the checkerboard to exactly cover all the remaining 28 squares? Answer Yes or No.", "options": ["No", "Yes"], "answer": "Yes", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 1.0, 1.0], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 1.0, 1.0], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]]], "rows": 5, "columns": 6, "removed_positions": [[1, 0], [2, 0]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 14, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 14}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0041.jpg", "question": "The checkerboard shown in the image was originally of 7 * 7 in dimension having a total of 49 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. One of the squares have been removed from the board in the position of the white coloured cell, as shown in the image. You have 24 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 24 dominoes in the checkerboard to exactly cover all the remaining 48 squares? Answer Yes or No.", "options": ["Yes", "No"], "answer": "Yes", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 1.0, 1.0], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]]], "rows": 7, "columns": 7, "removed_positions": [[4, 2]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 24, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 24}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0042.jpg", "question": "The checkerboard shown in the image was originally of 4 * 9 in dimension having a total of 36 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. Two of the squares have been removed from the board in the position of the white coloured cells, as shown in the image. You have 17 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 17 dominoes in the checkerboard to exactly cover all the remaining 34 squares? Answer Yes or No.", "options": ["No", "Yes"], "answer": "Yes", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 1.0, 1.0]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 1.0, 1.0], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]]], "rows": 4, "columns": 9, "removed_positions": [[2, 8], [3, 2]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 17, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 17}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0043.jpg", "question": "The checkerboard shown in the image was originally of 4 * 5 in dimension having a total of 20 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. Two of the squares have been removed from the board in the position of the white coloured cells, as shown in the image. You have 9 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 9 dominoes in the checkerboard to exactly cover all the remaining 18 squares? Answer Yes or No.", "options": ["No", "Yes"], "answer": "No", "solution": {"board": [[[1.0, 1.0, 1.0], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 1.0, 1.0], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]]], "rows": 4, "columns": 5, "removed_positions": [[0, 0], [1, 3]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 8, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 10}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0044.jpg", "question": "The checkerboard shown in the image was originally of 6 * 8 in dimension having a total of 48 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. Two of the squares have been removed from the board in the position of the white coloured cells, as shown in the image. You have 23 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 23 dominoes in the checkerboard to exactly cover all the remaining 46 squares? Answer Yes or No.", "options": ["Yes", "No"], "answer": "Yes", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 1.0, 1.0]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 1.0, 1.0], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]]], "rows": 6, "columns": 8, "removed_positions": [[0, 7], [1, 5]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 23, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 23}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0045.jpg", "question": "The checkerboard shown in the image was originally of 9 * 6 in dimension having a total of 54 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. Two of the squares have been removed from the board in the position of the white coloured cells, as shown in the image. You have 26 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 26 dominoes in the checkerboard to exactly cover all the remaining 52 squares? Answer Yes or No.", "options": ["No", "Yes"], "answer": "No", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 1.0, 1.0], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 1.0, 1.0], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]]], "rows": 9, "columns": 6, "removed_positions": [[2, 1], [5, 4]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 27, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 25}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0046.jpg", "question": "The checkerboard shown in the image was originally of 4 * 6 in dimension having a total of 24 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. Two of the squares have been removed from the board in the position of the white coloured cells, as shown in the image. You have 11 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 11 dominoes in the checkerboard to exactly cover all the remaining 22 squares? Answer Yes or No.", "options": ["No", "Yes"], "answer": "Yes", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 1.0, 1.0], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 1.0, 1.0]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]]], "rows": 4, "columns": 6, "removed_positions": [[2, 0], [2, 5]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 11, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 11}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0047.jpg", "question": "The checkerboard shown in the image was originally of 7 * 9 in dimension having a total of 63 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. One of the squares have been removed from the board in the position of the white coloured cell, as shown in the image. You have 31 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 31 dominoes in the checkerboard to exactly cover all the remaining 62 squares? Answer Yes or No.", "options": ["Yes", "No"], "answer": "Yes", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 1.0, 1.0], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]]], "rows": 7, "columns": 9, "removed_positions": [[4, 0]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 31, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 31}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0048.jpg", "question": "The checkerboard shown in the image was originally of 7 * 6 in dimension having a total of 42 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. Two of the squares have been removed from the board in the position of the white coloured cells, as shown in the image. You have 20 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 20 dominoes in the checkerboard to exactly cover all the remaining 40 squares? Answer Yes or No.", "options": ["No", "Yes"], "answer": "Yes", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 1.0, 1.0], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 1.0, 1.0]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]]], "rows": 7, "columns": 6, "removed_positions": [[0, 4], [2, 5]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 20, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 20}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0049.jpg", "question": "The checkerboard shown in the image was originally of 7 * 7 in dimension having a total of 49 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. One of the squares have been removed from the board in the position of the white coloured cell, as shown in the image. You have 24 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 24 dominoes in the checkerboard to exactly cover all the remaining 48 squares? Answer Yes or No.", "options": ["No", "Yes"], "answer": "No", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 1.0, 1.0], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]]], "rows": 7, "columns": 7, "removed_positions": [[4, 5]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 25, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 23}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0050.jpg", "question": "The checkerboard shown in the image was originally of 7 * 5 in dimension having a total of 35 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. One of the squares have been removed from the board in the position of the white coloured cell, as shown in the image. You have 17 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 17 dominoes in the checkerboard to exactly cover all the remaining 34 squares? Answer Yes or No.", "options": ["No", "Yes"], "answer": "Yes", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 1.0, 1.0], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]]], "rows": 7, "columns": 5, "removed_positions": [[3, 3]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 17, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 17}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0051.jpg", "question": "The checkerboard shown in the image was originally of 4 * 5 in dimension having a total of 20 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. Two of the squares have been removed from the board in the position of the white coloured cells, as shown in the image. You have 9 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 9 dominoes in the checkerboard to exactly cover all the remaining 18 squares? Answer Yes or No.", "options": ["Yes", "No"], "answer": "Yes", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 1.0, 1.0], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 1.0, 1.0], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]]], "rows": 4, "columns": 5, "removed_positions": [[1, 1], [2, 3]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 9, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 9}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0052.jpg", "question": "The checkerboard shown in the image was originally of 8 * 7 in dimension having a total of 56 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. Two of the squares have been removed from the board in the position of the white coloured cells, as shown in the image. You have 27 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 27 dominoes in the checkerboard to exactly cover all the remaining 54 squares? Answer Yes or No.", "options": ["No", "Yes"], "answer": "Yes", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 1.0, 1.0], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 1.0, 1.0], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]]], "rows": 8, "columns": 7, "removed_positions": [[6, 3], [7, 3]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 27, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 27}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0053.jpg", "question": "The checkerboard shown in the image was originally of 6 * 7 in dimension having a total of 42 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. Two of the squares have been removed from the board in the position of the white coloured cells, as shown in the image. You have 20 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 20 dominoes in the checkerboard to exactly cover all the remaining 40 squares? Answer Yes or No.", "options": ["Yes", "No"], "answer": "No", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 1.0, 1.0], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 1.0, 1.0], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]]], "rows": 6, "columns": 7, "removed_positions": [[1, 2], [5, 0]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 21, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 19}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0054.jpg", "question": "The checkerboard shown in the image was originally of 6 * 7 in dimension having a total of 42 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. Two of the squares have been removed from the board in the position of the white coloured cells, as shown in the image. You have 20 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 20 dominoes in the checkerboard to exactly cover all the remaining 40 squares? Answer Yes or No.", "options": ["No", "Yes"], "answer": "No", "solution": {"board": [[[1.0, 1.0, 1.0], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 1.0, 1.0], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]]], "rows": 6, "columns": 7, "removed_positions": [[0, 0], [1, 3]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 19, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 21}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0055.jpg", "question": "The checkerboard shown in the image was originally of 7 * 6 in dimension having a total of 42 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. Two of the squares have been removed from the board in the position of the white coloured cells, as shown in the image. You have 20 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 20 dominoes in the checkerboard to exactly cover all the remaining 40 squares? Answer Yes or No.", "options": ["No", "Yes"], "answer": "No", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 1.0, 1.0]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 1.0, 1.0], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]]], "rows": 7, "columns": 6, "removed_positions": [[0, 5], [3, 4]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 21, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 19}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0056.jpg", "question": "The checkerboard shown in the image was originally of 7 * 6 in dimension having a total of 42 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. Two of the squares have been removed from the board in the position of the white coloured cells, as shown in the image. You have 20 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 20 dominoes in the checkerboard to exactly cover all the remaining 40 squares? Answer Yes or No.", "options": ["No", "Yes"], "answer": "No", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 1.0, 1.0], [1.0, 0.7647, 0.2235], [1.0, 1.0, 1.0], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]]], "rows": 7, "columns": 6, "removed_positions": [[0, 1], [0, 3]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 21, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 19}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0057.jpg", "question": "The checkerboard shown in the image was originally of 6 * 5 in dimension having a total of 30 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. Two of the squares have been removed from the board in the position of the white coloured cells, as shown in the image. You have 14 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 14 dominoes in the checkerboard to exactly cover all the remaining 28 squares? Answer Yes or No.", "options": ["No", "Yes"], "answer": "Yes", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 1.0, 1.0], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 1.0, 1.0], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]]], "rows": 6, "columns": 5, "removed_positions": [[1, 3], [5, 2]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 14, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 14}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0058.jpg", "question": "The checkerboard shown in the image was originally of 6 * 6 in dimension having a total of 36 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. Two of the squares have been removed from the board in the position of the white coloured cells, as shown in the image. You have 17 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 17 dominoes in the checkerboard to exactly cover all the remaining 34 squares? Answer Yes or No.", "options": ["Yes", "No"], "answer": "Yes", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 1.0, 1.0], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 1.0, 1.0], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]]], "rows": 6, "columns": 6, "removed_positions": [[3, 2], [4, 2]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 17, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 17}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0059.jpg", "question": "The checkerboard shown in the image was originally of 4 * 7 in dimension having a total of 28 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. Two of the squares have been removed from the board in the position of the white coloured cells, as shown in the image. You have 13 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 13 dominoes in the checkerboard to exactly cover all the remaining 26 squares? Answer Yes or No.", "options": ["No", "Yes"], "answer": "No", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 1.0, 1.0], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 1.0, 1.0], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]]], "rows": 4, "columns": 7, "removed_positions": [[2, 1], [3, 0]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 14, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 12}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0060.jpg", "question": "The checkerboard shown in the image was originally of 6 * 7 in dimension having a total of 42 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. Two of the squares have been removed from the board in the position of the white coloured cells, as shown in the image. You have 20 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 20 dominoes in the checkerboard to exactly cover all the remaining 40 squares? Answer Yes or No.", "options": ["No", "Yes"], "answer": "No", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 1.0, 1.0], [1.0, 0.902, 0.702], [1.0, 1.0, 1.0], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]]], "rows": 6, "columns": 7, "removed_positions": [[4, 0], [4, 2]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 19, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 21}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0061.jpg", "question": "The checkerboard shown in the image was originally of 9 * 6 in dimension having a total of 54 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. Two of the squares have been removed from the board in the position of the white coloured cells, as shown in the image. You have 26 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 26 dominoes in the checkerboard to exactly cover all the remaining 52 squares? Answer Yes or No.", "options": ["Yes", "No"], "answer": "Yes", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 1.0, 1.0], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 1.0, 1.0]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]]], "rows": 9, "columns": 6, "removed_positions": [[1, 1], [6, 5]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 26, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 26}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0062.jpg", "question": "The checkerboard shown in the image was originally of 9 * 9 in dimension having a total of 81 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. One of the squares have been removed from the board in the position of the white coloured cell, as shown in the image. You have 40 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 40 dominoes in the checkerboard to exactly cover all the remaining 80 squares? Answer Yes or No.", "options": ["No", "Yes"], "answer": "Yes", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 1.0, 1.0], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]]], "rows": 9, "columns": 9, "removed_positions": [[5, 1]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 40, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 40}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0063.jpg", "question": "The checkerboard shown in the image was originally of 6 * 5 in dimension having a total of 30 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. Two of the squares have been removed from the board in the position of the white coloured cells, as shown in the image. You have 14 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 14 dominoes in the checkerboard to exactly cover all the remaining 28 squares? Answer Yes or No.", "options": ["Yes", "No"], "answer": "No", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 1.0, 1.0], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 1.0, 1.0], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]]], "rows": 6, "columns": 5, "removed_positions": [[2, 2], [3, 3]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 13, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 15}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0064.jpg", "question": "The checkerboard shown in the image was originally of 9 * 7 in dimension having a total of 63 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. One of the squares have been removed from the board in the position of the white coloured cell, as shown in the image. You have 31 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 31 dominoes in the checkerboard to exactly cover all the remaining 62 squares? Answer Yes or No.", "options": ["No", "Yes"], "answer": "No", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 1.0, 1.0], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]]], "rows": 9, "columns": 7, "removed_positions": [[4, 3]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 32, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 30}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0065.jpg", "question": "The checkerboard shown in the image was originally of 9 * 9 in dimension having a total of 81 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. One of the squares have been removed from the board in the position of the white coloured cell, as shown in the image. You have 40 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 40 dominoes in the checkerboard to exactly cover all the remaining 80 squares? Answer Yes or No.", "options": ["Yes", "No"], "answer": "Yes", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 1.0, 1.0], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]]], "rows": 9, "columns": 9, "removed_positions": [[8, 4]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 40, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 40}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0066.jpg", "question": "The checkerboard shown in the image was originally of 9 * 5 in dimension having a total of 45 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. One of the squares have been removed from the board in the position of the white coloured cell, as shown in the image. You have 22 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 22 dominoes in the checkerboard to exactly cover all the remaining 44 squares? Answer Yes or No.", "options": ["No", "Yes"], "answer": "No", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 1.0, 1.0], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]]], "rows": 9, "columns": 5, "removed_positions": [[5, 2]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 23, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 21}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0067.jpg", "question": "The checkerboard shown in the image was originally of 4 * 6 in dimension having a total of 24 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. Two of the squares have been removed from the board in the position of the white coloured cells, as shown in the image. You have 11 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 11 dominoes in the checkerboard to exactly cover all the remaining 22 squares? Answer Yes or No.", "options": ["No", "Yes"], "answer": "Yes", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 1.0, 1.0], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 1.0, 1.0], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]]], "rows": 4, "columns": 6, "removed_positions": [[0, 3], [3, 3]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 11, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 11}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0068.jpg", "question": "The checkerboard shown in the image was originally of 9 * 7 in dimension having a total of 63 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. One of the squares have been removed from the board in the position of the white coloured cell, as shown in the image. You have 31 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 31 dominoes in the checkerboard to exactly cover all the remaining 62 squares? Answer Yes or No.", "options": ["Yes", "No"], "answer": "No", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 1.0, 1.0], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]]], "rows": 9, "columns": 7, "removed_positions": [[5, 4]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 32, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 30}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0069.jpg", "question": "The checkerboard shown in the image was originally of 9 * 9 in dimension having a total of 81 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. One of the squares have been removed from the board in the position of the white coloured cell, as shown in the image. You have 40 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 40 dominoes in the checkerboard to exactly cover all the remaining 80 squares? Answer Yes or No.", "options": ["Yes", "No"], "answer": "Yes", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 1.0, 1.0], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]]], "rows": 9, "columns": 9, "removed_positions": [[8, 0]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 40, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 40}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0070.jpg", "question": "The checkerboard shown in the image was originally of 8 * 5 in dimension having a total of 40 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. Two of the squares have been removed from the board in the position of the white coloured cells, as shown in the image. You have 19 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 19 dominoes in the checkerboard to exactly cover all the remaining 38 squares? Answer Yes or No.", "options": ["Yes", "No"], "answer": "No", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 1.0, 1.0], [1.0, 0.7647, 0.2235], [1.0, 1.0, 1.0], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]]], "rows": 8, "columns": 5, "removed_positions": [[6, 1], [6, 3]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 20, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 18}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0071.jpg", "question": "The checkerboard shown in the image was originally of 5 * 9 in dimension having a total of 45 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. One of the squares have been removed from the board in the position of the white coloured cell, as shown in the image. You have 22 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 22 dominoes in the checkerboard to exactly cover all the remaining 44 squares? Answer Yes or No.", "options": ["Yes", "No"], "answer": "Yes", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 1.0, 1.0], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]]], "rows": 5, "columns": 9, "removed_positions": [[1, 3]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 22, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 22}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0072.jpg", "question": "The checkerboard shown in the image was originally of 8 * 6 in dimension having a total of 48 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. Two of the squares have been removed from the board in the position of the white coloured cells, as shown in the image. You have 23 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 23 dominoes in the checkerboard to exactly cover all the remaining 46 squares? Answer Yes or No.", "options": ["Yes", "No"], "answer": "No", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 1.0, 1.0], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 1.0, 1.0], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]]], "rows": 8, "columns": 6, "removed_positions": [[1, 1], [4, 0]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 22, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 24}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0073.jpg", "question": "The checkerboard shown in the image was originally of 8 * 9 in dimension having a total of 72 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. Two of the squares have been removed from the board in the position of the white coloured cells, as shown in the image. You have 35 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 35 dominoes in the checkerboard to exactly cover all the remaining 70 squares? Answer Yes or No.", "options": ["No", "Yes"], "answer": "Yes", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 1.0, 1.0], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 1.0, 1.0], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]]], "rows": 8, "columns": 9, "removed_positions": [[1, 0], [7, 1]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 35, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 35}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0074.jpg", "question": "The checkerboard shown in the image was originally of 9 * 7 in dimension having a total of 63 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. One of the squares have been removed from the board in the position of the white coloured cell, as shown in the image. You have 31 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 31 dominoes in the checkerboard to exactly cover all the remaining 62 squares? Answer Yes or No.", "options": ["No", "Yes"], "answer": "Yes", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 1.0, 1.0], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]]], "rows": 9, "columns": 7, "removed_positions": [[8, 2]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 31, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 31}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0075.jpg", "question": "The checkerboard shown in the image was originally of 8 * 6 in dimension having a total of 48 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. Two of the squares have been removed from the board in the position of the white coloured cells, as shown in the image. You have 23 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 23 dominoes in the checkerboard to exactly cover all the remaining 46 squares? Answer Yes or No.", "options": ["Yes", "No"], "answer": "No", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 1.0, 1.0], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 1.0, 1.0], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]]], "rows": 8, "columns": 6, "removed_positions": [[0, 2], [2, 4]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 22, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 24}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0076.jpg", "question": "The checkerboard shown in the image was originally of 5 * 9 in dimension having a total of 45 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. One of the squares have been removed from the board in the position of the white coloured cell, as shown in the image. You have 22 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 22 dominoes in the checkerboard to exactly cover all the remaining 44 squares? Answer Yes or No.", "options": ["No", "Yes"], "answer": "Yes", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 1.0, 1.0], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]]], "rows": 5, "columns": 9, "removed_positions": [[1, 5]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 22, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 22}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0077.jpg", "question": "The checkerboard shown in the image was originally of 4 * 7 in dimension having a total of 28 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. Two of the squares have been removed from the board in the position of the white coloured cells, as shown in the image. You have 13 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 13 dominoes in the checkerboard to exactly cover all the remaining 26 squares? Answer Yes or No.", "options": ["No", "Yes"], "answer": "Yes", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 1.0, 1.0], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 1.0, 1.0], [1.0, 0.902, 0.702]]], "rows": 4, "columns": 7, "removed_positions": [[2, 5], [3, 5]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 13, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 13}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0078.jpg", "question": "The checkerboard shown in the image was originally of 9 * 6 in dimension having a total of 54 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. Two of the squares have been removed from the board in the position of the white coloured cells, as shown in the image. You have 26 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 26 dominoes in the checkerboard to exactly cover all the remaining 52 squares? Answer Yes or No.", "options": ["Yes", "No"], "answer": "No", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 1.0, 1.0], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 1.0, 1.0]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]]], "rows": 9, "columns": 6, "removed_positions": [[0, 3], [6, 5]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 27, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 25}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0079.jpg", "question": "The checkerboard shown in the image was originally of 8 * 7 in dimension having a total of 56 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. Two of the squares have been removed from the board in the position of the white coloured cells, as shown in the image. You have 27 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 27 dominoes in the checkerboard to exactly cover all the remaining 54 squares? Answer Yes or No.", "options": ["No", "Yes"], "answer": "No", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 1.0, 1.0], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 1.0, 1.0], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]]], "rows": 8, "columns": 7, "removed_positions": [[2, 4], [4, 0]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 26, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 28}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0080.jpg", "question": "The checkerboard shown in the image was originally of 8 * 7 in dimension having a total of 56 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. Two of the squares have been removed from the board in the position of the white coloured cells, as shown in the image. You have 27 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 27 dominoes in the checkerboard to exactly cover all the remaining 54 squares? Answer Yes or No.", "options": ["No", "Yes"], "answer": "No", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 1.0, 1.0], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 1.0, 1.0], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]]], "rows": 8, "columns": 7, "removed_positions": [[1, 2], [3, 0]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 28, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 26}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0081.jpg", "question": "The checkerboard shown in the image was originally of 5 * 6 in dimension having a total of 30 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. Two of the squares have been removed from the board in the position of the white coloured cells, as shown in the image. You have 14 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 14 dominoes in the checkerboard to exactly cover all the remaining 28 squares? Answer Yes or No.", "options": ["Yes", "No"], "answer": "Yes", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 1.0, 1.0], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 1.0, 1.0], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]]], "rows": 5, "columns": 6, "removed_positions": [[2, 3], [3, 3]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 14, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 14}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0082.jpg", "question": "The checkerboard shown in the image was originally of 5 * 8 in dimension having a total of 40 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. Two of the squares have been removed from the board in the position of the white coloured cells, as shown in the image. You have 19 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 19 dominoes in the checkerboard to exactly cover all the remaining 38 squares? Answer Yes or No.", "options": ["Yes", "No"], "answer": "Yes", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 1.0, 1.0], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 1.0, 1.0], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]]], "rows": 5, "columns": 8, "removed_positions": [[2, 5], [3, 3]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 19, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 19}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0083.jpg", "question": "The checkerboard shown in the image was originally of 7 * 9 in dimension having a total of 63 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. One of the squares have been removed from the board in the position of the white coloured cell, as shown in the image. You have 31 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 31 dominoes in the checkerboard to exactly cover all the remaining 62 squares? Answer Yes or No.", "options": ["No", "Yes"], "answer": "No", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 1.0, 1.0], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]]], "rows": 7, "columns": 9, "removed_positions": [[3, 4]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 32, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 30}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0084.jpg", "question": "The checkerboard shown in the image was originally of 5 * 7 in dimension having a total of 35 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. One of the squares have been removed from the board in the position of the white coloured cell, as shown in the image. You have 17 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 17 dominoes in the checkerboard to exactly cover all the remaining 34 squares? Answer Yes or No.", "options": ["No", "Yes"], "answer": "Yes", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 1.0, 1.0], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]]], "rows": 5, "columns": 7, "removed_positions": [[2, 0]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 17, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 17}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0085.jpg", "question": "The checkerboard shown in the image was originally of 6 * 9 in dimension having a total of 54 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. Two of the squares have been removed from the board in the position of the white coloured cells, as shown in the image. You have 26 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 26 dominoes in the checkerboard to exactly cover all the remaining 52 squares? Answer Yes or No.", "options": ["Yes", "No"], "answer": "No", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 1.0, 1.0], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 1.0, 1.0], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]]], "rows": 6, "columns": 9, "removed_positions": [[0, 3], [5, 6]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 27, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 25}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0086.jpg", "question": "The checkerboard shown in the image was originally of 9 * 7 in dimension having a total of 63 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. One of the squares have been removed from the board in the position of the white coloured cell, as shown in the image. You have 31 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 31 dominoes in the checkerboard to exactly cover all the remaining 62 squares? Answer Yes or No.", "options": ["No", "Yes"], "answer": "No", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 1.0, 1.0], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]]], "rows": 9, "columns": 7, "removed_positions": [[3, 4]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 32, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 30}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0087.jpg", "question": "The checkerboard shown in the image was originally of 6 * 5 in dimension having a total of 30 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. Two of the squares have been removed from the board in the position of the white coloured cells, as shown in the image. You have 14 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 14 dominoes in the checkerboard to exactly cover all the remaining 28 squares? Answer Yes or No.", "options": ["Yes", "No"], "answer": "Yes", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 1.0, 1.0]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 1.0, 1.0], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]]], "rows": 6, "columns": 5, "removed_positions": [[0, 4], [3, 2]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 14, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 14}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0088.jpg", "question": "The checkerboard shown in the image was originally of 8 * 7 in dimension having a total of 56 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. Two of the squares have been removed from the board in the position of the white coloured cells, as shown in the image. You have 27 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 27 dominoes in the checkerboard to exactly cover all the remaining 54 squares? Answer Yes or No.", "options": ["No", "Yes"], "answer": "Yes", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 1.0, 1.0], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 1.0, 1.0]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]]], "rows": 8, "columns": 7, "removed_positions": [[2, 5], [6, 6]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 27, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 27}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0089.jpg", "question": "The checkerboard shown in the image was originally of 5 * 9 in dimension having a total of 45 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. One of the squares have been removed from the board in the position of the white coloured cell, as shown in the image. You have 22 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 22 dominoes in the checkerboard to exactly cover all the remaining 44 squares? Answer Yes or No.", "options": ["No", "Yes"], "answer": "No", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 1.0, 1.0], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]]], "rows": 5, "columns": 9, "removed_positions": [[4, 1]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 23, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 21}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0090.jpg", "question": "The checkerboard shown in the image was originally of 5 * 8 in dimension having a total of 40 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. Two of the squares have been removed from the board in the position of the white coloured cells, as shown in the image. You have 19 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 19 dominoes in the checkerboard to exactly cover all the remaining 38 squares? Answer Yes or No.", "options": ["Yes", "No"], "answer": "No", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 1.0, 1.0], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 1.0, 1.0], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]]], "rows": 5, "columns": 8, "removed_positions": [[2, 6], [3, 3]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 18, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 20}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0091.jpg", "question": "The checkerboard shown in the image was originally of 4 * 9 in dimension having a total of 36 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. Two of the squares have been removed from the board in the position of the white coloured cells, as shown in the image. You have 17 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 17 dominoes in the checkerboard to exactly cover all the remaining 34 squares? Answer Yes or No.", "options": ["Yes", "No"], "answer": "Yes", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 1.0, 1.0], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 1.0, 1.0], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]]], "rows": 4, "columns": 9, "removed_positions": [[0, 4], [3, 6]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 17, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 17}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0092.jpg", "question": "The checkerboard shown in the image was originally of 8 * 5 in dimension having a total of 40 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. Two of the squares have been removed from the board in the position of the white coloured cells, as shown in the image. You have 19 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 19 dominoes in the checkerboard to exactly cover all the remaining 38 squares? Answer Yes or No.", "options": ["No", "Yes"], "answer": "Yes", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 1.0, 1.0], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 1.0, 1.0], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]]], "rows": 8, "columns": 5, "removed_positions": [[1, 1], [5, 2]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 19, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 19}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0093.jpg", "question": "The checkerboard shown in the image was originally of 5 * 7 in dimension having a total of 35 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. One of the squares have been removed from the board in the position of the white coloured cell, as shown in the image. You have 17 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 17 dominoes in the checkerboard to exactly cover all the remaining 34 squares? Answer Yes or No.", "options": ["No", "Yes"], "answer": "No", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 1.0, 1.0]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]]], "rows": 5, "columns": 7, "removed_positions": [[3, 6]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 18, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 16}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0094.jpg", "question": "The checkerboard shown in the image was originally of 7 * 5 in dimension having a total of 35 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. One of the squares have been removed from the board in the position of the white coloured cell, as shown in the image. You have 17 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 17 dominoes in the checkerboard to exactly cover all the remaining 34 squares? Answer Yes or No.", "options": ["Yes", "No"], "answer": "Yes", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 1.0, 1.0], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]]], "rows": 7, "columns": 5, "removed_positions": [[2, 0]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 17, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 17}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0095.jpg", "question": "The checkerboard shown in the image was originally of 4 * 7 in dimension having a total of 28 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. Two of the squares have been removed from the board in the position of the white coloured cells, as shown in the image. You have 13 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 13 dominoes in the checkerboard to exactly cover all the remaining 26 squares? Answer Yes or No.", "options": ["Yes", "No"], "answer": "Yes", "solution": {"board": [[[1.0, 1.0, 1.0], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 1.0, 1.0], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]]], "rows": 4, "columns": 7, "removed_positions": [[0, 0], [1, 0]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 13, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 13}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0096.jpg", "question": "The checkerboard shown in the image was originally of 6 * 5 in dimension having a total of 30 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. Two of the squares have been removed from the board in the position of the white coloured cells, as shown in the image. You have 14 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 14 dominoes in the checkerboard to exactly cover all the remaining 28 squares? Answer Yes or No.", "options": ["Yes", "No"], "answer": "Yes", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 1.0, 1.0], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 1.0, 1.0], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]]], "rows": 6, "columns": 5, "removed_positions": [[1, 2], [4, 0]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 14, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 14}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0097.jpg", "question": "The checkerboard shown in the image was originally of 7 * 8 in dimension having a total of 56 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. Two of the squares have been removed from the board in the position of the white coloured cells, as shown in the image. You have 27 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 27 dominoes in the checkerboard to exactly cover all the remaining 54 squares? Answer Yes or No.", "options": ["Yes", "No"], "answer": "Yes", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 1.0, 1.0], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 1.0, 1.0], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]]], "rows": 7, "columns": 8, "removed_positions": [[5, 0], [5, 3]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 27, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 27}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0098.jpg", "question": "The checkerboard shown in the image was originally of 7 * 7 in dimension having a total of 49 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. One of the squares have been removed from the board in the position of the white coloured cell, as shown in the image. You have 24 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 24 dominoes in the checkerboard to exactly cover all the remaining 48 squares? Answer Yes or No.", "options": ["Yes", "No"], "answer": "Yes", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 1.0, 1.0], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]]], "rows": 7, "columns": 7, "removed_positions": [[0, 4]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 24, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 24}, "source_file": "board_tile.json"}
{"image": "images/board_tile/board_tile_0099.jpg", "question": "The checkerboard shown in the image was originally of 9 * 8 in dimension having a total of 72 squares. It uses two colours of squares, one light yellow and one dark yellow, in a chequered pattern. Two of the squares have been removed from the board in the position of the white coloured cells, as shown in the image. You have 35 dominoes of size 2 * 1. You can use them as is or you can rotate them to use as a 1 * 2 domino. Is it possible to place all the 35 dominoes in the checkerboard to exactly cover all the remaining 70 squares? Answer Yes or No.", "options": ["No", "Yes"], "answer": "Yes", "solution": {"board": [[[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 1.0, 1.0], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 1.0, 1.0], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]], [[1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235]], [[1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702], [1.0, 0.7647, 0.2235], [1.0, 0.902, 0.702]]], "rows": 9, "columns": 8, "removed_positions": [[1, 0], [4, 0]], "color1": [1.0, 0.7647, 0.2235], "squares_of_color1": 35, "color2": [1.0, 0.902, 0.702], "squares_of_color2": 35}, "source_file": "board_tile.json"}
{"image": "images/checker_move/checker_move_0000.jpg", "question": "A checker game is being played on a grid of 4 squares with 1 green and 2 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 3 checkers occupying 3 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["0", "5", "4", "3"], "answer": "5", "solution": {"start_position": "G_RR", "end_position": "RR_G", "green_checkers": 1, "red_checkers": 2, "moves": ["G_RR", "_GRR", "RG_R", "R_GR", "RRG_", "RR_G"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0001.jpg", "question": "A checker game is being played on a grid of 5 squares with 1 green and 3 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 4 checkers occupying 4 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["8", "2", "4", "7"], "answer": "7", "solution": {"start_position": "G_RRR", "end_position": "RRR_G", "green_checkers": 1, "red_checkers": 3, "moves": ["G_RRR", "_GRRR", "RG_RR", "R_GRR", "RRG_R", "RR_GR", "RRRG_", "RRR_G"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0002.jpg", "question": "A checker game is being played on a grid of 6 squares with 1 green and 4 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 5 checkers occupying 5 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["4", "9", "2", "1"], "answer": "9", "solution": {"start_position": "G_RRRR", "end_position": "RRRR_G", "green_checkers": 1, "red_checkers": 4, "moves": ["G_RRRR", "_GRRRR", "RG_RRR", "R_GRRR", "RRG_RR", "RR_GRR", "RRRG_R", "RRR_GR", "RRRRG_", "RRRR_G"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0003.jpg", "question": "A checker game is being played on a grid of 7 squares with 1 green and 5 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 6 checkers occupying 6 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["4", "47", "6", "11"], "answer": "11", "solution": {"start_position": "G_RRRRR", "end_position": "RRRRR_G", "green_checkers": 1, "red_checkers": 5, "moves": ["G_RRRRR", "_GRRRRR", "RG_RRRR", "R_GRRRR", "RRG_RRR", "RR_GRRR", "RRRG_RR", "RRR_GRR", "RRRRG_R", "RRRR_GR", "RRRRRG_", "RRRRR_G"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0004.jpg", "question": "A checker game is being played on a grid of 4 squares with 2 green and 1 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 3 checkers occupying 3 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["2", "4", "5", "3"], "answer": "5", "solution": {"start_position": "GG_R", "end_position": "R_GG", "green_checkers": 2, "red_checkers": 1, "moves": ["GG_R", "G_GR", "GRG_", "GR_G", "_RGG", "R_GG"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0005.jpg", "question": "A checker game is being played on a grid of 5 squares with 2 green and 2 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 4 checkers occupying 4 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["9", "8", "4", "0"], "answer": "8", "solution": {"start_position": "GG_RR", "end_position": "RR_GG", "green_checkers": 2, "red_checkers": 2, "moves": ["GG_RR", "G_GRR", "GRG_R", "GRGR_", "GR_RG", "_RGRG", "R_GRG", "RRG_G", "RR_GG"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0006.jpg", "question": "A checker game is being played on a grid of 6 squares with 2 green and 3 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 5 checkers occupying 5 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["32", "22", "11", "40"], "answer": "11", "solution": {"start_position": "GG_RRR", "end_position": "RRR_GG", "green_checkers": 2, "red_checkers": 3, "moves": ["GG_RRR", "G_GRRR", "GRG_RR", "GRGR_R", "GR_RGR", "_RGRGR", "R_GRGR", "RRG_GR", "RRGRG_", "RRGR_G", "RR_RGG", "RRR_GG"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0007.jpg", "question": "A checker game is being played on a grid of 7 squares with 2 green and 4 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 6 checkers occupying 6 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["37", "12", "14", "15"], "answer": "14", "solution": {"start_position": "GG_RRRR", "end_position": "RRRR_GG", "green_checkers": 2, "red_checkers": 4, "moves": ["GG_RRRR", "G_GRRRR", "GRG_RRR", "GRGR_RR", "GR_RGRR", "_RGRGRR", "R_GRGRR", "RRG_GRR", "RRGRG_R", "RRGRGR_", "RRGR_RG", "RR_RGRG", "RRR_GRG", "RRRRG_G", "RRRR_GG"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0008.jpg", "question": "A checker game is being played on a grid of 8 squares with 2 green and 5 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 7 checkers occupying 7 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["17", "5", "21", "33"], "answer": "17", "solution": {"start_position": "GG_RRRRR", "end_position": "RRRRR_GG", "green_checkers": 2, "red_checkers": 5, "moves": ["GG_RRRRR", "G_GRRRRR", "GRG_RRRR", "GRGR_RRR", "GR_RGRRR", "_RGRGRRR", "R_GRGRRR", "RRG_GRRR", "RRGRG_RR", "RRGRGR_R", "RRGR_RGR", "RR_RGRGR", "RRR_GRGR", "RRRRG_GR", "RRRRGRG_", "RRRRGR_G", "RRRR_RGG", "RRRRR_GG"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0009.jpg", "question": "A checker game is being played on a grid of 5 squares with 3 green and 1 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 4 checkers occupying 4 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["5", "6", "7", "1"], "answer": "7", "solution": {"start_position": "GGG_R", "end_position": "R_GGG", "green_checkers": 3, "red_checkers": 1, "moves": ["GGG_R", "GG_GR", "GGRG_", "GGR_G", "G_RGG", "_GRGG", "RG_GG", "R_GGG"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0010.jpg", "question": "A checker game is being played on a grid of 6 squares with 3 green and 2 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 5 checkers occupying 5 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["25", "11", "5", "39"], "answer": "11", "solution": {"start_position": "GGG_RR", "end_position": "RR_GGG", "green_checkers": 3, "red_checkers": 2, "moves": ["GGG_RR", "GG_GRR", "GGRG_R", "GGRGR_", "GGR_RG", "G_RGRG", "_GRGRG", "RG_GRG", "RGRG_G", "RGR_GG", "R_RGGG", "RR_GGG"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0011.jpg", "question": "A checker game is being played on a grid of 7 squares with 3 green and 3 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 6 checkers occupying 6 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["2", "12", "11", "15"], "answer": "15", "solution": {"start_position": "GGG_RRR", "end_position": "RRR_GGG", "green_checkers": 3, "red_checkers": 3, "moves": ["GGG_RRR", "GG_GRRR", "GGRG_RR", "GGRGR_R", "GGR_RGR", "G_RGRGR", "_GRGRGR", "RG_GRGR", "RGRG_GR", "RGRGRG_", "RGRGR_G", "RGR_RGG", "R_RGRGG", "RR_GRGG", "RRRG_GG", "RRR_GGG"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0012.jpg", "question": "A checker game is being played on a grid of 8 squares with 3 green and 4 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 7 checkers occupying 7 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["49", "44", "8", "19"], "answer": "19", "solution": {"start_position": "GGG_RRRR", "end_position": "RRRR_GGG", "green_checkers": 3, "red_checkers": 4, "moves": ["GGG_RRRR", "GG_GRRRR", "GGRG_RRR", "GGRGR_RR", "GGR_RGRR", "G_RGRGRR", "_GRGRGRR", "RG_GRGRR", "RGRG_GRR", "RGRGRG_R", "RGRGRGR_", "RGRGR_RG", "RGR_RGRG", "R_RGRGRG", "RR_GRGRG", "RRRG_GRG", "RRRGRG_G", "RRRGR_GG", "RRR_RGGG", "RRRR_GGG"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0013.jpg", "question": "A checker game is being played on a grid of 9 squares with 3 green and 5 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 8 checkers occupying 8 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["34", "46", "23", "17"], "answer": "23", "solution": {"start_position": "GGG_RRRRR", "end_position": "RRRRR_GGG", "green_checkers": 3, "red_checkers": 5, "moves": ["GGG_RRRRR", "GG_GRRRRR", "GGRG_RRRR", "GGRGR_RRR", "GGR_RGRRR", "G_RGRGRRR", "_GRGRGRRR", "RG_GRGRRR", "RGRG_GRRR", "RGRGRG_RR", "RGRGRGR_R", "RGRGR_RGR", "RGR_RGRGR", "R_RGRGRGR", "RR_GRGRGR", "RRRG_GRGR", "RRRGRG_GR", "RRRGRGRG_", "RRRGRGR_G", "RRRGR_RGG", "RRR_RGRGG", "RRRR_GRGG", "RRRRRG_GG", "RRRRR_GGG"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0014.jpg", "question": "A checker game is being played on a grid of 6 squares with 4 green and 1 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 5 checkers occupying 5 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["5", "7", "8", "9"], "answer": "9", "solution": {"start_position": "GGGG_R", "end_position": "R_GGGG", "green_checkers": 4, "red_checkers": 1, "moves": ["GGGG_R", "GGG_GR", "GGGRG_", "GGGR_G", "GG_RGG", "G_GRGG", "GRG_GG", "GR_GGG", "_RGGGG", "R_GGGG"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0015.jpg", "question": "A checker game is being played on a grid of 7 squares with 4 green and 2 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 6 checkers occupying 6 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["41", "32", "14", "38"], "answer": "14", "solution": {"start_position": "GGGG_RR", "end_position": "RR_GGGG", "green_checkers": 4, "red_checkers": 2, "moves": ["GGGG_RR", "GGG_GRR", "GGGRG_R", "GGGRGR_", "GGGR_RG", "GG_RGRG", "G_GRGRG", "GRG_GRG", "GRGRG_G", "GRGR_GG", "GR_RGGG", "_RGRGGG", "R_GRGGG", "RRG_GGG", "RR_GGGG"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0016.jpg", "question": "A checker game is being played on a grid of 8 squares with 4 green and 3 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 7 checkers occupying 7 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["17", "19", "47", "7"], "answer": "19", "solution": {"start_position": "GGGG_RRR", "end_position": "RRR_GGGG", "green_checkers": 4, "red_checkers": 3, "moves": ["GGGG_RRR", "GGG_GRRR", "GGGRG_RR", "GGGRGR_R", "GGGR_RGR", "GG_RGRGR", "G_GRGRGR", "GRG_GRGR", "GRGRG_GR", "GRGRGRG_", "GRGRGR_G", "GRGR_RGG", "GR_RGRGG", "_RGRGRGG", "R_GRGRGG", "RRG_GRGG", "RRGRG_GG", "RRGR_GGG", "RR_RGGGG", "RRR_GGGG"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0017.jpg", "question": "A checker game is being played on a grid of 9 squares with 4 green and 4 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 8 checkers occupying 8 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["3", "6", "28", "24"], "answer": "24", "solution": {"start_position": "GGGG_RRRR", "end_position": "RRRR_GGGG", "green_checkers": 4, "red_checkers": 4, "moves": ["GGGG_RRRR", "GGG_GRRRR", "GGGRG_RRR", "GGGRGR_RR", "GGGR_RGRR", "GG_RGRGRR", "G_GRGRGRR", "GRG_GRGRR", "GRGRG_GRR", "GRGRGRG_R", "GRGRGRGR_", "GRGRGR_RG", "GRGR_RGRG", "GR_RGRGRG", "_RGRGRGRG", "R_GRGRGRG", "RRG_GRGRG", "RRGRG_GRG", "RRGRGRG_G", "RRGRGR_GG", "RRGR_RGGG", "RR_RGRGGG", "RRR_GRGGG", "RRRRG_GGG", "RRRR_GGGG"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0018.jpg", "question": "A checker game is being played on a grid of 10 squares with 4 green and 5 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 9 checkers occupying 9 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["37", "29", "35", "41"], "answer": "29", "solution": {"start_position": "GGGG_RRRRR", "end_position": "RRRRR_GGGG", "green_checkers": 4, "red_checkers": 5, "moves": ["GGGG_RRRRR", "GGG_GRRRRR", "GGGRG_RRRR", "GGGRGR_RRR", "GGGR_RGRRR", "GG_RGRGRRR", "G_GRGRGRRR", "GRG_GRGRRR", "GRGRG_GRRR", "GRGRGRG_RR", "GRGRGRGR_R", "GRGRGR_RGR", "GRGR_RGRGR", "GR_RGRGRGR", "_RGRGRGRGR", "R_GRGRGRGR", "RRG_GRGRGR", "RRGRG_GRGR", "RRGRGRG_GR", "RRGRGRGRG_", "RRGRGRGR_G", "RRGRGR_RGG", "RRGR_RGRGG", "RR_RGRGRGG", "RRR_GRGRGG", "RRRRG_GRGG", "RRRRGRG_GG", "RRRRGR_GGG", "RRRR_RGGGG", "RRRRR_GGGG"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0019.jpg", "question": "A checker game is being played on a grid of 7 squares with 5 green and 1 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 6 checkers occupying 6 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["11", "39", "37", "7"], "answer": "11", "solution": {"start_position": "GGGGG_R", "end_position": "R_GGGGG", "green_checkers": 5, "red_checkers": 1, "moves": ["GGGGG_R", "GGGG_GR", "GGGGRG_", "GGGGR_G", "GGG_RGG", "GG_GRGG", "GGRG_GG", "GGR_GGG", "G_RGGGG", "_GRGGGG", "RG_GGGG", "R_GGGGG"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0020.jpg", "question": "A checker game is being played on a grid of 8 squares with 5 green and 2 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 7 checkers occupying 7 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["39", "2", "1", "17"], "answer": "17", "solution": {"start_position": "GGGGG_RR", "end_position": "RR_GGGGG", "green_checkers": 5, "red_checkers": 2, "moves": ["GGGGG_RR", "GGGG_GRR", "GGGGRG_R", "GGGGRGR_", "GGGGR_RG", "GGG_RGRG", "GG_GRGRG", "GGRG_GRG", "GGRGRG_G", "GGRGR_GG", "GGR_RGGG", "G_RGRGGG", "_GRGRGGG", "RG_GRGGG", "RGRG_GGG", "RGR_GGGG", "R_RGGGGG", "RR_GGGGG"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0021.jpg", "question": "A checker game is being played on a grid of 9 squares with 5 green and 3 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 8 checkers occupying 8 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["13", "3", "47", "23"], "answer": "23", "solution": {"start_position": "GGGGG_RRR", "end_position": "RRR_GGGGG", "green_checkers": 5, "red_checkers": 3, "moves": ["GGGGG_RRR", "GGGG_GRRR", "GGGGRG_RR", "GGGGRGR_R", "GGGGR_RGR", "GGG_RGRGR", "GG_GRGRGR", "GGRG_GRGR", "GGRGRG_GR", "GGRGRGRG_", "GGRGRGR_G", "GGRGR_RGG", "GGR_RGRGG", "G_RGRGRGG", "_GRGRGRGG", "RG_GRGRGG", "RGRG_GRGG", "RGRGRG_GG", "RGRGR_GGG", "RGR_RGGGG", "R_RGRGGGG", "RR_GRGGGG", "RRRG_GGGG", "RRR_GGGGG"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0022.jpg", "question": "A checker game is being played on a grid of 10 squares with 5 green and 4 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 9 checkers occupying 9 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["16", "14", "4", "29"], "answer": "29", "solution": {"start_position": "GGGGG_RRRR", "end_position": "RRRR_GGGGG", "green_checkers": 5, "red_checkers": 4, "moves": ["GGGGG_RRRR", "GGGG_GRRRR", "GGGGRG_RRR", "GGGGRGR_RR", "GGGGR_RGRR", "GGG_RGRGRR", "GG_GRGRGRR", "GGRG_GRGRR", "GGRGRG_GRR", "GGRGRGRG_R", "GGRGRGRGR_", "GGRGRGR_RG", "GGRGR_RGRG", "GGR_RGRGRG", "G_RGRGRGRG", "_GRGRGRGRG", "RG_GRGRGRG", "RGRG_GRGRG", "RGRGRG_GRG", "RGRGRGRG_G", "RGRGRGR_GG", "RGRGR_RGGG", "RGR_RGRGGG", "R_RGRGRGGG", "RR_GRGRGGG", "RRRG_GRGGG", "RRRGRG_GGG", "RRRGR_GGGG", "RRR_RGGGGG", "RRRR_GGGGG"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0023.jpg", "question": "A checker game is being played on a grid of 11 squares with 5 green and 5 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 10 checkers occupying 10 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["35", "27", "3", "11"], "answer": "35", "solution": {"start_position": "GGGGG_RRRRR", "end_position": "RRRRR_GGGGG", "green_checkers": 5, "red_checkers": 5, "moves": ["GGGGG_RRRRR", "GGGG_GRRRRR", "GGGGRG_RRRR", "GGGGRGR_RRR", "GGGGR_RGRRR", "GGG_RGRGRRR", "GG_GRGRGRRR", "GGRG_GRGRRR", "GGRGRG_GRRR", "GGRGRGRG_RR", "GGRGRGRGR_R", "GGRGRGR_RGR", "GGRGR_RGRGR", "GGR_RGRGRGR", "G_RGRGRGRGR", "_GRGRGRGRGR", "RG_GRGRGRGR", "RGRG_GRGRGR", "RGRGRG_GRGR", "RGRGRGRG_GR", "RGRGRGRGRG_", "RGRGRGRGR_G", "RGRGRGR_RGG", "RGRGR_RGRGG", "RGR_RGRGRGG", "R_RGRGRGRGG", "RR_GRGRGRGG", "RRRG_GRGRGG", "RRRGRG_GRGG", "RRRGRGRG_GG", "RRRGRGR_GGG", "RRRGR_RGGGG", "RRR_RGRGGGG", "RRRR_GRGGGG", "RRRRRG_GGGG", "RRRRR_GGGGG"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0024.jpg", "question": "A checker game is being played on a grid of 6 squares with 3 green and 2 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 5 checkers occupying 5 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["3", "5", "1", "2"], "answer": "3", "solution": {"start_position": "GGR_RG", "end_position": "RG_GRG", "green_checkers": 3, "red_checkers": 2, "moves": ["GGR_RG", "G_RGRG", "_GRGRG", "RG_GRG"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0025.jpg", "question": "A checker game is being played on a grid of 8 squares with 2 green and 5 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 7 checkers occupying 7 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["5", "4", "1", "0"], "answer": "4", "solution": {"start_position": "GG_RRRRR", "end_position": "GR_RGRRR", "green_checkers": 2, "red_checkers": 5, "moves": ["GG_RRRRR", "G_GRRRRR", "GRG_RRRR", "GRGR_RRR", "GR_RGRRR"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0026.jpg", "question": "A checker game is being played on a grid of 10 squares with 4 green and 5 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 9 checkers occupying 9 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["3", "5", "4", "2"], "answer": "4", "solution": {"start_position": "GRGRGRGR_R", "end_position": "_RGRGRGRGR", "green_checkers": 4, "red_checkers": 5, "moves": ["GRGRGRGR_R", "GRGRGR_RGR", "GRGR_RGRGR", "GR_RGRGRGR", "_RGRGRGRGR"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0027.jpg", "question": "A checker game is being played on a grid of 4 squares with 2 green and 1 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 3 checkers occupying 3 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["4", "3", "1", "5"], "answer": "1", "solution": {"start_position": "GR_G", "end_position": "_RGG", "green_checkers": 2, "red_checkers": 1, "moves": ["GR_G", "_RGG"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0028.jpg", "question": "A checker game is being played on a grid of 11 squares with 5 green and 5 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 10 checkers occupying 10 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["4", "0", "5", "1"], "answer": "5", "solution": {"start_position": "_GRGRGRGRGR", "end_position": "RGRGRGRGRG_", "green_checkers": 5, "red_checkers": 5, "moves": ["_GRGRGRGRGR", "RG_GRGRGRGR", "RGRG_GRGRGR", "RGRGRG_GRGR", "RGRGRGRG_GR", "RGRGRGRGRG_"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0029.jpg", "question": "A checker game is being played on a grid of 7 squares with 2 green and 4 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 6 checkers occupying 6 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["3", "4", "5", "1"], "answer": "4", "solution": {"start_position": "GG_RRRR", "end_position": "GR_RGRR", "green_checkers": 2, "red_checkers": 4, "moves": ["GG_RRRR", "G_GRRRR", "GRG_RRR", "GRGR_RR", "GR_RGRR"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0030.jpg", "question": "A checker game is being played on a grid of 8 squares with 4 green and 3 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 7 checkers occupying 7 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["2", "1", "5", "4"], "answer": "5", "solution": {"start_position": "GG_RGRGR", "end_position": "GRGRGR_G", "green_checkers": 4, "red_checkers": 3, "moves": ["GG_RGRGR", "G_GRGRGR", "GRG_GRGR", "GRGRG_GR", "GRGRGRG_", "GRGRGR_G"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0031.jpg", "question": "A checker game is being played on a grid of 8 squares with 2 green and 5 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 7 checkers occupying 7 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["3", "0", "2", "1"], "answer": "2", "solution": {"start_position": "R_GRGRRR", "end_position": "RRGRG_RR", "green_checkers": 2, "red_checkers": 5, "moves": ["R_GRGRRR", "RRG_GRRR", "RRGRG_RR"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0032.jpg", "question": "A checker game is being played on a grid of 11 squares with 5 green and 5 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 10 checkers occupying 10 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["2", "4", "5", "3"], "answer": "2", "solution": {"start_position": "GGRGRGRGR_R", "end_position": "GGRGR_RGRGR", "green_checkers": 5, "red_checkers": 5, "moves": ["GGRGRGRGR_R", "GGRGRGR_RGR", "GGRGR_RGRGR"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0033.jpg", "question": "A checker game is being played on a grid of 8 squares with 2 green and 5 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 7 checkers occupying 7 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["0", "1", "2", "4"], "answer": "2", "solution": {"start_position": "RRGR_RGR", "end_position": "RRR_GRGR", "green_checkers": 2, "red_checkers": 5, "moves": ["RRGR_RGR", "RR_RGRGR", "RRR_GRGR"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0034.jpg", "question": "A checker game is being played on a grid of 10 squares with 4 green and 5 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 9 checkers occupying 9 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["4", "5", "3", "2"], "answer": "5", "solution": {"start_position": "GGGRG_RRRR", "end_position": "GRG_GRGRRR", "green_checkers": 4, "red_checkers": 5, "moves": ["GGGRG_RRRR", "GGGRGR_RRR", "GGGR_RGRRR", "GG_RGRGRRR", "G_GRGRGRRR", "GRG_GRGRRR"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0035.jpg", "question": "A checker game is being played on a grid of 6 squares with 3 green and 2 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 5 checkers occupying 5 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["1", "3", "0", "4"], "answer": "1", "solution": {"start_position": "GGR_RG", "end_position": "G_RGRG", "green_checkers": 3, "red_checkers": 2, "moves": ["GGR_RG", "G_RGRG"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0036.jpg", "question": "A checker game is being played on a grid of 8 squares with 3 green and 4 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 7 checkers occupying 7 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["1", "4", "0", "3"], "answer": "1", "solution": {"start_position": "GGR_RGRR", "end_position": "G_RGRGRR", "green_checkers": 3, "red_checkers": 4, "moves": ["GGR_RGRR", "G_RGRGRR"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0037.jpg", "question": "A checker game is being played on a grid of 8 squares with 5 green and 2 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 7 checkers occupying 7 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["0", "3", "2", "5"], "answer": "3", "solution": {"start_position": "GGGGRG_R", "end_position": "GGG_RGRG", "green_checkers": 5, "red_checkers": 2, "moves": ["GGGGRG_R", "GGGGRGR_", "GGGGR_RG", "GGG_RGRG"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0038.jpg", "question": "A checker game is being played on a grid of 7 squares with 5 green and 1 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 6 checkers occupying 6 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["5", "2", "4", "3"], "answer": "4", "solution": {"start_position": "GGGGRG_", "end_position": "GGRG_GG", "green_checkers": 5, "red_checkers": 1, "moves": ["GGGGRG_", "GGGGR_G", "GGG_RGG", "GG_GRGG", "GGRG_GG"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0039.jpg", "question": "A checker game is being played on a grid of 7 squares with 2 green and 4 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 6 checkers occupying 6 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["1", "0", "5", "2"], "answer": "1", "solution": {"start_position": "GRGR_RR", "end_position": "GR_RGRR", "green_checkers": 2, "red_checkers": 4, "moves": ["GRGR_RR", "GR_RGRR"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0040.jpg", "question": "A checker game is being played on a grid of 8 squares with 3 green and 4 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 7 checkers occupying 7 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["2", "4", "5", "0"], "answer": "4", "solution": {"start_position": "G_RGRGRR", "end_position": "RGRGRG_R", "green_checkers": 3, "red_checkers": 4, "moves": ["G_RGRGRR", "_GRGRGRR", "RG_GRGRR", "RGRG_GRR", "RGRGRG_R"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0041.jpg", "question": "A checker game is being played on a grid of 10 squares with 4 green and 5 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 9 checkers occupying 9 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["2", "3", "1", "0"], "answer": "3", "solution": {"start_position": "GGGRG_RRRR", "end_position": "GG_RGRGRRR", "green_checkers": 4, "red_checkers": 5, "moves": ["GGGRG_RRRR", "GGGRGR_RRR", "GGGR_RGRRR", "GG_RGRGRRR"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0042.jpg", "question": "A checker game is being played on a grid of 7 squares with 2 green and 4 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 6 checkers occupying 6 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["2", "3", "0", "5"], "answer": "2", "solution": {"start_position": "GRG_RRR", "end_position": "GR_RGRR", "green_checkers": 2, "red_checkers": 4, "moves": ["GRG_RRR", "GRGR_RR", "GR_RGRR"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0043.jpg", "question": "A checker game is being played on a grid of 11 squares with 5 green and 5 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 10 checkers occupying 10 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["3", "0", "1", "2"], "answer": "3", "solution": {"start_position": "RGRGRGRG_GR", "end_position": "RGRGRGR_RGG", "green_checkers": 5, "red_checkers": 5, "moves": ["RGRGRGRG_GR", "RGRGRGRGRG_", "RGRGRGRGR_G", "RGRGRGR_RGG"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0044.jpg", "question": "A checker game is being played on a grid of 8 squares with 4 green and 3 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 7 checkers occupying 7 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["4", "5", "1", "2"], "answer": "1", "solution": {"start_position": "GGGRGR_R", "end_position": "GGGR_RGR", "green_checkers": 4, "red_checkers": 3, "moves": ["GGGRGR_R", "GGGR_RGR"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0045.jpg", "question": "A checker game is being played on a grid of 10 squares with 5 green and 4 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 9 checkers occupying 9 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["3", "2", "5", "0"], "answer": "5", "solution": {"start_position": "GGR_RGRGRG", "end_position": "RGRGRG_GRG", "green_checkers": 5, "red_checkers": 4, "moves": ["GGR_RGRGRG", "G_RGRGRGRG", "_GRGRGRGRG", "RG_GRGRGRG", "RGRG_GRGRG", "RGRGRG_GRG"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0046.jpg", "question": "A checker game is being played on a grid of 10 squares with 5 green and 4 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 9 checkers occupying 9 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["4", "2", "3", "5"], "answer": "2", "solution": {"start_position": "RR_GRGRGGG", "end_position": "RRRGRG_GGG", "green_checkers": 5, "red_checkers": 4, "moves": ["RR_GRGRGGG", "RRRG_GRGGG", "RRRGRG_GGG"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0047.jpg", "question": "A checker game is being played on a grid of 8 squares with 2 green and 5 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 7 checkers occupying 7 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["0", "4", "1", "5"], "answer": "5", "solution": {"start_position": "RRR_GRGR", "end_position": "RRRRR_GG", "green_checkers": 2, "red_checkers": 5, "moves": ["RRR_GRGR", "RRRRG_GR", "RRRRGRG_", "RRRRGR_G", "RRRR_RGG", "RRRRR_GG"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0048.jpg", "question": "A checker game is being played on a grid of 9 squares with 5 green and 3 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 8 checkers occupying 8 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["2", "4", "1", "3"], "answer": "2", "solution": {"start_position": "GGGGRGR_R", "end_position": "GGG_RGRGR", "green_checkers": 5, "red_checkers": 3, "moves": ["GGGGRGR_R", "GGGGR_RGR", "GGG_RGRGR"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0049.jpg", "question": "A checker game is being played on a grid of 7 squares with 2 green and 4 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 6 checkers occupying 6 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["4", "2", "3", "1"], "answer": "3", "solution": {"start_position": "RRGRGR_", "end_position": "RRR_GRG", "green_checkers": 2, "red_checkers": 4, "moves": ["RRGRGR_", "RRGR_RG", "RR_RGRG", "RRR_GRG"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0050.jpg", "question": "A checker game is being played on a grid of 11 squares with 5 green and 5 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 10 checkers occupying 10 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["2", "1", "4", "0"], "answer": "1", "solution": {"start_position": "RGR_RGRGRGG", "end_position": "R_RGRGRGRGG", "green_checkers": 5, "red_checkers": 5, "moves": ["RGR_RGRGRGG", "R_RGRGRGRGG"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0051.jpg", "question": "A checker game is being played on a grid of 7 squares with 2 green and 4 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 6 checkers occupying 6 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["5", "3", "2", "4"], "answer": "3", "solution": {"start_position": "G_GRRRR", "end_position": "GR_RGRR", "green_checkers": 2, "red_checkers": 4, "moves": ["G_GRRRR", "GRG_RRR", "GRGR_RR", "GR_RGRR"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0052.jpg", "question": "A checker game is being played on a grid of 9 squares with 4 green and 4 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 8 checkers occupying 8 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["1", "2", "0", "5"], "answer": "2", "solution": {"start_position": "GR_RGRGRG", "end_position": "R_GRGRGRG", "green_checkers": 4, "red_checkers": 4, "moves": ["GR_RGRGRG", "_RGRGRGRG", "R_GRGRGRG"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0053.jpg", "question": "A checker game is being played on a grid of 10 squares with 5 green and 4 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 9 checkers occupying 9 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["5", "3", "4", "2"], "answer": "3", "solution": {"start_position": "_GRGRGRGRG", "end_position": "RGRGRG_GRG", "green_checkers": 5, "red_checkers": 4, "moves": ["_GRGRGRGRG", "RG_GRGRGRG", "RGRG_GRGRG", "RGRGRG_GRG"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0054.jpg", "question": "A checker game is being played on a grid of 10 squares with 4 green and 5 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 9 checkers occupying 9 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["2", "5", "1", "3"], "answer": "5", "solution": {"start_position": "RRGRGR_RGG", "end_position": "RRRRGRG_GG", "green_checkers": 4, "red_checkers": 5, "moves": ["RRGRGR_RGG", "RRGR_RGRGG", "RR_RGRGRGG", "RRR_GRGRGG", "RRRRG_GRGG", "RRRRGRG_GG"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0055.jpg", "question": "A checker game is being played on a grid of 10 squares with 4 green and 5 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 9 checkers occupying 9 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["0", "3", "5", "2"], "answer": "2", "solution": {"start_position": "RRGRGR_RGG", "end_position": "RR_RGRGRGG", "green_checkers": 4, "red_checkers": 5, "moves": ["RRGRGR_RGG", "RRGR_RGRGG", "RR_RGRGRGG"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0056.jpg", "question": "A checker game is being played on a grid of 9 squares with 4 green and 4 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 8 checkers occupying 8 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["1", "0", "4", "3"], "answer": "4", "solution": {"start_position": "GRGRGR_RG", "end_position": "R_GRGRGRG", "green_checkers": 4, "red_checkers": 4, "moves": ["GRGRGR_RG", "GRGR_RGRG", "GR_RGRGRG", "_RGRGRGRG", "R_GRGRGRG"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0057.jpg", "question": "A checker game is being played on a grid of 10 squares with 4 green and 5 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 9 checkers occupying 9 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["1", "2", "0", "5"], "answer": "2", "solution": {"start_position": "RR_RGRGRGG", "end_position": "RRRRG_GRGG", "green_checkers": 4, "red_checkers": 5, "moves": ["RR_RGRGRGG", "RRR_GRGRGG", "RRRRG_GRGG"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0058.jpg", "question": "A checker game is being played on a grid of 11 squares with 5 green and 5 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 10 checkers occupying 10 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["5", "4", "1", "0"], "answer": "5", "solution": {"start_position": "RGRGRGRG_GR", "end_position": "RGR_RGRGRGG", "green_checkers": 5, "red_checkers": 5, "moves": ["RGRGRGRG_GR", "RGRGRGRGRG_", "RGRGRGRGR_G", "RGRGRGR_RGG", "RGRGR_RGRGG", "RGR_RGRGRGG"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0059.jpg", "question": "A checker game is being played on a grid of 6 squares with 3 green and 2 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 5 checkers occupying 5 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["2", "4", "3", "5"], "answer": "3", "solution": {"start_position": "RGRG_G", "end_position": "RR_GGG", "green_checkers": 3, "red_checkers": 2, "moves": ["RGRG_G", "RGR_GG", "R_RGGG", "RR_GGG"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0060.jpg", "question": "A checker game is being played on a grid of 6 squares with 1 green and 4 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 5 checkers occupying 5 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["0", "2", "1", "5"], "answer": "2", "solution": {"start_position": "RRRG_R", "end_position": "RRRRG_", "green_checkers": 1, "red_checkers": 4, "moves": ["RRRG_R", "RRR_GR", "RRRRG_"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0061.jpg", "question": "A checker game is being played on a grid of 8 squares with 4 green and 3 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 7 checkers occupying 7 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["1", "2", "4", "0"], "answer": "2", "solution": {"start_position": "GGGRG_RR", "end_position": "GGGR_RGR", "green_checkers": 4, "red_checkers": 3, "moves": ["GGGRG_RR", "GGGRGR_R", "GGGR_RGR"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0062.jpg", "question": "A checker game is being played on a grid of 8 squares with 2 green and 5 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 7 checkers occupying 7 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["0", "5", "2", "4"], "answer": "5", "solution": {"start_position": "GRGR_RRR", "end_position": "RRGRG_RR", "green_checkers": 2, "red_checkers": 5, "moves": ["GRGR_RRR", "GR_RGRRR", "_RGRGRRR", "R_GRGRRR", "RRG_GRRR", "RRGRG_RR"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0063.jpg", "question": "A checker game is being played on a grid of 7 squares with 3 green and 3 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 6 checkers occupying 6 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["2", "3", "0", "5"], "answer": "2", "solution": {"start_position": "GGG_RRR", "end_position": "GGRG_RR", "green_checkers": 3, "red_checkers": 3, "moves": ["GGG_RRR", "GG_GRRR", "GGRG_RR"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0064.jpg", "question": "A checker game is being played on a grid of 6 squares with 2 green and 3 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 5 checkers occupying 5 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["4", "5", "3", "2"], "answer": "4", "solution": {"start_position": "R_GRGR", "end_position": "RR_RGG", "green_checkers": 2, "red_checkers": 3, "moves": ["R_GRGR", "RRG_GR", "RRGRG_", "RRGR_G", "RR_RGG"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0065.jpg", "question": "A checker game is being played on a grid of 10 squares with 4 green and 5 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 9 checkers occupying 9 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["3", "5", "0", "2"], "answer": "3", "solution": {"start_position": "GRGRGR_RGR", "end_position": "_RGRGRGRGR", "green_checkers": 4, "red_checkers": 5, "moves": ["GRGRGR_RGR", "GRGR_RGRGR", "GR_RGRGRGR", "_RGRGRGRGR"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0066.jpg", "question": "A checker game is being played on a grid of 9 squares with 3 green and 5 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 8 checkers occupying 8 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["5", "3", "2", "4"], "answer": "4", "solution": {"start_position": "RRRG_GRGR", "end_position": "RRRGR_RGG", "green_checkers": 3, "red_checkers": 5, "moves": ["RRRG_GRGR", "RRRGRG_GR", "RRRGRGRG_", "RRRGRGR_G", "RRRGR_RGG"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0067.jpg", "question": "A checker game is being played on a grid of 8 squares with 5 green and 2 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 7 checkers occupying 7 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["2", "5", "1", "3"], "answer": "3", "solution": {"start_position": "GGRG_GRG", "end_position": "GGR_RGGG", "green_checkers": 5, "red_checkers": 2, "moves": ["GGRG_GRG", "GGRGRG_G", "GGRGR_GG", "GGR_RGGG"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0068.jpg", "question": "A checker game is being played on a grid of 11 squares with 5 green and 5 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 10 checkers occupying 10 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["3", "4", "1", "5"], "answer": "4", "solution": {"start_position": "GGRGRGR_RGR", "end_position": "_GRGRGRGRGR", "green_checkers": 5, "red_checkers": 5, "moves": ["GGRGRGR_RGR", "GGRGR_RGRGR", "GGR_RGRGRGR", "G_RGRGRGRGR", "_GRGRGRGRGR"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0069.jpg", "question": "A checker game is being played on a grid of 11 squares with 5 green and 5 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 10 checkers occupying 10 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["3", "5", "0", "2"], "answer": "2", "solution": {"start_position": "GGGGRG_RRRR", "end_position": "GGGGR_RGRRR", "green_checkers": 5, "red_checkers": 5, "moves": ["GGGGRG_RRRR", "GGGGRGR_RRR", "GGGGR_RGRRR"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0070.jpg", "question": "A checker game is being played on a grid of 8 squares with 2 green and 5 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 7 checkers occupying 7 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["0", "3", "2", "4"], "answer": "3", "solution": {"start_position": "RRGR_RGR", "end_position": "RRRRG_GR", "green_checkers": 2, "red_checkers": 5, "moves": ["RRGR_RGR", "RR_RGRGR", "RRR_GRGR", "RRRRG_GR"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0071.jpg", "question": "A checker game is being played on a grid of 8 squares with 5 green and 2 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 7 checkers occupying 7 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["1", "5", "2", "4"], "answer": "1", "solution": {"start_position": "GGRG_GRG", "end_position": "GGRGRG_G", "green_checkers": 5, "red_checkers": 2, "moves": ["GGRG_GRG", "GGRGRG_G"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0072.jpg", "question": "A checker game is being played on a grid of 6 squares with 1 green and 4 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 5 checkers occupying 5 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["0", "4", "1", "2"], "answer": "1", "solution": {"start_position": "R_GRRR", "end_position": "RRG_RR", "green_checkers": 1, "red_checkers": 4, "moves": ["R_GRRR", "RRG_RR"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0073.jpg", "question": "A checker game is being played on a grid of 11 squares with 5 green and 5 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 10 checkers occupying 10 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["3", "2", "5", "0"], "answer": "3", "solution": {"start_position": "GGRGR_RGRGR", "end_position": "_GRGRGRGRGR", "green_checkers": 5, "red_checkers": 5, "moves": ["GGRGR_RGRGR", "GGR_RGRGRGR", "G_RGRGRGRGR", "_GRGRGRGRGR"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0074.jpg", "question": "A checker game is being played on a grid of 10 squares with 5 green and 4 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 9 checkers occupying 9 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["2", "3", "5", "4"], "answer": "3", "solution": {"start_position": "GGGGG_RRRR", "end_position": "GGGGRGR_RR", "green_checkers": 5, "red_checkers": 4, "moves": ["GGGGG_RRRR", "GGGG_GRRRR", "GGGGRG_RRR", "GGGGRGR_RR"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0075.jpg", "question": "A checker game is being played on a grid of 9 squares with 4 green and 4 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 8 checkers occupying 8 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["1", "4", "5", "3"], "answer": "5", "solution": {"start_position": "GRGR_RGRG", "end_position": "RRGRG_GRG", "green_checkers": 4, "red_checkers": 4, "moves": ["GRGR_RGRG", "GR_RGRGRG", "_RGRGRGRG", "R_GRGRGRG", "RRG_GRGRG", "RRGRG_GRG"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0076.jpg", "question": "A checker game is being played on a grid of 6 squares with 3 green and 2 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 5 checkers occupying 5 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["5", "2", "1", "4"], "answer": "2", "solution": {"start_position": "GG_GRR", "end_position": "GGRGR_", "green_checkers": 3, "red_checkers": 2, "moves": ["GG_GRR", "GGRG_R", "GGRGR_"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0077.jpg", "question": "A checker game is being played on a grid of 8 squares with 4 green and 3 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 7 checkers occupying 7 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["2", "0", "1", "5"], "answer": "1", "solution": {"start_position": "GRGRGR_G", "end_position": "GRGR_RGG", "green_checkers": 4, "red_checkers": 3, "moves": ["GRGRGR_G", "GRGR_RGG"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0078.jpg", "question": "A checker game is being played on a grid of 11 squares with 5 green and 5 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 10 checkers occupying 10 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["3", "0", "2", "4"], "answer": "2", "solution": {"start_position": "RGRGR_RGRGG", "end_position": "R_RGRGRGRGG", "green_checkers": 5, "red_checkers": 5, "moves": ["RGRGR_RGRGG", "RGR_RGRGRGG", "R_RGRGRGRGG"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0079.jpg", "question": "A checker game is being played on a grid of 7 squares with 4 green and 2 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 6 checkers occupying 6 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["4", "3", "5", "0"], "answer": "5", "solution": {"start_position": "GRG_GRG", "end_position": "R_GRGGG", "green_checkers": 4, "red_checkers": 2, "moves": ["GRG_GRG", "GRGRG_G", "GRGR_GG", "GR_RGGG", "_RGRGGG", "R_GRGGG"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0080.jpg", "question": "A checker game is being played on a grid of 6 squares with 1 green and 4 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 5 checkers occupying 5 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["3", "1", "2", "5"], "answer": "5", "solution": {"start_position": "RG_RRR", "end_position": "RRR_GR", "green_checkers": 1, "red_checkers": 4, "moves": ["RG_RRR", "R_GRRR", "RRG_RR", "RR_GRR", "RRRG_R", "RRR_GR"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0081.jpg", "question": "A checker game is being played on a grid of 8 squares with 4 green and 3 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 7 checkers occupying 7 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["1", "0", "4", "3"], "answer": "3", "solution": {"start_position": "G_GRGRGR", "end_position": "GRGRGRG_", "green_checkers": 4, "red_checkers": 3, "moves": ["G_GRGRGR", "GRG_GRGR", "GRGRG_GR", "GRGRGRG_"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0082.jpg", "question": "A checker game is being played on a grid of 8 squares with 4 green and 3 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 7 checkers occupying 7 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["0", "3", "4", "2"], "answer": "2", "solution": {"start_position": "GRGRGRG_", "end_position": "GRGR_RGG", "green_checkers": 4, "red_checkers": 3, "moves": ["GRGRGRG_", "GRGRGR_G", "GRGR_RGG"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0083.jpg", "question": "A checker game is being played on a grid of 7 squares with 5 green and 1 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 6 checkers occupying 6 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["0", "4", "1", "2"], "answer": "1", "solution": {"start_position": "_GRGGGG", "end_position": "RG_GGGG", "green_checkers": 5, "red_checkers": 1, "moves": ["_GRGGGG", "RG_GGGG"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0084.jpg", "question": "A checker game is being played on a grid of 7 squares with 4 green and 2 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 6 checkers occupying 6 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["0", "3", "1", "2"], "answer": "1", "solution": {"start_position": "GGG_GRR", "end_position": "GGGRG_R", "green_checkers": 4, "red_checkers": 2, "moves": ["GGG_GRR", "GGGRG_R"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0085.jpg", "question": "A checker game is being played on a grid of 9 squares with 5 green and 3 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 8 checkers occupying 8 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["0", "2", "5", "3"], "answer": "3", "solution": {"start_position": "GGRGRG_GR", "end_position": "GGRGR_RGG", "green_checkers": 5, "red_checkers": 3, "moves": ["GGRGRG_GR", "GGRGRGRG_", "GGRGRGR_G", "GGRGR_RGG"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0086.jpg", "question": "A checker game is being played on a grid of 7 squares with 1 green and 5 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 6 checkers occupying 6 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["1", "0", "5", "3"], "answer": "5", "solution": {"start_position": "RRG_RRR", "end_position": "RRRR_GR", "green_checkers": 1, "red_checkers": 5, "moves": ["RRG_RRR", "RR_GRRR", "RRRG_RR", "RRR_GRR", "RRRRG_R", "RRRR_GR"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0087.jpg", "question": "A checker game is being played on a grid of 7 squares with 4 green and 2 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 6 checkers occupying 6 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["1", "5", "3", "2"], "answer": "3", "solution": {"start_position": "GRG_GRG", "end_position": "GR_RGGG", "green_checkers": 4, "red_checkers": 2, "moves": ["GRG_GRG", "GRGRG_G", "GRGR_GG", "GR_RGGG"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0088.jpg", "question": "A checker game is being played on a grid of 7 squares with 5 green and 1 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 6 checkers occupying 6 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["4", "5", "0", "3"], "answer": "3", "solution": {"start_position": "G_RGGGG", "end_position": "R_GGGGG", "green_checkers": 5, "red_checkers": 1, "moves": ["G_RGGGG", "_GRGGGG", "RG_GGGG", "R_GGGGG"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0089.jpg", "question": "A checker game is being played on a grid of 6 squares with 2 green and 3 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 5 checkers occupying 5 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["4", "1", "3", "5"], "answer": "5", "solution": {"start_position": "GRGR_R", "end_position": "RRGRG_", "green_checkers": 2, "red_checkers": 3, "moves": ["GRGR_R", "GR_RGR", "_RGRGR", "R_GRGR", "RRG_GR", "RRGRG_"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0090.jpg", "question": "A checker game is being played on a grid of 10 squares with 5 green and 4 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 9 checkers occupying 9 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["2", "5", "4", "3"], "answer": "5", "solution": {"start_position": "RG_GRGRGRG", "end_position": "RGRGR_RGGG", "green_checkers": 5, "red_checkers": 4, "moves": ["RG_GRGRGRG", "RGRG_GRGRG", "RGRGRG_GRG", "RGRGRGRG_G", "RGRGRGR_GG", "RGRGR_RGGG"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0091.jpg", "question": "A checker game is being played on a grid of 6 squares with 4 green and 1 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 5 checkers occupying 5 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["1", "5", "4", "0"], "answer": "1", "solution": {"start_position": "GG_RGG", "end_position": "G_GRGG", "green_checkers": 4, "red_checkers": 1, "moves": ["GG_RGG", "G_GRGG"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0092.jpg", "question": "A checker game is being played on a grid of 7 squares with 2 green and 4 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 6 checkers occupying 6 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["1", "5", "4", "3"], "answer": "4", "solution": {"start_position": "RRGRG_R", "end_position": "RRR_GRG", "green_checkers": 2, "red_checkers": 4, "moves": ["RRGRG_R", "RRGRGR_", "RRGR_RG", "RR_RGRG", "RRR_GRG"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0093.jpg", "question": "A checker game is being played on a grid of 8 squares with 2 green and 5 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 7 checkers occupying 7 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["1", "3", "0", "2"], "answer": "1", "solution": {"start_position": "RRRRGRG_", "end_position": "RRRRGR_G", "green_checkers": 2, "red_checkers": 5, "moves": ["RRRRGRG_", "RRRRGR_G"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0094.jpg", "question": "A checker game is being played on a grid of 10 squares with 5 green and 4 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 9 checkers occupying 9 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["5", "1", "4", "2"], "answer": "2", "solution": {"start_position": "GGGGR_RGRR", "end_position": "GG_GRGRGRR", "green_checkers": 5, "red_checkers": 4, "moves": ["GGGGR_RGRR", "GGG_RGRGRR", "GG_GRGRGRR"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0095.jpg", "question": "A checker game is being played on a grid of 10 squares with 4 green and 5 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 9 checkers occupying 9 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["2", "5", "3", "0"], "answer": "3", "solution": {"start_position": "RRGRG_GRGR", "end_position": "RRGRGRGR_G", "green_checkers": 4, "red_checkers": 5, "moves": ["RRGRG_GRGR", "RRGRGRG_GR", "RRGRGRGRG_", "RRGRGRGR_G"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0096.jpg", "question": "A checker game is being played on a grid of 9 squares with 4 green and 4 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 8 checkers occupying 8 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["4", "2", "1", "5"], "answer": "1", "solution": {"start_position": "RRGRGR_GG", "end_position": "RRGR_RGGG", "green_checkers": 4, "red_checkers": 4, "moves": ["RRGRGR_GG", "RRGR_RGGG"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0097.jpg", "question": "A checker game is being played on a grid of 10 squares with 4 green and 5 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 9 checkers occupying 9 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["3", "4", "5", "1"], "answer": "3", "solution": {"start_position": "GRGRG_GRRR", "end_position": "GRGRGR_RGR", "green_checkers": 4, "red_checkers": 5, "moves": ["GRGRG_GRRR", "GRGRGRG_RR", "GRGRGRGR_R", "GRGRGR_RGR"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0098.jpg", "question": "A checker game is being played on a grid of 6 squares with 3 green and 2 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 5 checkers occupying 5 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["5", "0", "2", "1"], "answer": "5", "solution": {"start_position": "GG_GRR", "end_position": "_GRGRG", "green_checkers": 3, "red_checkers": 2, "moves": ["GG_GRR", "GGRG_R", "GGRGR_", "GGR_RG", "G_RGRG", "_GRGRG"]}, "source_file": "checker_move.json"}
{"image": "images/checker_move/checker_move_0099.jpg", "question": "A checker game is being played on a grid of 9 squares with 4 green and 4 red checkers. Initially, the checkers are arranged as shown in the starting configuration with the 8 checkers occupying 8 squares and one unoccupied square. Green checkers only move rightward and red checkers only move leftward. Every move is either i) a slide to the adjacent empty square, or ii) a jump over one position to an empty square, provided the checker being jumped over is of a different colour. Each square can accommodate a maximum of one checker at any time. How many moves are required to reach the ending configuration from the starting configuration following the specified rules?", "options": ["0", "1", "2", "3"], "answer": "1", "solution": {"start_position": "GG_RGRGRR", "end_position": "G_GRGRGRR", "green_checkers": 4, "red_checkers": 4, "moves": ["GG_RGRGRR", "G_GRGRGRR"]}, "source_file": "checker_move.json"}
